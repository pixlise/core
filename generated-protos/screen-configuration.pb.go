// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: screen-configuration.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScreenConfigurationCSS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateColumns string `protobuf:"bytes,1,opt,name=templateColumns,proto3" json:"templateColumns,omitempty"`
	TemplateRows    string `protobuf:"bytes,2,opt,name=templateRows,proto3" json:"templateRows,omitempty"`
}

func (x *ScreenConfigurationCSS) Reset() {
	*x = ScreenConfigurationCSS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenConfigurationCSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenConfigurationCSS) ProtoMessage() {}

func (x *ScreenConfigurationCSS) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenConfigurationCSS.ProtoReflect.Descriptor instead.
func (*ScreenConfigurationCSS) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{0}
}

func (x *ScreenConfigurationCSS) GetTemplateColumns() string {
	if x != nil {
		return x.TemplateColumns
	}
	return ""
}

func (x *ScreenConfigurationCSS) GetTemplateRows() string {
	if x != nil {
		return x.TemplateRows
	}
	return ""
}

type ScreenConfigurationRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ScreenConfigurationRow) Reset() {
	*x = ScreenConfigurationRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenConfigurationRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenConfigurationRow) ProtoMessage() {}

func (x *ScreenConfigurationRow) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenConfigurationRow.ProtoReflect.Descriptor instead.
func (*ScreenConfigurationRow) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{1}
}

func (x *ScreenConfigurationRow) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ScreenConfigurationColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *ScreenConfigurationColumn) Reset() {
	*x = ScreenConfigurationColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenConfigurationColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenConfigurationColumn) ProtoMessage() {}

func (x *ScreenConfigurationColumn) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenConfigurationColumn.ProtoReflect.Descriptor instead.
func (*ScreenConfigurationColumn) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{2}
}

func (x *ScreenConfigurationColumn) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type WidgetLayoutConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,omitempty"`  
	Type        string      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StartRow    int32       `protobuf:"varint,3,opt,name=startRow,proto3" json:"startRow,omitempty"`
	StartColumn int32       `protobuf:"varint,4,opt,name=startColumn,proto3" json:"startColumn,omitempty"`
	EndRow      int32       `protobuf:"varint,5,opt,name=endRow,proto3" json:"endRow,omitempty"`
	EndColumn   int32       `protobuf:"varint,6,opt,name=endColumn,proto3" json:"endColumn,omitempty"`
	Data        *WidgetData `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty" bson:"-"`  
}

func (x *WidgetLayoutConfiguration) Reset() {
	*x = WidgetLayoutConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetLayoutConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetLayoutConfiguration) ProtoMessage() {}

func (x *WidgetLayoutConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetLayoutConfiguration.ProtoReflect.Descriptor instead.
func (*WidgetLayoutConfiguration) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{3}
}

func (x *WidgetLayoutConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WidgetLayoutConfiguration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WidgetLayoutConfiguration) GetStartRow() int32 {
	if x != nil {
		return x.StartRow
	}
	return 0
}

func (x *WidgetLayoutConfiguration) GetStartColumn() int32 {
	if x != nil {
		return x.StartColumn
	}
	return 0
}

func (x *WidgetLayoutConfiguration) GetEndRow() int32 {
	if x != nil {
		return x.EndRow
	}
	return 0
}

func (x *WidgetLayoutConfiguration) GetEndColumn() int32 {
	if x != nil {
		return x.EndColumn
	}
	return 0
}

func (x *WidgetLayoutConfiguration) GetData() *WidgetData {
	if x != nil {
		return x.Data
	}
	return nil
}

type FullScreenLayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabId          string                       `protobuf:"bytes,1,opt,name=tabId,proto3" json:"tabId,omitempty"`
	TabName        string                       `protobuf:"bytes,2,opt,name=tabName,proto3" json:"tabName,omitempty"`
	TabDescription string                       `protobuf:"bytes,3,opt,name=tabDescription,proto3" json:"tabDescription,omitempty"`
	Tags           []string                     `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Hidden         bool                         `protobuf:"varint,8,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Rows           []*ScreenConfigurationRow    `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
	Columns        []*ScreenConfigurationColumn `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	Widgets        []*WidgetLayoutConfiguration `protobuf:"bytes,6,rep,name=widgets,proto3" json:"widgets,omitempty"`
}

func (x *FullScreenLayout) Reset() {
	*x = FullScreenLayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullScreenLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullScreenLayout) ProtoMessage() {}

func (x *FullScreenLayout) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullScreenLayout.ProtoReflect.Descriptor instead.
func (*FullScreenLayout) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{4}
}

func (x *FullScreenLayout) GetTabId() string {
	if x != nil {
		return x.TabId
	}
	return ""
}

func (x *FullScreenLayout) GetTabName() string {
	if x != nil {
		return x.TabName
	}
	return ""
}

func (x *FullScreenLayout) GetTabDescription() string {
	if x != nil {
		return x.TabDescription
	}
	return ""
}

func (x *FullScreenLayout) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *FullScreenLayout) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *FullScreenLayout) GetRows() []*ScreenConfigurationRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *FullScreenLayout) GetColumns() []*ScreenConfigurationColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *FullScreenLayout) GetWidgets() []*WidgetLayoutConfiguration {
	if x != nil {
		return x.Widgets
	}
	return nil
}

type ScanCalibrationConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EVstart      float64 `protobuf:"fixed64,1,opt,name=eVstart,proto3" json:"eVstart,omitempty"`
	EVperChannel float64 `protobuf:"fixed64,2,opt,name=eVperChannel,proto3" json:"eVperChannel,omitempty"`
	Detector     string  `protobuf:"bytes,3,opt,name=detector,proto3" json:"detector,omitempty"`
}

func (x *ScanCalibrationConfiguration) Reset() {
	*x = ScanCalibrationConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanCalibrationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanCalibrationConfiguration) ProtoMessage() {}

func (x *ScanCalibrationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanCalibrationConfiguration.ProtoReflect.Descriptor instead.
func (*ScanCalibrationConfiguration) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{5}
}

func (x *ScanCalibrationConfiguration) GetEVstart() float64 {
	if x != nil {
		return x.EVstart
	}
	return 0
}

func (x *ScanCalibrationConfiguration) GetEVperChannel() float64 {
	if x != nil {
		return x.EVperChannel
	}
	return 0
}

func (x *ScanCalibrationConfiguration) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

type ScanConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,omitempty"`  
	QuantId      string                          `protobuf:"bytes,2,opt,name=quantId,proto3" json:"quantId,omitempty"`
	Calibrations []*ScanCalibrationConfiguration `protobuf:"bytes,3,rep,name=calibrations,proto3" json:"calibrations,omitempty"`
	Colour       string                          `protobuf:"bytes,4,opt,name=colour,proto3" json:"colour,omitempty"`
}

func (x *ScanConfiguration) Reset() {
	*x = ScanConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanConfiguration) ProtoMessage() {}

func (x *ScanConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanConfiguration.ProtoReflect.Descriptor instead.
func (*ScanConfiguration) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{6}
}

func (x *ScanConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScanConfiguration) GetQuantId() string {
	if x != nil {
		return x.QuantId
	}
	return ""
}

func (x *ScanConfiguration) GetCalibrations() []*ScanCalibrationConfiguration {
	if x != nil {
		return x.Calibrations
	}
	return nil
}

func (x *ScanConfiguration) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

type ScreenConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,omitempty"`  
	Name                 string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	BrowseTabHidden      bool                          `protobuf:"varint,11,opt,name=browseTabHidden,proto3" json:"browseTabHidden,omitempty"`
	CodeEditorTabHidden  bool                          `protobuf:"varint,12,opt,name=codeEditorTabHidden,proto3" json:"codeEditorTabHidden,omitempty"`
	ElementMapsTabHidden bool                          `protobuf:"varint,13,opt,name=elementMapsTabHidden,proto3" json:"elementMapsTabHidden,omitempty"`
	Layouts              []*FullScreenLayout           `protobuf:"bytes,4,rep,name=layouts,proto3" json:"layouts,omitempty"`
	Tags                 []string                      `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	ModifiedUnixSec      uint32                        `protobuf:"varint,8,opt,name=modifiedUnixSec,proto3" json:"modifiedUnixSec,omitempty"`
	ScanConfigurations   map[string]*ScanConfiguration `protobuf:"bytes,9,rep,name=scanConfigurations,proto3" json:"scanConfigurations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Owner                *OwnershipSummary             `protobuf:"bytes,10,opt,name=owner,proto3" json:"owner,omitempty" bson:"-"`                        
	SnapshotParentId     string                        `protobuf:"bytes,14,opt,name=snapshotParentId,proto3" json:"snapshotParentId,omitempty" bson:"snapshotParentId,omitempty"`  
}

func (x *ScreenConfiguration) Reset() {
	*x = ScreenConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_screen_configuration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenConfiguration) ProtoMessage() {}

func (x *ScreenConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_screen_configuration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenConfiguration.ProtoReflect.Descriptor instead.
func (*ScreenConfiguration) Descriptor() ([]byte, []int) {
	return file_screen_configuration_proto_rawDescGZIP(), []int{7}
}

func (x *ScreenConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScreenConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScreenConfiguration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ScreenConfiguration) GetBrowseTabHidden() bool {
	if x != nil {
		return x.BrowseTabHidden
	}
	return false
}

func (x *ScreenConfiguration) GetCodeEditorTabHidden() bool {
	if x != nil {
		return x.CodeEditorTabHidden
	}
	return false
}

func (x *ScreenConfiguration) GetElementMapsTabHidden() bool {
	if x != nil {
		return x.ElementMapsTabHidden
	}
	return false
}

func (x *ScreenConfiguration) GetLayouts() []*FullScreenLayout {
	if x != nil {
		return x.Layouts
	}
	return nil
}

func (x *ScreenConfiguration) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ScreenConfiguration) GetModifiedUnixSec() uint32 {
	if x != nil {
		return x.ModifiedUnixSec
	}
	return 0
}

func (x *ScreenConfiguration) GetScanConfigurations() map[string]*ScanConfiguration {
	if x != nil {
		return x.ScanConfigurations
	}
	return nil
}

func (x *ScreenConfiguration) GetOwner() *OwnershipSummary {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ScreenConfiguration) GetSnapshotParentId() string {
	if x != nil {
		return x.SnapshotParentId
	}
	return ""
}

var File_screen_configuration_proto protoreflect.FileDescriptor

var file_screen_configuration_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x16, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x53,
	0x53, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x22,
	0x30, 0x0a, 0x16, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x31, 0x0a, 0x19, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x22, 0xd4, 0x01, 0x0a, 0x19, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x02, 0x0a, 0x10,
	0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x62, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x22, 0x78, 0x0a,
	0x1c, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x56, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x65, 0x56, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x56, 0x70, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65,
	0x56, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x53, 0x63, 0x61, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x53, 0x63, 0x61, 0x6e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x69, 0x62, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f,
	0x75, 0x72, 0x22, 0xe4, 0x04, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x54, 0x61, 0x62, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x54, 0x61, 0x62, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f,
	0x64, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x48, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x54, 0x61, 0x62, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x14,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x54, 0x61, 0x62, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x54, 0x61, 0x62, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x12, 0x2b, 0x0a, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x55, 0x6e, 0x69,
	0x78, 0x53, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x12, 0x73,
	0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x73, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x59,
	0x0a, 0x17, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_screen_configuration_proto_rawDescOnce sync.Once
	file_screen_configuration_proto_rawDescData = file_screen_configuration_proto_rawDesc
)

func file_screen_configuration_proto_rawDescGZIP() []byte {
	file_screen_configuration_proto_rawDescOnce.Do(func() {
		file_screen_configuration_proto_rawDescData = protoimpl.X.CompressGZIP(file_screen_configuration_proto_rawDescData)
	})
	return file_screen_configuration_proto_rawDescData
}

var file_screen_configuration_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_screen_configuration_proto_goTypes = []interface{}{
	(*ScreenConfigurationCSS)(nil),       // 0: ScreenConfigurationCSS
	(*ScreenConfigurationRow)(nil),       // 1: ScreenConfigurationRow
	(*ScreenConfigurationColumn)(nil),    // 2: ScreenConfigurationColumn
	(*WidgetLayoutConfiguration)(nil),    // 3: WidgetLayoutConfiguration
	(*FullScreenLayout)(nil),             // 4: FullScreenLayout
	(*ScanCalibrationConfiguration)(nil), // 5: ScanCalibrationConfiguration
	(*ScanConfiguration)(nil),            // 6: ScanConfiguration
	(*ScreenConfiguration)(nil),          // 7: ScreenConfiguration
	nil,                                  // 8: ScreenConfiguration.ScanConfigurationsEntry
	(*WidgetData)(nil),                   // 9: WidgetData
	(*OwnershipSummary)(nil),             // 10: OwnershipSummary
}
var file_screen_configuration_proto_depIdxs = []int32{
	9,  // 0: WidgetLayoutConfiguration.data:type_name -> WidgetData
	1,  // 1: FullScreenLayout.rows:type_name -> ScreenConfigurationRow
	2,  // 2: FullScreenLayout.columns:type_name -> ScreenConfigurationColumn
	3,  // 3: FullScreenLayout.widgets:type_name -> WidgetLayoutConfiguration
	5,  // 4: ScanConfiguration.calibrations:type_name -> ScanCalibrationConfiguration
	4,  // 5: ScreenConfiguration.layouts:type_name -> FullScreenLayout
	8,  // 6: ScreenConfiguration.scanConfigurations:type_name -> ScreenConfiguration.ScanConfigurationsEntry
	10, // 7: ScreenConfiguration.owner:type_name -> OwnershipSummary
	6,  // 8: ScreenConfiguration.ScanConfigurationsEntry.value:type_name -> ScanConfiguration
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_screen_configuration_proto_init() }
func file_screen_configuration_proto_init() {
	if File_screen_configuration_proto != nil {
		return
	}
	file_ownership_access_proto_init()
	file_widget_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_screen_configuration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenConfigurationCSS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenConfigurationRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenConfigurationColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetLayoutConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullScreenLayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanCalibrationConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_screen_configuration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_screen_configuration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_screen_configuration_proto_goTypes,
		DependencyIndexes: file_screen_configuration_proto_depIdxs,
		MessageInfos:      file_screen_configuration_proto_msgTypes,
	}.Build()
	File_screen_configuration_proto = out.File
	file_screen_configuration_proto_rawDesc = nil
	file_screen_configuration_proto_goTypes = nil
	file_screen_configuration_proto_depIdxs = nil
}
