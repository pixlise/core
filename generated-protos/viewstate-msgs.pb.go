// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: viewstate-msgs.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// API is agnostic to the id, UI can store anything there
// so this allows us to implement different views, for example
// scanId_analysis would do what old API allowed... Multi-scan
// views can have some other scheme
// requires(NONE)
type ViewStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ViewStateReq) Reset() {
	*x = ViewStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viewstate_msgs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewStateReq) ProtoMessage() {}

func (x *ViewStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_viewstate_msgs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewStateReq.ProtoReflect.Descriptor instead.
func (*ViewStateReq) Descriptor() ([]byte, []int) {
	return file_viewstate_msgs_proto_rawDescGZIP(), []int{0}
}

func (x *ViewStateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ViewStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewState *ViewState `protobuf:"bytes,1,opt,name=viewState,proto3" json:"viewState,omitempty"`
}

func (x *ViewStateResp) Reset() {
	*x = ViewStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viewstate_msgs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewStateResp) ProtoMessage() {}

func (x *ViewStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_viewstate_msgs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewStateResp.ProtoReflect.Descriptor instead.
func (*ViewStateResp) Descriptor() ([]byte, []int) {
	return file_viewstate_msgs_proto_rawDescGZIP(), []int{1}
}

func (x *ViewStateResp) GetViewState() *ViewState {
	if x != nil {
		return x.ViewState
	}
	return nil
}

// Writes a part of the view state to state stored for the given id
// requires(EDIT_VIEW_STATE)
type ViewStateItemWriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Widget:
	//
	//	*ViewStateItemWriteReq_AnalysisLayout
	//	*ViewStateItemWriteReq_ContextImages
	//	*ViewStateItemWriteReq_Histograms
	//	*ViewStateItemWriteReq_ChordDiagrams
	//	*ViewStateItemWriteReq_TernaryPlots
	//	*ViewStateItemWriteReq_BinaryPlots
	//	*ViewStateItemWriteReq_Tables
	//	*ViewStateItemWriteReq_RoiQuantTables
	//	*ViewStateItemWriteReq_Variograms
	//	*ViewStateItemWriteReq_Spectrums
	//	*ViewStateItemWriteReq_RgbuPlots
	//	*ViewStateItemWriteReq_SingleAxisRGBU
	//	*ViewStateItemWriteReq_RgbuImages
	//	*ViewStateItemWriteReq_Parallelograms
	//	*ViewStateItemWriteReq_Annotations
	//	*ViewStateItemWriteReq_Rois
	//	*ViewStateItemWriteReq_Quantification
	//	*ViewStateItemWriteReq_Selection
	Widget isViewStateItemWriteReq_Widget `protobuf_oneof:"Widget"`
}

func (x *ViewStateItemWriteReq) Reset() {
	*x = ViewStateItemWriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viewstate_msgs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewStateItemWriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewStateItemWriteReq) ProtoMessage() {}

func (x *ViewStateItemWriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_viewstate_msgs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewStateItemWriteReq.ProtoReflect.Descriptor instead.
func (*ViewStateItemWriteReq) Descriptor() ([]byte, []int) {
	return file_viewstate_msgs_proto_rawDescGZIP(), []int{2}
}

func (x *ViewStateItemWriteReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ViewStateItemWriteReq) GetWidget() isViewStateItemWriteReq_Widget {
	if m != nil {
		return m.Widget
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetAnalysisLayout() *AnalysisLayout {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_AnalysisLayout); ok {
		return x.AnalysisLayout
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetContextImages() *ContextImageState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_ContextImages); ok {
		return x.ContextImages
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetHistograms() *HistogramState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Histograms); ok {
		return x.Histograms
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetChordDiagrams() *ChordState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_ChordDiagrams); ok {
		return x.ChordDiagrams
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetTernaryPlots() *TernaryState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_TernaryPlots); ok {
		return x.TernaryPlots
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetBinaryPlots() *BinaryState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_BinaryPlots); ok {
		return x.BinaryPlots
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetTables() *TableState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Tables); ok {
		return x.Tables
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetRoiQuantTables() *ROIQuantTableState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_RoiQuantTables); ok {
		return x.RoiQuantTables
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetVariograms() *VariogramState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Variograms); ok {
		return x.Variograms
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetSpectrums() *SpectrumWidgetState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Spectrums); ok {
		return x.Spectrums
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetRgbuPlots() *RGBUPlotWidgetState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_RgbuPlots); ok {
		return x.RgbuPlots
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetSingleAxisRGBU() *SingleAxisRGBUWidgetState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_SingleAxisRGBU); ok {
		return x.SingleAxisRGBU
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetRgbuImages() *RGBUImagesWidgetState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_RgbuImages); ok {
		return x.RgbuImages
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetParallelograms() *ParallelogramWidgetState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Parallelograms); ok {
		return x.Parallelograms
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetAnnotations() *AnnotationDisplayState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Annotations); ok {
		return x.Annotations
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetRois() *ROIDisplayState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Rois); ok {
		return x.Rois
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetQuantification() *QuantificationState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Quantification); ok {
		return x.Quantification
	}
	return nil
}

func (x *ViewStateItemWriteReq) GetSelection() *SelectionState {
	if x, ok := x.GetWidget().(*ViewStateItemWriteReq_Selection); ok {
		return x.Selection
	}
	return nil
}

type isViewStateItemWriteReq_Widget interface {
	isViewStateItemWriteReq_Widget()
}

type ViewStateItemWriteReq_AnalysisLayout struct {
	AnalysisLayout *AnalysisLayout `protobuf:"bytes,4,opt,name=analysisLayout,proto3,oneof"`
}

type ViewStateItemWriteReq_ContextImages struct {
	ContextImages *ContextImageState `protobuf:"bytes,5,opt,name=contextImages,proto3,oneof"`
}

type ViewStateItemWriteReq_Histograms struct {
	Histograms *HistogramState `protobuf:"bytes,6,opt,name=histograms,proto3,oneof"`
}

type ViewStateItemWriteReq_ChordDiagrams struct {
	ChordDiagrams *ChordState `protobuf:"bytes,7,opt,name=chordDiagrams,proto3,oneof"`
}

type ViewStateItemWriteReq_TernaryPlots struct {
	TernaryPlots *TernaryState `protobuf:"bytes,8,opt,name=ternaryPlots,proto3,oneof"`
}

type ViewStateItemWriteReq_BinaryPlots struct {
	BinaryPlots *BinaryState `protobuf:"bytes,9,opt,name=binaryPlots,proto3,oneof"`
}

type ViewStateItemWriteReq_Tables struct {
	Tables *TableState `protobuf:"bytes,10,opt,name=tables,proto3,oneof"`
}

type ViewStateItemWriteReq_RoiQuantTables struct {
	RoiQuantTables *ROIQuantTableState `protobuf:"bytes,11,opt,name=roiQuantTables,proto3,oneof"`
}

type ViewStateItemWriteReq_Variograms struct {
	Variograms *VariogramState `protobuf:"bytes,12,opt,name=variograms,proto3,oneof"`
}

type ViewStateItemWriteReq_Spectrums struct {
	Spectrums *SpectrumWidgetState `protobuf:"bytes,13,opt,name=spectrums,proto3,oneof"`
}

type ViewStateItemWriteReq_RgbuPlots struct {
	RgbuPlots *RGBUPlotWidgetState `protobuf:"bytes,14,opt,name=rgbuPlots,proto3,oneof"`
}

type ViewStateItemWriteReq_SingleAxisRGBU struct {
	SingleAxisRGBU *SingleAxisRGBUWidgetState `protobuf:"bytes,15,opt,name=singleAxisRGBU,proto3,oneof"`
}

type ViewStateItemWriteReq_RgbuImages struct {
	RgbuImages *RGBUImagesWidgetState `protobuf:"bytes,16,opt,name=rgbuImages,proto3,oneof"`
}

type ViewStateItemWriteReq_Parallelograms struct {
	Parallelograms *ParallelogramWidgetState `protobuf:"bytes,17,opt,name=parallelograms,proto3,oneof"`
}

type ViewStateItemWriteReq_Annotations struct {
	Annotations *AnnotationDisplayState `protobuf:"bytes,18,opt,name=annotations,proto3,oneof"`
}

type ViewStateItemWriteReq_Rois struct {
	Rois *ROIDisplayState `protobuf:"bytes,19,opt,name=rois,proto3,oneof"`
}

type ViewStateItemWriteReq_Quantification struct {
	Quantification *QuantificationState `protobuf:"bytes,20,opt,name=quantification,proto3,oneof"`
}

type ViewStateItemWriteReq_Selection struct {
	Selection *SelectionState `protobuf:"bytes,21,opt,name=selection,proto3,oneof"`
}

func (*ViewStateItemWriteReq_AnalysisLayout) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_ContextImages) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Histograms) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_ChordDiagrams) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_TernaryPlots) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_BinaryPlots) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Tables) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_RoiQuantTables) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Variograms) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Spectrums) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_RgbuPlots) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_SingleAxisRGBU) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_RgbuImages) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Parallelograms) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Annotations) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Rois) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Quantification) isViewStateItemWriteReq_Widget() {}

func (*ViewStateItemWriteReq_Selection) isViewStateItemWriteReq_Widget() {}

type ViewStateItemWriteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ViewStateItemWriteResp) Reset() {
	*x = ViewStateItemWriteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viewstate_msgs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewStateItemWriteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewStateItemWriteResp) ProtoMessage() {}

func (x *ViewStateItemWriteResp) ProtoReflect() protoreflect.Message {
	mi := &file_viewstate_msgs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewStateItemWriteResp.ProtoReflect.Descriptor instead.
func (*ViewStateItemWriteResp) Descriptor() ([]byte, []int) {
	return file_viewstate_msgs_proto_rawDescGZIP(), []int{3}
}

var File_viewstate_msgs_proto protoreflect.FileDescriptor

var file_viewstate_msgs_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x69, 0x65, 0x77, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2d, 0x6d, 0x73, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x56, 0x69, 0x65, 0x77, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x09, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x97, 0x08, 0x0a, 0x15, 0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x0d, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x44,
	0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x68, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68,
	0x6f, 0x72, 0x64, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x6f, 0x74, 0x73,
	0x12, 0x30, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x6f,
	0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x72, 0x6f, 0x69,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x52, 0x4f, 0x49, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x6f, 0x69, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x56,
	0x61, 0x72, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x76, 0x61, 0x72, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d,
	0x73, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x67, 0x62, 0x75, 0x50, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x47, 0x42, 0x55, 0x50, 0x6c, 0x6f, 0x74, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x67,
	0x62, 0x75, 0x50, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x47, 0x42, 0x55, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x47, 0x42, 0x55,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x78, 0x69, 0x73, 0x52, 0x47, 0x42, 0x55, 0x12, 0x38, 0x0a,
	0x0a, 0x72, 0x67, 0x62, 0x75, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x52, 0x47, 0x42, 0x55, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x67, 0x62,
	0x75, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x6c, 0x65, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x6f, 0x69,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x4f, 0x49, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x69,
	0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16,
	0x56, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_viewstate_msgs_proto_rawDescOnce sync.Once
	file_viewstate_msgs_proto_rawDescData = file_viewstate_msgs_proto_rawDesc
)

func file_viewstate_msgs_proto_rawDescGZIP() []byte {
	file_viewstate_msgs_proto_rawDescOnce.Do(func() {
		file_viewstate_msgs_proto_rawDescData = protoimpl.X.CompressGZIP(file_viewstate_msgs_proto_rawDescData)
	})
	return file_viewstate_msgs_proto_rawDescData
}

var file_viewstate_msgs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_viewstate_msgs_proto_goTypes = []interface{}{
	(*ViewStateReq)(nil),              // 0: ViewStateReq
	(*ViewStateResp)(nil),             // 1: ViewStateResp
	(*ViewStateItemWriteReq)(nil),     // 2: ViewStateItemWriteReq
	(*ViewStateItemWriteResp)(nil),    // 3: ViewStateItemWriteResp
	(*ViewState)(nil),                 // 4: ViewState
	(*AnalysisLayout)(nil),            // 5: AnalysisLayout
	(*ContextImageState)(nil),         // 6: ContextImageState
	(*HistogramState)(nil),            // 7: HistogramState
	(*ChordState)(nil),                // 8: ChordState
	(*TernaryState)(nil),              // 9: TernaryState
	(*BinaryState)(nil),               // 10: BinaryState
	(*TableState)(nil),                // 11: TableState
	(*ROIQuantTableState)(nil),        // 12: ROIQuantTableState
	(*VariogramState)(nil),            // 13: VariogramState
	(*SpectrumWidgetState)(nil),       // 14: SpectrumWidgetState
	(*RGBUPlotWidgetState)(nil),       // 15: RGBUPlotWidgetState
	(*SingleAxisRGBUWidgetState)(nil), // 16: SingleAxisRGBUWidgetState
	(*RGBUImagesWidgetState)(nil),     // 17: RGBUImagesWidgetState
	(*ParallelogramWidgetState)(nil),  // 18: ParallelogramWidgetState
	(*AnnotationDisplayState)(nil),    // 19: AnnotationDisplayState
	(*ROIDisplayState)(nil),           // 20: ROIDisplayState
	(*QuantificationState)(nil),       // 21: QuantificationState
	(*SelectionState)(nil),            // 22: SelectionState
}
var file_viewstate_msgs_proto_depIdxs = []int32{
	4,  // 0: ViewStateResp.viewState:type_name -> ViewState
	5,  // 1: ViewStateItemWriteReq.analysisLayout:type_name -> AnalysisLayout
	6,  // 2: ViewStateItemWriteReq.contextImages:type_name -> ContextImageState
	7,  // 3: ViewStateItemWriteReq.histograms:type_name -> HistogramState
	8,  // 4: ViewStateItemWriteReq.chordDiagrams:type_name -> ChordState
	9,  // 5: ViewStateItemWriteReq.ternaryPlots:type_name -> TernaryState
	10, // 6: ViewStateItemWriteReq.binaryPlots:type_name -> BinaryState
	11, // 7: ViewStateItemWriteReq.tables:type_name -> TableState
	12, // 8: ViewStateItemWriteReq.roiQuantTables:type_name -> ROIQuantTableState
	13, // 9: ViewStateItemWriteReq.variograms:type_name -> VariogramState
	14, // 10: ViewStateItemWriteReq.spectrums:type_name -> SpectrumWidgetState
	15, // 11: ViewStateItemWriteReq.rgbuPlots:type_name -> RGBUPlotWidgetState
	16, // 12: ViewStateItemWriteReq.singleAxisRGBU:type_name -> SingleAxisRGBUWidgetState
	17, // 13: ViewStateItemWriteReq.rgbuImages:type_name -> RGBUImagesWidgetState
	18, // 14: ViewStateItemWriteReq.parallelograms:type_name -> ParallelogramWidgetState
	19, // 15: ViewStateItemWriteReq.annotations:type_name -> AnnotationDisplayState
	20, // 16: ViewStateItemWriteReq.rois:type_name -> ROIDisplayState
	21, // 17: ViewStateItemWriteReq.quantification:type_name -> QuantificationState
	22, // 18: ViewStateItemWriteReq.selection:type_name -> SelectionState
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_viewstate_msgs_proto_init() }
func file_viewstate_msgs_proto_init() {
	if File_viewstate_msgs_proto != nil {
		return
	}
	file_viewstate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_viewstate_msgs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viewstate_msgs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viewstate_msgs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewStateItemWriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viewstate_msgs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewStateItemWriteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_viewstate_msgs_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ViewStateItemWriteReq_AnalysisLayout)(nil),
		(*ViewStateItemWriteReq_ContextImages)(nil),
		(*ViewStateItemWriteReq_Histograms)(nil),
		(*ViewStateItemWriteReq_ChordDiagrams)(nil),
		(*ViewStateItemWriteReq_TernaryPlots)(nil),
		(*ViewStateItemWriteReq_BinaryPlots)(nil),
		(*ViewStateItemWriteReq_Tables)(nil),
		(*ViewStateItemWriteReq_RoiQuantTables)(nil),
		(*ViewStateItemWriteReq_Variograms)(nil),
		(*ViewStateItemWriteReq_Spectrums)(nil),
		(*ViewStateItemWriteReq_RgbuPlots)(nil),
		(*ViewStateItemWriteReq_SingleAxisRGBU)(nil),
		(*ViewStateItemWriteReq_RgbuImages)(nil),
		(*ViewStateItemWriteReq_Parallelograms)(nil),
		(*ViewStateItemWriteReq_Annotations)(nil),
		(*ViewStateItemWriteReq_Rois)(nil),
		(*ViewStateItemWriteReq_Quantification)(nil),
		(*ViewStateItemWriteReq_Selection)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_viewstate_msgs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_viewstate_msgs_proto_goTypes,
		DependencyIndexes: file_viewstate_msgs_proto_depIdxs,
		MessageInfos:      file_viewstate_msgs_proto_msgTypes,
	}.Build()
	File_viewstate_msgs_proto = out.File
	file_viewstate_msgs_proto_rawDesc = nil
	file_viewstate_msgs_proto_goTypes = nil
	file_viewstate_msgs_proto_depIdxs = nil
}
