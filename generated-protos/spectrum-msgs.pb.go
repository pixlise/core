// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: spectrum-msgs.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// requires(NONE)
type SpectrumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanId   string          `protobuf:"bytes,1,opt,name=scanId,proto3" json:"scanId,omitempty"`
	Entries  *ScanEntryRange `protobuf:"bytes,2,opt,name=entries,proto3" json:"entries,omitempty"`
	BulkSum  bool            `protobuf:"varint,3,opt,name=bulkSum,proto3" json:"bulkSum,omitempty"`
	MaxValue bool            `protobuf:"varint,4,opt,name=maxValue,proto3" json:"maxValue,omitempty"`
}

func (x *SpectrumReq) Reset() {
	*x = SpectrumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spectrum_msgs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpectrumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpectrumReq) ProtoMessage() {}

func (x *SpectrumReq) ProtoReflect() protoreflect.Message {
	mi := &file_spectrum_msgs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpectrumReq.ProtoReflect.Descriptor instead.
func (*SpectrumReq) Descriptor() ([]byte, []int) {
	return file_spectrum_msgs_proto_rawDescGZIP(), []int{0}
}

func (x *SpectrumReq) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

func (x *SpectrumReq) GetEntries() *ScanEntryRange {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *SpectrumReq) GetBulkSum() bool {
	if x != nil {
		return x.BulkSum
	}
	return false
}

func (x *SpectrumReq) GetMaxValue() bool {
	if x != nil {
		return x.MaxValue
	}
	return false
}

type SpectrumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpectraPerLocation   []*Spectra  `protobuf:"bytes,1,rep,name=spectraPerLocation,proto3" json:"spectraPerLocation,omitempty"`      // Note a location may have 0 or more spectra
	BulkSpectra          []*Spectrum `protobuf:"bytes,2,rep,name=bulkSpectra,proto3" json:"bulkSpectra,omitempty"`                    // One per detector
	MaxSpectra           []*Spectrum `protobuf:"bytes,3,rep,name=maxSpectra,proto3" json:"maxSpectra,omitempty"`                      // One per detector
	ChannelCount         uint32      `protobuf:"varint,4,opt,name=channelCount,proto3" json:"channelCount,omitempty"`                 // How many channels we have, for PIXL this is 4096
	NormalSpectraForScan uint32      `protobuf:"varint,5,opt,name=normalSpectraForScan,proto3" json:"normalSpectraForScan,omitempty"` // How many normal spectra for the entire scan, needed when we aggregate a spectrum
	DwellSpectraForScan  uint32      `protobuf:"varint,6,opt,name=dwellSpectraForScan,proto3" json:"dwellSpectraForScan,omitempty"`   // How many dwell spectra for the entire scan, needed when we aggregate a spectrum
	LiveTimeMetaIndex    uint32      `protobuf:"varint,7,opt,name=liveTimeMetaIndex,proto3" json:"liveTimeMetaIndex,omitempty"`       // The index into the meta fields array for live time. This is sent so we have all data needed when we aggregate a spectrum
	TimeStampUnixSec     uint32      `protobuf:"varint,8,opt,name=timeStampUnixSec,proto3" json:"timeStampUnixSec,omitempty"`         // Scan import time stamp, older scans won't have one
}

func (x *SpectrumResp) Reset() {
	*x = SpectrumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spectrum_msgs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpectrumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpectrumResp) ProtoMessage() {}

func (x *SpectrumResp) ProtoReflect() protoreflect.Message {
	mi := &file_spectrum_msgs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpectrumResp.ProtoReflect.Descriptor instead.
func (*SpectrumResp) Descriptor() ([]byte, []int) {
	return file_spectrum_msgs_proto_rawDescGZIP(), []int{1}
}

func (x *SpectrumResp) GetSpectraPerLocation() []*Spectra {
	if x != nil {
		return x.SpectraPerLocation
	}
	return nil
}

func (x *SpectrumResp) GetBulkSpectra() []*Spectrum {
	if x != nil {
		return x.BulkSpectra
	}
	return nil
}

func (x *SpectrumResp) GetMaxSpectra() []*Spectrum {
	if x != nil {
		return x.MaxSpectra
	}
	return nil
}

func (x *SpectrumResp) GetChannelCount() uint32 {
	if x != nil {
		return x.ChannelCount
	}
	return 0
}

func (x *SpectrumResp) GetNormalSpectraForScan() uint32 {
	if x != nil {
		return x.NormalSpectraForScan
	}
	return 0
}

func (x *SpectrumResp) GetDwellSpectraForScan() uint32 {
	if x != nil {
		return x.DwellSpectraForScan
	}
	return 0
}

func (x *SpectrumResp) GetLiveTimeMetaIndex() uint32 {
	if x != nil {
		return x.LiveTimeMetaIndex
	}
	return 0
}

func (x *SpectrumResp) GetTimeStampUnixSec() uint32 {
	if x != nil {
		return x.TimeStampUnixSec
	}
	return 0
}

var File_spectrum_msgs_proto protoreflect.FileDescriptor

var file_spectrum_msgs_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x6c, 0x6b, 0x53, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x75, 0x6c, 0x6b, 0x53, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x0c, 0x53,
	0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x12, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x50, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72,
	0x61, 0x52, 0x12, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x50, 0x65, 0x72, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x0b, 0x62, 0x75, 0x6c, 0x6b, 0x53, 0x70, 0x65,
	0x63, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x0b, 0x62, 0x75, 0x6c, 0x6b, 0x53, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x61, 0x12, 0x29, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75,
	0x6d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x14, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61, 0x46, 0x6f,
	0x72, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x70,
	0x65, 0x63, 0x74, 0x72, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x13, 0x64, 0x77, 0x65, 0x6c, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x61,
	0x46, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65,
	0x63, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spectrum_msgs_proto_rawDescOnce sync.Once
	file_spectrum_msgs_proto_rawDescData = file_spectrum_msgs_proto_rawDesc
)

func file_spectrum_msgs_proto_rawDescGZIP() []byte {
	file_spectrum_msgs_proto_rawDescOnce.Do(func() {
		file_spectrum_msgs_proto_rawDescData = protoimpl.X.CompressGZIP(file_spectrum_msgs_proto_rawDescData)
	})
	return file_spectrum_msgs_proto_rawDescData
}

var file_spectrum_msgs_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_spectrum_msgs_proto_goTypes = []interface{}{
	(*SpectrumReq)(nil),    // 0: SpectrumReq
	(*SpectrumResp)(nil),   // 1: SpectrumResp
	(*ScanEntryRange)(nil), // 2: ScanEntryRange
	(*Spectra)(nil),        // 3: Spectra
	(*Spectrum)(nil),       // 4: Spectrum
}
var file_spectrum_msgs_proto_depIdxs = []int32{
	2, // 0: SpectrumReq.entries:type_name -> ScanEntryRange
	3, // 1: SpectrumResp.spectraPerLocation:type_name -> Spectra
	4, // 2: SpectrumResp.bulkSpectra:type_name -> Spectrum
	4, // 3: SpectrumResp.maxSpectra:type_name -> Spectrum
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spectrum_msgs_proto_init() }
func file_spectrum_msgs_proto_init() {
	if File_spectrum_msgs_proto != nil {
		return
	}
	file_spectrum_proto_init()
	file_scan_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spectrum_msgs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpectrumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spectrum_msgs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpectrumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spectrum_msgs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spectrum_msgs_proto_goTypes,
		DependencyIndexes: file_spectrum_msgs_proto_depIdxs,
		MessageInfos:      file_spectrum_msgs_proto_msgTypes,
	}.Build()
	File_spectrum_msgs_proto = out.File
	file_spectrum_msgs_proto_rawDesc = nil
	file_spectrum_msgs_proto_goTypes = nil
	file_spectrum_msgs_proto_depIdxs = nil
}
