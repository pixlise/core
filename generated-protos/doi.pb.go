// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: doi.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DOIRelatedIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Relation   string `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *DOIRelatedIdentifier) Reset() {
	*x = DOIRelatedIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DOIRelatedIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DOIRelatedIdentifier) ProtoMessage() {}

func (x *DOIRelatedIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DOIRelatedIdentifier.ProtoReflect.Descriptor instead.
func (*DOIRelatedIdentifier) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{0}
}

func (x *DOIRelatedIdentifier) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *DOIRelatedIdentifier) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

type DOICreator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Affiliation string `protobuf:"bytes,2,opt,name=affiliation,proto3" json:"affiliation,omitempty"`
	Orcid       string `protobuf:"bytes,3,opt,name=orcid,proto3" json:"orcid,omitempty"`
}

func (x *DOICreator) Reset() {
	*x = DOICreator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DOICreator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DOICreator) ProtoMessage() {}

func (x *DOICreator) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DOICreator.ProtoReflect.Descriptor instead.
func (*DOICreator) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{1}
}

func (x *DOICreator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DOICreator) GetAffiliation() string {
	if x != nil {
		return x.Affiliation
	}
	return ""
}

func (x *DOICreator) GetOrcid() string {
	if x != nil {
		return x.Orcid
	}
	return ""
}

type DOIContributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Affiliation string `protobuf:"bytes,2,opt,name=affiliation,proto3" json:"affiliation,omitempty"`
	Orcid       string `protobuf:"bytes,3,opt,name=orcid,proto3" json:"orcid,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DOIContributor) Reset() {
	*x = DOIContributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DOIContributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DOIContributor) ProtoMessage() {}

func (x *DOIContributor) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DOIContributor.ProtoReflect.Descriptor instead.
func (*DOIContributor) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{2}
}

func (x *DOIContributor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DOIContributor) GetAffiliation() string {
	if x != nil {
		return x.Affiliation
	}
	return ""
}

func (x *DOIContributor) GetOrcid() string {
	if x != nil {
		return x.Orcid
	}
	return ""
}

func (x *DOIContributor) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DOIMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,omitempty"`  
	Title              string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Creators           []*DOICreator           `protobuf:"bytes,3,rep,name=creators,proto3" json:"creators,omitempty"`
	Description        string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Keywords           string                  `protobuf:"bytes,5,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Notes              string                  `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	RelatedIdentifiers []*DOIRelatedIdentifier `protobuf:"bytes,7,rep,name=relatedIdentifiers,proto3" json:"relatedIdentifiers,omitempty"`
	Contributors       []*DOIContributor       `protobuf:"bytes,8,rep,name=contributors,proto3" json:"contributors,omitempty"`
	References         string                  `protobuf:"bytes,9,opt,name=references,proto3" json:"references,omitempty"`
	Version            string                  `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	Doi                string                  `protobuf:"bytes,11,opt,name=doi,proto3" json:"doi,omitempty"`
	DoiBadge           string                  `protobuf:"bytes,12,opt,name=doiBadge,proto3" json:"doiBadge,omitempty"`
	DoiLink            string                  `protobuf:"bytes,13,opt,name=doiLink,proto3" json:"doiLink,omitempty"`
}

func (x *DOIMetadata) Reset() {
	*x = DOIMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DOIMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DOIMetadata) ProtoMessage() {}

func (x *DOIMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DOIMetadata.ProtoReflect.Descriptor instead.
func (*DOIMetadata) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{3}
}

func (x *DOIMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DOIMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DOIMetadata) GetCreators() []*DOICreator {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *DOIMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DOIMetadata) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DOIMetadata) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DOIMetadata) GetRelatedIdentifiers() []*DOIRelatedIdentifier {
	if x != nil {
		return x.RelatedIdentifiers
	}
	return nil
}

func (x *DOIMetadata) GetContributors() []*DOIContributor {
	if x != nil {
		return x.Contributors
	}
	return nil
}

func (x *DOIMetadata) GetReferences() string {
	if x != nil {
		return x.References
	}
	return ""
}

func (x *DOIMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DOIMetadata) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *DOIMetadata) GetDoiBadge() string {
	if x != nil {
		return x.DoiBadge
	}
	return ""
}

func (x *DOIMetadata) GetDoiLink() string {
	if x != nil {
		return x.DoiLink
	}
	return ""
}

type ZenodoFileLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Download string `protobuf:"bytes,1,opt,name=download,proto3" json:"download,omitempty"`
	Self     string `protobuf:"bytes,2,opt,name=self,proto3" json:"self,omitempty"`
}

func (x *ZenodoFileLink) Reset() {
	*x = ZenodoFileLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoFileLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoFileLink) ProtoMessage() {}

func (x *ZenodoFileLink) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoFileLink.ProtoReflect.Descriptor instead.
func (*ZenodoFileLink) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{4}
}

func (x *ZenodoFileLink) GetDownload() string {
	if x != nil {
		return x.Download
	}
	return ""
}

func (x *ZenodoFileLink) GetSelf() string {
	if x != nil {
		return x.Self
	}
	return ""
}

type ZenodoFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum string          `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Filename string          `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Filesize uint32          `protobuf:"varint,3,opt,name=filesize,proto3" json:"filesize,omitempty"`
	Id       string          `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Links    *ZenodoFileLink `protobuf:"bytes,5,opt,name=links,proto3" json:"links,omitempty"`
}

func (x *ZenodoFile) Reset() {
	*x = ZenodoFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoFile) ProtoMessage() {}

func (x *ZenodoFile) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoFile.ProtoReflect.Descriptor instead.
func (*ZenodoFile) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{5}
}

func (x *ZenodoFile) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *ZenodoFile) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ZenodoFile) GetFilesize() uint32 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *ZenodoFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZenodoFile) GetLinks() *ZenodoFileLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type ZenodoLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge        string `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	Bucket       string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ConceptBadge string `protobuf:"bytes,3,opt,name=conceptBadge,proto3" json:"conceptBadge,omitempty"`
	ConceptDOI   string `protobuf:"bytes,4,opt,name=conceptDOI,proto3" json:"conceptDOI,omitempty"`
	Doi          string `protobuf:"bytes,5,opt,name=doi,proto3" json:"doi,omitempty"`
	Latest       string `protobuf:"bytes,6,opt,name=latest,proto3" json:"latest,omitempty"`
	LatestHTML   string `protobuf:"bytes,7,opt,name=latestHTML,proto3" json:"latest_html"`  
	Record       string `protobuf:"bytes,8,opt,name=record,proto3" json:"record,omitempty"`
	RecordHTML   string `protobuf:"bytes,9,opt,name=recordHTML,proto3" json:"record_html"`  
}

func (x *ZenodoLinks) Reset() {
	*x = ZenodoLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoLinks) ProtoMessage() {}

func (x *ZenodoLinks) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoLinks.ProtoReflect.Descriptor instead.
func (*ZenodoLinks) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{6}
}

func (x *ZenodoLinks) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *ZenodoLinks) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ZenodoLinks) GetConceptBadge() string {
	if x != nil {
		return x.ConceptBadge
	}
	return ""
}

func (x *ZenodoLinks) GetConceptDOI() string {
	if x != nil {
		return x.ConceptDOI
	}
	return ""
}

func (x *ZenodoLinks) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *ZenodoLinks) GetLatest() string {
	if x != nil {
		return x.Latest
	}
	return ""
}

func (x *ZenodoLinks) GetLatestHTML() string {
	if x != nil {
		return x.LatestHTML
	}
	return ""
}

func (x *ZenodoLinks) GetRecord() string {
	if x != nil {
		return x.Record
	}
	return ""
}

func (x *ZenodoLinks) GetRecordHTML() string {
	if x != nil {
		return x.RecordHTML
	}
	return ""
}

type ZenodoDraftLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket          string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Discard         string `protobuf:"bytes,2,opt,name=discard,proto3" json:"discard,omitempty"`
	Edit            string `protobuf:"bytes,3,opt,name=edit,proto3" json:"edit,omitempty"`
	Files           string `protobuf:"bytes,4,opt,name=files,proto3" json:"files,omitempty"`
	Html            string `protobuf:"bytes,5,opt,name=html,proto3" json:"html,omitempty"`
	LatestDraft     string `protobuf:"bytes,6,opt,name=latestDraft,proto3" json:"latest_draft"`          
	LatestDraftHTML string `protobuf:"bytes,7,opt,name=latestDraftHTML,proto3" json:"latest_draft_html"`  
	Publish         string `protobuf:"bytes,8,opt,name=publish,proto3" json:"publish,omitempty"`
	Self            string `protobuf:"bytes,9,opt,name=self,proto3" json:"self,omitempty"`
}

func (x *ZenodoDraftLinks) Reset() {
	*x = ZenodoDraftLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoDraftLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoDraftLinks) ProtoMessage() {}

func (x *ZenodoDraftLinks) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoDraftLinks.ProtoReflect.Descriptor instead.
func (*ZenodoDraftLinks) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{7}
}

func (x *ZenodoDraftLinks) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ZenodoDraftLinks) GetDiscard() string {
	if x != nil {
		return x.Discard
	}
	return ""
}

func (x *ZenodoDraftLinks) GetEdit() string {
	if x != nil {
		return x.Edit
	}
	return ""
}

func (x *ZenodoDraftLinks) GetFiles() string {
	if x != nil {
		return x.Files
	}
	return ""
}

func (x *ZenodoDraftLinks) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *ZenodoDraftLinks) GetLatestDraft() string {
	if x != nil {
		return x.LatestDraft
	}
	return ""
}

func (x *ZenodoDraftLinks) GetLatestDraftHTML() string {
	if x != nil {
		return x.LatestDraftHTML
	}
	return ""
}

func (x *ZenodoDraftLinks) GetPublish() string {
	if x != nil {
		return x.Publish
	}
	return ""
}

func (x *ZenodoDraftLinks) GetSelf() string {
	if x != nil {
		return x.Self
	}
	return ""
}

type ZenodoCommunity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *ZenodoCommunity) Reset() {
	*x = ZenodoCommunity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoCommunity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoCommunity) ProtoMessage() {}

func (x *ZenodoCommunity) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoCommunity.ProtoReflect.Descriptor instead.
func (*ZenodoCommunity) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{8}
}

func (x *ZenodoCommunity) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type ZenodoNameCreator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ZenodoNameCreator) Reset() {
	*x = ZenodoNameCreator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoNameCreator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoNameCreator) ProtoMessage() {}

func (x *ZenodoNameCreator) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoNameCreator.ProtoReflect.Descriptor instead.
func (*ZenodoNameCreator) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{9}
}

func (x *ZenodoNameCreator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ZenodoNameAffiliationCreator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Affiliation string `protobuf:"bytes,2,opt,name=affiliation,proto3" json:"affiliation,omitempty"`
}

func (x *ZenodoNameAffiliationCreator) Reset() {
	*x = ZenodoNameAffiliationCreator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoNameAffiliationCreator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoNameAffiliationCreator) ProtoMessage() {}

func (x *ZenodoNameAffiliationCreator) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoNameAffiliationCreator.ProtoReflect.Descriptor instead.
func (*ZenodoNameAffiliationCreator) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{10}
}

func (x *ZenodoNameAffiliationCreator) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ZenodoNameAffiliationCreator) GetAffiliation() string {
	if x != nil {
		return x.Affiliation
	}
	return ""
}

type ZenodoPrereserveDOI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doi   string `protobuf:"bytes,1,opt,name=doi,proto3" json:"doi,omitempty"`
	Recid uint32 `protobuf:"varint,2,opt,name=recid,proto3" json:"recid,omitempty"`
}

func (x *ZenodoPrereserveDOI) Reset() {
	*x = ZenodoPrereserveDOI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoPrereserveDOI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoPrereserveDOI) ProtoMessage() {}

func (x *ZenodoPrereserveDOI) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoPrereserveDOI.ProtoReflect.Descriptor instead.
func (*ZenodoPrereserveDOI) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{11}
}

func (x *ZenodoPrereserveDOI) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *ZenodoPrereserveDOI) GetRecid() uint32 {
	if x != nil {
		return x.Recid
	}
	return 0
}

type ZenodoPublishResponseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessRight     string               `protobuf:"bytes,1,opt,name=accessRight,proto3" json:"access_right"`  
	Communities     []*ZenodoCommunity   `protobuf:"bytes,2,rep,name=communities,proto3" json:"communities,omitempty"`
	Creators        []*ZenodoNameCreator `protobuf:"bytes,3,rep,name=creators,proto3" json:"creators,omitempty"`
	Description     string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Doi             string               `protobuf:"bytes,5,opt,name=doi,proto3" json:"doi,omitempty"`
	License         string               `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
	PrereserveDOI   *ZenodoPrereserveDOI `protobuf:"bytes,7,opt,name=prereserveDOI,proto3" json:"prereserve_doi"`      
	PublicationDate string               `protobuf:"bytes,8,opt,name=publicationDate,proto3" json:"publication_date"`  
	Title           string               `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	UploadType      string               `protobuf:"bytes,10,opt,name=uploadType,proto3" json:"upload_type"`  
}

func (x *ZenodoPublishResponseMetadata) Reset() {
	*x = ZenodoPublishResponseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoPublishResponseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoPublishResponseMetadata) ProtoMessage() {}

func (x *ZenodoPublishResponseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoPublishResponseMetadata.ProtoReflect.Descriptor instead.
func (*ZenodoPublishResponseMetadata) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{12}
}

func (x *ZenodoPublishResponseMetadata) GetAccessRight() string {
	if x != nil {
		return x.AccessRight
	}
	return ""
}

func (x *ZenodoPublishResponseMetadata) GetCommunities() []*ZenodoCommunity {
	if x != nil {
		return x.Communities
	}
	return nil
}

func (x *ZenodoPublishResponseMetadata) GetCreators() []*ZenodoNameCreator {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *ZenodoPublishResponseMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ZenodoPublishResponseMetadata) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *ZenodoPublishResponseMetadata) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *ZenodoPublishResponseMetadata) GetPrereserveDOI() *ZenodoPrereserveDOI {
	if x != nil {
		return x.PrereserveDOI
	}
	return nil
}

func (x *ZenodoPublishResponseMetadata) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *ZenodoPublishResponseMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ZenodoPublishResponseMetadata) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

type ZenodoPublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConceptDOI   string                         `protobuf:"bytes,1,opt,name=conceptDOI,proto3" json:"conceptdoi"`      
	ConceptRecID string                         `protobuf:"bytes,2,opt,name=conceptRecID,proto3" json:"conceptrecid"`  
	Created      string                         `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Doi          string                         `protobuf:"bytes,4,opt,name=doi,proto3" json:"doi,omitempty"`
	DoiURL       string                         `protobuf:"bytes,5,opt,name=doiURL,proto3" json:"doi_url"`  
	Files        []*ZenodoFile                  `protobuf:"bytes,6,rep,name=files,proto3" json:"files,omitempty"`
	Id           uint32                         `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Links        *ZenodoLinks                   `protobuf:"bytes,8,opt,name=links,proto3" json:"links,omitempty"`
	Metadata     *ZenodoPublishResponseMetadata `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Modified     string                         `protobuf:"bytes,10,opt,name=modified,proto3" json:"modified,omitempty"`
	Owner        uint32                         `protobuf:"varint,11,opt,name=owner,proto3" json:"owner,omitempty"`
	RecordID     uint32                         `protobuf:"varint,12,opt,name=recordID,proto3" json:"record_id"`  
	State        string                         `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	Submitted    bool                           `protobuf:"varint,14,opt,name=submitted,proto3" json:"submitted,omitempty"`
	Title        string                         `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ZenodoPublishResponse) Reset() {
	*x = ZenodoPublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoPublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoPublishResponse) ProtoMessage() {}

func (x *ZenodoPublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoPublishResponse.ProtoReflect.Descriptor instead.
func (*ZenodoPublishResponse) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{13}
}

func (x *ZenodoPublishResponse) GetConceptDOI() string {
	if x != nil {
		return x.ConceptDOI
	}
	return ""
}

func (x *ZenodoPublishResponse) GetConceptRecID() string {
	if x != nil {
		return x.ConceptRecID
	}
	return ""
}

func (x *ZenodoPublishResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ZenodoPublishResponse) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *ZenodoPublishResponse) GetDoiURL() string {
	if x != nil {
		return x.DoiURL
	}
	return ""
}

func (x *ZenodoPublishResponse) GetFiles() []*ZenodoFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ZenodoPublishResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZenodoPublishResponse) GetLinks() *ZenodoLinks {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ZenodoPublishResponse) GetMetadata() *ZenodoPublishResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ZenodoPublishResponse) GetModified() string {
	if x != nil {
		return x.Modified
	}
	return ""
}

func (x *ZenodoPublishResponse) GetOwner() uint32 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *ZenodoPublishResponse) GetRecordID() uint32 {
	if x != nil {
		return x.RecordID
	}
	return 0
}

func (x *ZenodoPublishResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ZenodoPublishResponse) GetSubmitted() bool {
	if x != nil {
		return x.Submitted
	}
	return false
}

func (x *ZenodoPublishResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ZenodoDepositionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessRight     string                          `protobuf:"bytes,1,opt,name=accessRight,proto3" json:"access_right"`  
	Communities     []*ZenodoCommunity              `protobuf:"bytes,2,rep,name=communities,proto3" json:"communities,omitempty"`
	Creators        []*ZenodoNameAffiliationCreator `protobuf:"bytes,3,rep,name=creators,proto3" json:"creators,omitempty"`
	Description     string                          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Doi             string                          `protobuf:"bytes,5,opt,name=doi,proto3" json:"doi,omitempty"`
	License         string                          `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
	PrereserveDOI   *ZenodoPrereserveDOI            `protobuf:"bytes,7,opt,name=prereserveDOI,proto3" json:"prereserve_doi"`      
	PublicationDate string                          `protobuf:"bytes,8,opt,name=publicationDate,proto3" json:"publication_date"`  
	Title           string                          `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	UploadType      string                          `protobuf:"bytes,10,opt,name=uploadType,proto3" json:"upload_type"`  
}

func (x *ZenodoDepositionMetadata) Reset() {
	*x = ZenodoDepositionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoDepositionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoDepositionMetadata) ProtoMessage() {}

func (x *ZenodoDepositionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoDepositionMetadata.ProtoReflect.Descriptor instead.
func (*ZenodoDepositionMetadata) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{14}
}

func (x *ZenodoDepositionMetadata) GetAccessRight() string {
	if x != nil {
		return x.AccessRight
	}
	return ""
}

func (x *ZenodoDepositionMetadata) GetCommunities() []*ZenodoCommunity {
	if x != nil {
		return x.Communities
	}
	return nil
}

func (x *ZenodoDepositionMetadata) GetCreators() []*ZenodoNameAffiliationCreator {
	if x != nil {
		return x.Creators
	}
	return nil
}

func (x *ZenodoDepositionMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ZenodoDepositionMetadata) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *ZenodoDepositionMetadata) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *ZenodoDepositionMetadata) GetPrereserveDOI() *ZenodoPrereserveDOI {
	if x != nil {
		return x.PrereserveDOI
	}
	return nil
}

func (x *ZenodoDepositionMetadata) GetPublicationDate() string {
	if x != nil {
		return x.PublicationDate
	}
	return ""
}

func (x *ZenodoDepositionMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ZenodoDepositionMetadata) GetUploadType() string {
	if x != nil {
		return x.UploadType
	}
	return ""
}

type ZenodoMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConceptRecID string                    `protobuf:"bytes,1,opt,name=conceptRecID,proto3" json:"conceptrecid"`  
	Created      string                    `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Doi          string                    `protobuf:"bytes,3,opt,name=doi,proto3" json:"doi,omitempty"`
	DoiURL       string                    `protobuf:"bytes,4,opt,name=doiURL,proto3" json:"doi_url"`  
	Files        []*ZenodoFile             `protobuf:"bytes,5,rep,name=files,proto3" json:"files,omitempty"`
	Id           uint32                    `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Links        *ZenodoLinks              `protobuf:"bytes,7,opt,name=links,proto3" json:"links,omitempty"`
	Metadata     *ZenodoDepositionMetadata `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Modified     string                    `protobuf:"bytes,9,opt,name=modified,proto3" json:"modified,omitempty"`
	Owner        uint32                    `protobuf:"varint,10,opt,name=owner,proto3" json:"owner,omitempty"`
	RecordID     uint32                    `protobuf:"varint,11,opt,name=recordID,proto3" json:"record_id"`  
	State        string                    `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
	Submitted    bool                      `protobuf:"varint,13,opt,name=submitted,proto3" json:"submitted,omitempty"`
	Title        string                    `protobuf:"bytes,14,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ZenodoMetaResponse) Reset() {
	*x = ZenodoMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoMetaResponse) ProtoMessage() {}

func (x *ZenodoMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoMetaResponse.ProtoReflect.Descriptor instead.
func (*ZenodoMetaResponse) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{15}
}

func (x *ZenodoMetaResponse) GetConceptRecID() string {
	if x != nil {
		return x.ConceptRecID
	}
	return ""
}

func (x *ZenodoMetaResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ZenodoMetaResponse) GetDoi() string {
	if x != nil {
		return x.Doi
	}
	return ""
}

func (x *ZenodoMetaResponse) GetDoiURL() string {
	if x != nil {
		return x.DoiURL
	}
	return ""
}

func (x *ZenodoMetaResponse) GetFiles() []*ZenodoFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ZenodoMetaResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZenodoMetaResponse) GetLinks() *ZenodoLinks {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ZenodoMetaResponse) GetMetadata() *ZenodoDepositionMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ZenodoMetaResponse) GetModified() string {
	if x != nil {
		return x.Modified
	}
	return ""
}

func (x *ZenodoMetaResponse) GetOwner() uint32 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *ZenodoMetaResponse) GetRecordID() uint32 {
	if x != nil {
		return x.RecordID
	}
	return 0
}

func (x *ZenodoMetaResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ZenodoMetaResponse) GetSubmitted() bool {
	if x != nil {
		return x.Submitted
	}
	return false
}

func (x *ZenodoMetaResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ZenodoDepositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConceptRecID string               `protobuf:"bytes,1,opt,name=conceptRecID,proto3" json:"conceptrecid"`  
	Created      string               `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Files        []*ZenodoFile        `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	Id           uint32               `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Links        *ZenodoDraftLinks    `protobuf:"bytes,5,opt,name=links,proto3" json:"links,omitempty"`
	Metadata     *ZenodoPrereserveDOI `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Owner        uint32               `protobuf:"varint,7,opt,name=owner,proto3" json:"owner,omitempty"`
	RecordID     uint32               `protobuf:"varint,8,opt,name=recordID,proto3" json:"record_id"`  
	State        string               `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	Submitted    bool                 `protobuf:"varint,10,opt,name=submitted,proto3" json:"submitted,omitempty"`
	Title        string               `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ZenodoDepositionResponse) Reset() {
	*x = ZenodoDepositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoDepositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoDepositionResponse) ProtoMessage() {}

func (x *ZenodoDepositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoDepositionResponse.ProtoReflect.Descriptor instead.
func (*ZenodoDepositionResponse) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{16}
}

func (x *ZenodoDepositionResponse) GetConceptRecID() string {
	if x != nil {
		return x.ConceptRecID
	}
	return ""
}

func (x *ZenodoDepositionResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ZenodoDepositionResponse) GetFiles() []*ZenodoFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ZenodoDepositionResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ZenodoDepositionResponse) GetLinks() *ZenodoDraftLinks {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ZenodoDepositionResponse) GetMetadata() *ZenodoPrereserveDOI {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ZenodoDepositionResponse) GetOwner() uint32 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *ZenodoDepositionResponse) GetRecordID() uint32 {
	if x != nil {
		return x.RecordID
	}
	return 0
}

func (x *ZenodoDepositionResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ZenodoDepositionResponse) GetSubmitted() bool {
	if x != nil {
		return x.Submitted
	}
	return false
}

func (x *ZenodoDepositionResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ZenodoFileUploadsLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Self    string `protobuf:"bytes,1,opt,name=self,proto3" json:"self,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Uploads string `protobuf:"bytes,3,opt,name=uploads,proto3" json:"uploads,omitempty"`
}

func (x *ZenodoFileUploadsLink) Reset() {
	*x = ZenodoFileUploadsLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoFileUploadsLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoFileUploadsLink) ProtoMessage() {}

func (x *ZenodoFileUploadsLink) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoFileUploadsLink.ProtoReflect.Descriptor instead.
func (*ZenodoFileUploadsLink) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{17}
}

func (x *ZenodoFileUploadsLink) GetSelf() string {
	if x != nil {
		return x.Self
	}
	return ""
}

func (x *ZenodoFileUploadsLink) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ZenodoFileUploadsLink) GetUploads() string {
	if x != nil {
		return x.Uploads
	}
	return ""
}

type ZenodoFileUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Mimetype     string                 `protobuf:"bytes,2,opt,name=mimetype,proto3" json:"mimetype,omitempty"`
	Checksum     string                 `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	VersionID    string                 `protobuf:"bytes,4,opt,name=versionID,proto3" json:"version_id"`  
	Size         uint32                 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Created      string                 `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	Updated      string                 `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
	Links        *ZenodoFileUploadsLink `protobuf:"bytes,8,opt,name=links,proto3" json:"links,omitempty"`
	IsHead       bool                   `protobuf:"varint,9,opt,name=isHead,proto3" json:"is_head"`               
	DeleteMarker bool                   `protobuf:"varint,10,opt,name=deleteMarker,proto3" json:"delete_marker"`  
}

func (x *ZenodoFileUploadResponse) Reset() {
	*x = ZenodoFileUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_doi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZenodoFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZenodoFileUploadResponse) ProtoMessage() {}

func (x *ZenodoFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZenodoFileUploadResponse.ProtoReflect.Descriptor instead.
func (*ZenodoFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_doi_proto_rawDescGZIP(), []int{18}
}

func (x *ZenodoFileUploadResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ZenodoFileUploadResponse) GetMimetype() string {
	if x != nil {
		return x.Mimetype
	}
	return ""
}

func (x *ZenodoFileUploadResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *ZenodoFileUploadResponse) GetVersionID() string {
	if x != nil {
		return x.VersionID
	}
	return ""
}

func (x *ZenodoFileUploadResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ZenodoFileUploadResponse) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *ZenodoFileUploadResponse) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

func (x *ZenodoFileUploadResponse) GetLinks() *ZenodoFileUploadsLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ZenodoFileUploadResponse) GetIsHead() bool {
	if x != nil {
		return x.IsHead
	}
	return false
}

func (x *ZenodoFileUploadResponse) GetDeleteMarker() bool {
	if x != nil {
		return x.DeleteMarker
	}
	return false
}

var File_doi_proto protoreflect.FileDescriptor

var file_doi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x64, 0x6f, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x14, 0x44,
	0x4f, 0x49, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x58, 0x0a, 0x0a, 0x44, 0x4f, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x0e, 0x44, 0x4f, 0x49,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xae, 0x03, 0x0a, 0x0b,
	0x44, 0x4f, 0x49, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x4f, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x45,
	0x0a, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x4f, 0x49,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x4f,
	0x49, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x69, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x69, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x69, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x69, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x40, 0x0a, 0x0e,
	0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x6c, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x22, 0x97,
	0x01, 0x0a, 0x0a, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x0b, 0x5a, 0x65, 0x6e,
	0x6f, 0x64, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x4f, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x4f, 0x49, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f,
	0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x54,
	0x4d, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x48, 0x54, 0x4d, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x54, 0x4d, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x54, 0x4d, 0x4c, 0x22, 0xfc, 0x01, 0x0a,
	0x10, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x72, 0x61, 0x66, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x65, 0x64, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x48, 0x54, 0x4d, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x48, 0x54, 0x4d, 0x4c, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x22, 0x31, 0x0a, 0x0f, 0x5a,
	0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x27,
	0x0a, 0x11, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x1c, 0x5a, 0x65, 0x6e, 0x6f, 0x64,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a,
	0x13, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x50, 0x72, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x44, 0x4f, 0x49, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x63, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x65, 0x63, 0x69, 0x64, 0x22, 0x8f, 0x03, 0x0a,
	0x1d, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x32, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x44, 0x4f, 0x49, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x5a, 0x65, 0x6e, 0x6f,
	0x64, 0x6f, 0x50, 0x72, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x4f, 0x49, 0x52,
	0x0d, 0x70, 0x72, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x4f, 0x49, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xca,
	0x03, 0x0a, 0x15, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x44, 0x4f, 0x49, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x44, 0x4f, 0x49, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x69, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x69, 0x55,
	0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x69, 0x55, 0x52, 0x4c,
	0x12, 0x21, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x5a, 0x65, 0x6e, 0x6f,
	0x64, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x95, 0x03, 0x0a, 0x18,
	0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x6f, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x4f, 0x49, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x50, 0x72, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x44, 0x4f, 0x49, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x44, 0x4f, 0x49, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x12, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x69, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x69, 0x55,
	0x52, 0x4c, 0x12, 0x21, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x65,
	0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xe2, 0x02, 0x0a, 0x18, 0x5a, 0x65, 0x6e,
	0x6f, 0x64, 0x6f, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x63, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x30, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x50, 0x72, 0x65, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x44, 0x4f, 0x49, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x5f, 0x0a,
	0x15, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xb4,
	0x02, 0x0a, 0x18, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x69, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x5a, 0x65, 0x6e,
	0x6f, 0x64, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x48,
	0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_doi_proto_rawDescOnce sync.Once
	file_doi_proto_rawDescData = file_doi_proto_rawDesc
)

func file_doi_proto_rawDescGZIP() []byte {
	file_doi_proto_rawDescOnce.Do(func() {
		file_doi_proto_rawDescData = protoimpl.X.CompressGZIP(file_doi_proto_rawDescData)
	})
	return file_doi_proto_rawDescData
}

var file_doi_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_doi_proto_goTypes = []interface{}{
	(*DOIRelatedIdentifier)(nil),          // 0: DOIRelatedIdentifier
	(*DOICreator)(nil),                    // 1: DOICreator
	(*DOIContributor)(nil),                // 2: DOIContributor
	(*DOIMetadata)(nil),                   // 3: DOIMetadata
	(*ZenodoFileLink)(nil),                // 4: ZenodoFileLink
	(*ZenodoFile)(nil),                    // 5: ZenodoFile
	(*ZenodoLinks)(nil),                   // 6: ZenodoLinks
	(*ZenodoDraftLinks)(nil),              // 7: ZenodoDraftLinks
	(*ZenodoCommunity)(nil),               // 8: ZenodoCommunity
	(*ZenodoNameCreator)(nil),             // 9: ZenodoNameCreator
	(*ZenodoNameAffiliationCreator)(nil),  // 10: ZenodoNameAffiliationCreator
	(*ZenodoPrereserveDOI)(nil),           // 11: ZenodoPrereserveDOI
	(*ZenodoPublishResponseMetadata)(nil), // 12: ZenodoPublishResponseMetadata
	(*ZenodoPublishResponse)(nil),         // 13: ZenodoPublishResponse
	(*ZenodoDepositionMetadata)(nil),      // 14: ZenodoDepositionMetadata
	(*ZenodoMetaResponse)(nil),            // 15: ZenodoMetaResponse
	(*ZenodoDepositionResponse)(nil),      // 16: ZenodoDepositionResponse
	(*ZenodoFileUploadsLink)(nil),         // 17: ZenodoFileUploadsLink
	(*ZenodoFileUploadResponse)(nil),      // 18: ZenodoFileUploadResponse
}
var file_doi_proto_depIdxs = []int32{
	1,  // 0: DOIMetadata.creators:type_name -> DOICreator
	0,  // 1: DOIMetadata.relatedIdentifiers:type_name -> DOIRelatedIdentifier
	2,  // 2: DOIMetadata.contributors:type_name -> DOIContributor
	4,  // 3: ZenodoFile.links:type_name -> ZenodoFileLink
	8,  // 4: ZenodoPublishResponseMetadata.communities:type_name -> ZenodoCommunity
	9,  // 5: ZenodoPublishResponseMetadata.creators:type_name -> ZenodoNameCreator
	11, // 6: ZenodoPublishResponseMetadata.prereserveDOI:type_name -> ZenodoPrereserveDOI
	5,  // 7: ZenodoPublishResponse.files:type_name -> ZenodoFile
	6,  // 8: ZenodoPublishResponse.links:type_name -> ZenodoLinks
	12, // 9: ZenodoPublishResponse.metadata:type_name -> ZenodoPublishResponseMetadata
	8,  // 10: ZenodoDepositionMetadata.communities:type_name -> ZenodoCommunity
	10, // 11: ZenodoDepositionMetadata.creators:type_name -> ZenodoNameAffiliationCreator
	11, // 12: ZenodoDepositionMetadata.prereserveDOI:type_name -> ZenodoPrereserveDOI
	5,  // 13: ZenodoMetaResponse.files:type_name -> ZenodoFile
	6,  // 14: ZenodoMetaResponse.links:type_name -> ZenodoLinks
	14, // 15: ZenodoMetaResponse.metadata:type_name -> ZenodoDepositionMetadata
	5,  // 16: ZenodoDepositionResponse.files:type_name -> ZenodoFile
	7,  // 17: ZenodoDepositionResponse.links:type_name -> ZenodoDraftLinks
	11, // 18: ZenodoDepositionResponse.metadata:type_name -> ZenodoPrereserveDOI
	17, // 19: ZenodoFileUploadResponse.links:type_name -> ZenodoFileUploadsLink
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_doi_proto_init() }
func file_doi_proto_init() {
	if File_doi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_doi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DOIRelatedIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DOICreator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DOIContributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DOIMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoFileLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoDraftLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoCommunity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoNameCreator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoNameAffiliationCreator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoPrereserveDOI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoPublishResponseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoPublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoDepositionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoDepositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoFileUploadsLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_doi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZenodoFileUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_doi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_doi_proto_goTypes,
		DependencyIndexes: file_doi_proto_depIdxs,
		MessageInfos:      file_doi_proto_msgTypes,
	}.Build()
	File_doi_proto = out.File
	file_doi_proto_rawDesc = nil
	file_doi_proto_goTypes = nil
	file_doi_proto_depIdxs = nil
}
