// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: websocket.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is expected to appear in all Resp messages. It is
// basically a replacement for HTTP status codes
type ResponseStatus int32

const (
	ResponseStatus_WS_UNDEFINED     ResponseStatus = 0
	ResponseStatus_WS_OK            ResponseStatus = 1
	ResponseStatus_WS_NOT_FOUND     ResponseStatus = 2
	ResponseStatus_WS_BAD_REQUEST   ResponseStatus = 3
	ResponseStatus_WS_NO_PERMISSION ResponseStatus = 4
	ResponseStatus_WS_SERVER_ERROR  ResponseStatus = 5
	// Really, this is likely a client-side error but included here
	// so it's in the enum
	ResponseStatus_WS_TIMEOUT ResponseStatus = 6
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "WS_UNDEFINED",
		1: "WS_OK",
		2: "WS_NOT_FOUND",
		3: "WS_BAD_REQUEST",
		4: "WS_NO_PERMISSION",
		5: "WS_SERVER_ERROR",
		6: "WS_TIMEOUT",
	}
	ResponseStatus_value = map[string]int32{
		"WS_UNDEFINED":     0,
		"WS_OK":            1,
		"WS_NOT_FOUND":     2,
		"WS_BAD_REQUEST":   3,
		"WS_NO_PERMISSION": 4,
		"WS_SERVER_ERROR":  5,
		"WS_TIMEOUT":       6,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[0].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[0]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

// The overall wrapper WSMessage
type WSMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message ID - think of this as a request ID to help associate requests and responses.
	// Should be a number counting up for each request sent from client, responses should include the same number
	// Other messages can leave this empty
	MsgId uint32 `protobuf:"varint,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// Response Status - only needs to be set on a response going back out of the API
	// This replaces the HTTP status code, so we don't have to define this field
	// in every response message (initially started doing that, but what if you need
	// more fields, see the following one)
	Status ResponseStatus `protobuf:"varint,2,opt,name=status,proto3,enum=ResponseStatus" json:"status,omitempty"`
	// Error text - if the response status is not WS_OK, this can contain any error string we want to send back
	ErrorText string `protobuf:"bytes,3,opt,name=errorText,proto3" json:"errorText,omitempty"`
	// Types that are assignable to Contents:
	//
	//	*WSMessage_DataModuleAddVersionReq
	//	*WSMessage_DataModuleAddVersionResp
	//	*WSMessage_DataModuleGetReq
	//	*WSMessage_DataModuleGetResp
	//	*WSMessage_DataModuleListReq
	//	*WSMessage_DataModuleListResp
	//	*WSMessage_DataModuleWriteReq
	//	*WSMessage_DataModuleWriteResp
	//	*WSMessage_DetectedDiffractionPeaksReq
	//	*WSMessage_DetectedDiffractionPeaksResp
	//	*WSMessage_DetectorConfigListReq
	//	*WSMessage_DetectorConfigListResp
	//	*WSMessage_DetectorConfigReq
	//	*WSMessage_DetectorConfigResp
	//	*WSMessage_DiffractionPeakManualDeleteReq
	//	*WSMessage_DiffractionPeakManualDeleteResp
	//	*WSMessage_DiffractionPeakManualInsertReq
	//	*WSMessage_DiffractionPeakManualInsertResp
	//	*WSMessage_DiffractionPeakManualListReq
	//	*WSMessage_DiffractionPeakManualListResp
	//	*WSMessage_DiffractionPeakStatusDeleteReq
	//	*WSMessage_DiffractionPeakStatusDeleteResp
	//	*WSMessage_DiffractionPeakStatusListReq
	//	*WSMessage_DiffractionPeakStatusListResp
	//	*WSMessage_DiffractionPeakStatusWriteReq
	//	*WSMessage_DiffractionPeakStatusWriteResp
	//	*WSMessage_ElementSetDeleteReq
	//	*WSMessage_ElementSetDeleteResp
	//	*WSMessage_ElementSetGetReq
	//	*WSMessage_ElementSetGetResp
	//	*WSMessage_ElementSetListReq
	//	*WSMessage_ElementSetListResp
	//	*WSMessage_ElementSetWriteReq
	//	*WSMessage_ElementSetWriteResp
	//	*WSMessage_ExportFilesReq
	//	*WSMessage_ExportFilesResp
	//	*WSMessage_ExpressionDeleteReq
	//	*WSMessage_ExpressionDeleteResp
	//	*WSMessage_ExpressionDisplaySettingsGetReq
	//	*WSMessage_ExpressionDisplaySettingsGetResp
	//	*WSMessage_ExpressionDisplaySettingsWriteReq
	//	*WSMessage_ExpressionDisplaySettingsWriteResp
	//	*WSMessage_ExpressionGetReq
	//	*WSMessage_ExpressionGetResp
	//	*WSMessage_ExpressionGroupDeleteReq
	//	*WSMessage_ExpressionGroupDeleteResp
	//	*WSMessage_ExpressionGroupGetReq
	//	*WSMessage_ExpressionGroupGetResp
	//	*WSMessage_ExpressionGroupListReq
	//	*WSMessage_ExpressionGroupListResp
	//	*WSMessage_ExpressionGroupWriteReq
	//	*WSMessage_ExpressionGroupWriteResp
	//	*WSMessage_ExpressionListReq
	//	*WSMessage_ExpressionListResp
	//	*WSMessage_ExpressionWriteExecStatReq
	//	*WSMessage_ExpressionWriteExecStatResp
	//	*WSMessage_ExpressionWriteReq
	//	*WSMessage_ExpressionWriteResp
	//	*WSMessage_GetOwnershipReq
	//	*WSMessage_GetOwnershipResp
	//	*WSMessage_ImageBeamLocationVersionsReq
	//	*WSMessage_ImageBeamLocationVersionsResp
	//	*WSMessage_ImageBeamLocationsReq
	//	*WSMessage_ImageBeamLocationsResp
	//	*WSMessage_ImageDeleteReq
	//	*WSMessage_ImageDeleteResp
	//	*WSMessage_ImageGetDefaultReq
	//	*WSMessage_ImageGetDefaultResp
	//	*WSMessage_ImageGetReq
	//	*WSMessage_ImageGetResp
	//	*WSMessage_ImageListReq
	//	*WSMessage_ImageListResp
	//	*WSMessage_ImageListUpd
	//	*WSMessage_ImageSetDefaultReq
	//	*WSMessage_ImageSetDefaultResp
	//	*WSMessage_ImageSetMatchTransformReq
	//	*WSMessage_ImageSetMatchTransformResp
	//	*WSMessage_ImportMarsViewerImageReq
	//	*WSMessage_ImportMarsViewerImageResp
	//	*WSMessage_ImportMarsViewerImageUpd
	//	*WSMessage_JobListReq
	//	*WSMessage_JobListResp
	//	*WSMessage_JobListUpd
	//	*WSMessage_LogGetLevelReq
	//	*WSMessage_LogGetLevelResp
	//	*WSMessage_LogReadReq
	//	*WSMessage_LogReadResp
	//	*WSMessage_LogSetLevelReq
	//	*WSMessage_LogSetLevelResp
	//	*WSMessage_MemoiseGetReq
	//	*WSMessage_MemoiseGetResp
	//	*WSMessage_MemoiseWriteReq
	//	*WSMessage_MemoiseWriteResp
	//	*WSMessage_MultiQuantCompareReq
	//	*WSMessage_MultiQuantCompareResp
	//	*WSMessage_NotificationDismissReq
	//	*WSMessage_NotificationDismissResp
	//	*WSMessage_NotificationReq
	//	*WSMessage_NotificationResp
	//	*WSMessage_NotificationUpd
	//	*WSMessage_ObjectEditAccessReq
	//	*WSMessage_ObjectEditAccessResp
	//	*WSMessage_PiquantConfigListReq
	//	*WSMessage_PiquantConfigListResp
	//	*WSMessage_PiquantConfigVersionReq
	//	*WSMessage_PiquantConfigVersionResp
	//	*WSMessage_PiquantConfigVersionsListReq
	//	*WSMessage_PiquantConfigVersionsListResp
	//	*WSMessage_PiquantCurrentVersionReq
	//	*WSMessage_PiquantCurrentVersionResp
	//	*WSMessage_PiquantVersionListReq
	//	*WSMessage_PiquantVersionListResp
	//	*WSMessage_PiquantWriteCurrentVersionReq
	//	*WSMessage_PiquantWriteCurrentVersionResp
	//	*WSMessage_PseudoIntensityReq
	//	*WSMessage_PseudoIntensityResp
	//	*WSMessage_PublishExpressionToZenodoReq
	//	*WSMessage_PublishExpressionToZenodoResp
	//	*WSMessage_QuantBlessReq
	//	*WSMessage_QuantBlessResp
	//	*WSMessage_QuantCombineListGetReq
	//	*WSMessage_QuantCombineListGetResp
	//	*WSMessage_QuantCombineListWriteReq
	//	*WSMessage_QuantCombineListWriteResp
	//	*WSMessage_QuantCombineReq
	//	*WSMessage_QuantCombineResp
	//	*WSMessage_QuantCreateReq
	//	*WSMessage_QuantCreateResp
	//	*WSMessage_QuantCreateUpd
	//	*WSMessage_QuantDeleteReq
	//	*WSMessage_QuantDeleteResp
	//	*WSMessage_QuantGetReq
	//	*WSMessage_QuantGetResp
	//	*WSMessage_QuantLastOutputGetReq
	//	*WSMessage_QuantLastOutputGetResp
	//	*WSMessage_QuantListReq
	//	*WSMessage_QuantListResp
	//	*WSMessage_QuantLogGetReq
	//	*WSMessage_QuantLogGetResp
	//	*WSMessage_QuantLogListReq
	//	*WSMessage_QuantLogListResp
	//	*WSMessage_QuantPublishReq
	//	*WSMessage_QuantPublishResp
	//	*WSMessage_QuantRawDataGetReq
	//	*WSMessage_QuantRawDataGetResp
	//	*WSMessage_QuantUploadReq
	//	*WSMessage_QuantUploadResp
	//	*WSMessage_RegionOfInterestBulkDuplicateReq
	//	*WSMessage_RegionOfInterestBulkDuplicateResp
	//	*WSMessage_RegionOfInterestBulkWriteReq
	//	*WSMessage_RegionOfInterestBulkWriteResp
	//	*WSMessage_RegionOfInterestDeleteReq
	//	*WSMessage_RegionOfInterestDeleteResp
	//	*WSMessage_RegionOfInterestDisplaySettingsGetReq
	//	*WSMessage_RegionOfInterestDisplaySettingsGetResp
	//	*WSMessage_RegionOfInterestDisplaySettingsWriteReq
	//	*WSMessage_RegionOfInterestDisplaySettingsWriteResp
	//	*WSMessage_RegionOfInterestGetReq
	//	*WSMessage_RegionOfInterestGetResp
	//	*WSMessage_RegionOfInterestListReq
	//	*WSMessage_RegionOfInterestListResp
	//	*WSMessage_RegionOfInterestWriteReq
	//	*WSMessage_RegionOfInterestWriteResp
	//	*WSMessage_RunTestReq
	//	*WSMessage_RunTestResp
	//	*WSMessage_ScanAutoShareReq
	//	*WSMessage_ScanAutoShareResp
	//	*WSMessage_ScanAutoShareWriteReq
	//	*WSMessage_ScanAutoShareWriteResp
	//	*WSMessage_ScanBeamLocationsReq
	//	*WSMessage_ScanBeamLocationsResp
	//	*WSMessage_ScanDeleteReq
	//	*WSMessage_ScanDeleteResp
	//	*WSMessage_ScanEntryMetadataReq
	//	*WSMessage_ScanEntryMetadataResp
	//	*WSMessage_ScanEntryReq
	//	*WSMessage_ScanEntryResp
	//	*WSMessage_ScanGetReq
	//	*WSMessage_ScanGetResp
	//	*WSMessage_ScanListReq
	//	*WSMessage_ScanListResp
	//	*WSMessage_ScanListUpd
	//	*WSMessage_ScanMetaLabelsAndTypesReq
	//	*WSMessage_ScanMetaLabelsAndTypesResp
	//	*WSMessage_ScanMetaWriteReq
	//	*WSMessage_ScanMetaWriteResp
	//	*WSMessage_ScanTriggerAutoQuantReq
	//	*WSMessage_ScanTriggerAutoQuantResp
	//	*WSMessage_ScanTriggerReImportReq
	//	*WSMessage_ScanTriggerReImportResp
	//	*WSMessage_ScanTriggerReImportUpd
	//	*WSMessage_ScanUploadReq
	//	*WSMessage_ScanUploadResp
	//	*WSMessage_ScanUploadUpd
	//	*WSMessage_ScreenConfigurationDeleteReq
	//	*WSMessage_ScreenConfigurationDeleteResp
	//	*WSMessage_ScreenConfigurationGetReq
	//	*WSMessage_ScreenConfigurationGetResp
	//	*WSMessage_ScreenConfigurationListReq
	//	*WSMessage_ScreenConfigurationListResp
	//	*WSMessage_ScreenConfigurationWriteReq
	//	*WSMessage_ScreenConfigurationWriteResp
	//	*WSMessage_SelectedImagePixelsReq
	//	*WSMessage_SelectedImagePixelsResp
	//	*WSMessage_SelectedImagePixelsWriteReq
	//	*WSMessage_SelectedImagePixelsWriteResp
	//	*WSMessage_SelectedScanEntriesReq
	//	*WSMessage_SelectedScanEntriesResp
	//	*WSMessage_SelectedScanEntriesWriteReq
	//	*WSMessage_SelectedScanEntriesWriteResp
	//	*WSMessage_SendUserNotificationReq
	//	*WSMessage_SendUserNotificationResp
	//	*WSMessage_SpectrumReq
	//	*WSMessage_SpectrumResp
	//	*WSMessage_TagCreateReq
	//	*WSMessage_TagCreateResp
	//	*WSMessage_TagDeleteReq
	//	*WSMessage_TagDeleteResp
	//	*WSMessage_TagListReq
	//	*WSMessage_TagListResp
	//	*WSMessage_UserAddRoleReq
	//	*WSMessage_UserAddRoleResp
	//	*WSMessage_UserDeleteRoleReq
	//	*WSMessage_UserDeleteRoleResp
	//	*WSMessage_UserDetailsReq
	//	*WSMessage_UserDetailsResp
	//	*WSMessage_UserDetailsWriteReq
	//	*WSMessage_UserDetailsWriteResp
	//	*WSMessage_UserGroupAddAdminReq
	//	*WSMessage_UserGroupAddAdminResp
	//	*WSMessage_UserGroupAddMemberReq
	//	*WSMessage_UserGroupAddMemberResp
	//	*WSMessage_UserGroupAddViewerReq
	//	*WSMessage_UserGroupAddViewerResp
	//	*WSMessage_UserGroupCreateReq
	//	*WSMessage_UserGroupCreateResp
	//	*WSMessage_UserGroupDeleteAdminReq
	//	*WSMessage_UserGroupDeleteAdminResp
	//	*WSMessage_UserGroupDeleteMemberReq
	//	*WSMessage_UserGroupDeleteMemberResp
	//	*WSMessage_UserGroupDeleteReq
	//	*WSMessage_UserGroupDeleteResp
	//	*WSMessage_UserGroupDeleteViewerReq
	//	*WSMessage_UserGroupDeleteViewerResp
	//	*WSMessage_UserGroupEditDetailsReq
	//	*WSMessage_UserGroupEditDetailsResp
	//	*WSMessage_UserGroupIgnoreJoinReq
	//	*WSMessage_UserGroupIgnoreJoinResp
	//	*WSMessage_UserGroupJoinListReq
	//	*WSMessage_UserGroupJoinListResp
	//	*WSMessage_UserGroupJoinReq
	//	*WSMessage_UserGroupJoinResp
	//	*WSMessage_UserGroupListJoinableReq
	//	*WSMessage_UserGroupListJoinableResp
	//	*WSMessage_UserGroupListReq
	//	*WSMessage_UserGroupListResp
	//	*WSMessage_UserGroupReq
	//	*WSMessage_UserGroupResp
	//	*WSMessage_UserListReq
	//	*WSMessage_UserListResp
	//	*WSMessage_UserNotificationSettingsReq
	//	*WSMessage_UserNotificationSettingsResp
	//	*WSMessage_UserNotificationSettingsUpd
	//	*WSMessage_UserNotificationSettingsWriteReq
	//	*WSMessage_UserNotificationSettingsWriteResp
	//	*WSMessage_UserRoleListReq
	//	*WSMessage_UserRoleListResp
	//	*WSMessage_UserRolesListReq
	//	*WSMessage_UserRolesListResp
	//	*WSMessage_UserSearchReq
	//	*WSMessage_UserSearchResp
	//	*WSMessage_WidgetDataGetReq
	//	*WSMessage_WidgetDataGetResp
	//	*WSMessage_WidgetDataWriteReq
	//	*WSMessage_WidgetDataWriteResp
	//	*WSMessage_ZenodoDOIGetReq
	//	*WSMessage_ZenodoDOIGetResp
	Contents isWSMessage_Contents `protobuf_oneof:"Contents"`
}

func (x *WSMessage) Reset() {
	*x = WSMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSMessage) ProtoMessage() {}

func (x *WSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSMessage.ProtoReflect.Descriptor instead.
func (*WSMessage) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

func (x *WSMessage) GetMsgId() uint32 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *WSMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_WS_UNDEFINED
}

func (x *WSMessage) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (m *WSMessage) GetContents() isWSMessage_Contents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (x *WSMessage) GetDataModuleAddVersionReq() *DataModuleAddVersionReq {
	if x, ok := x.GetContents().(*WSMessage_DataModuleAddVersionReq); ok {
		return x.DataModuleAddVersionReq
	}
	return nil
}

func (x *WSMessage) GetDataModuleAddVersionResp() *DataModuleAddVersionResp {
	if x, ok := x.GetContents().(*WSMessage_DataModuleAddVersionResp); ok {
		return x.DataModuleAddVersionResp
	}
	return nil
}

func (x *WSMessage) GetDataModuleGetReq() *DataModuleGetReq {
	if x, ok := x.GetContents().(*WSMessage_DataModuleGetReq); ok {
		return x.DataModuleGetReq
	}
	return nil
}

func (x *WSMessage) GetDataModuleGetResp() *DataModuleGetResp {
	if x, ok := x.GetContents().(*WSMessage_DataModuleGetResp); ok {
		return x.DataModuleGetResp
	}
	return nil
}

func (x *WSMessage) GetDataModuleListReq() *DataModuleListReq {
	if x, ok := x.GetContents().(*WSMessage_DataModuleListReq); ok {
		return x.DataModuleListReq
	}
	return nil
}

func (x *WSMessage) GetDataModuleListResp() *DataModuleListResp {
	if x, ok := x.GetContents().(*WSMessage_DataModuleListResp); ok {
		return x.DataModuleListResp
	}
	return nil
}

func (x *WSMessage) GetDataModuleWriteReq() *DataModuleWriteReq {
	if x, ok := x.GetContents().(*WSMessage_DataModuleWriteReq); ok {
		return x.DataModuleWriteReq
	}
	return nil
}

func (x *WSMessage) GetDataModuleWriteResp() *DataModuleWriteResp {
	if x, ok := x.GetContents().(*WSMessage_DataModuleWriteResp); ok {
		return x.DataModuleWriteResp
	}
	return nil
}

func (x *WSMessage) GetDetectedDiffractionPeaksReq() *DetectedDiffractionPeaksReq {
	if x, ok := x.GetContents().(*WSMessage_DetectedDiffractionPeaksReq); ok {
		return x.DetectedDiffractionPeaksReq
	}
	return nil
}

func (x *WSMessage) GetDetectedDiffractionPeaksResp() *DetectedDiffractionPeaksResp {
	if x, ok := x.GetContents().(*WSMessage_DetectedDiffractionPeaksResp); ok {
		return x.DetectedDiffractionPeaksResp
	}
	return nil
}

func (x *WSMessage) GetDetectorConfigListReq() *DetectorConfigListReq {
	if x, ok := x.GetContents().(*WSMessage_DetectorConfigListReq); ok {
		return x.DetectorConfigListReq
	}
	return nil
}

func (x *WSMessage) GetDetectorConfigListResp() *DetectorConfigListResp {
	if x, ok := x.GetContents().(*WSMessage_DetectorConfigListResp); ok {
		return x.DetectorConfigListResp
	}
	return nil
}

func (x *WSMessage) GetDetectorConfigReq() *DetectorConfigReq {
	if x, ok := x.GetContents().(*WSMessage_DetectorConfigReq); ok {
		return x.DetectorConfigReq
	}
	return nil
}

func (x *WSMessage) GetDetectorConfigResp() *DetectorConfigResp {
	if x, ok := x.GetContents().(*WSMessage_DetectorConfigResp); ok {
		return x.DetectorConfigResp
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakManualDeleteReq() *DiffractionPeakManualDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakManualDeleteReq); ok {
		return x.DiffractionPeakManualDeleteReq
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakManualDeleteResp() *DiffractionPeakManualDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakManualDeleteResp); ok {
		return x.DiffractionPeakManualDeleteResp
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakManualInsertReq() *DiffractionPeakManualInsertReq {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakManualInsertReq); ok {
		return x.DiffractionPeakManualInsertReq
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakManualInsertResp() *DiffractionPeakManualInsertResp {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakManualInsertResp); ok {
		return x.DiffractionPeakManualInsertResp
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakManualListReq() *DiffractionPeakManualListReq {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakManualListReq); ok {
		return x.DiffractionPeakManualListReq
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakManualListResp() *DiffractionPeakManualListResp {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakManualListResp); ok {
		return x.DiffractionPeakManualListResp
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakStatusDeleteReq() *DiffractionPeakStatusDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakStatusDeleteReq); ok {
		return x.DiffractionPeakStatusDeleteReq
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakStatusDeleteResp() *DiffractionPeakStatusDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakStatusDeleteResp); ok {
		return x.DiffractionPeakStatusDeleteResp
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakStatusListReq() *DiffractionPeakStatusListReq {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakStatusListReq); ok {
		return x.DiffractionPeakStatusListReq
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakStatusListResp() *DiffractionPeakStatusListResp {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakStatusListResp); ok {
		return x.DiffractionPeakStatusListResp
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakStatusWriteReq() *DiffractionPeakStatusWriteReq {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakStatusWriteReq); ok {
		return x.DiffractionPeakStatusWriteReq
	}
	return nil
}

func (x *WSMessage) GetDiffractionPeakStatusWriteResp() *DiffractionPeakStatusWriteResp {
	if x, ok := x.GetContents().(*WSMessage_DiffractionPeakStatusWriteResp); ok {
		return x.DiffractionPeakStatusWriteResp
	}
	return nil
}

func (x *WSMessage) GetElementSetDeleteReq() *ElementSetDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_ElementSetDeleteReq); ok {
		return x.ElementSetDeleteReq
	}
	return nil
}

func (x *WSMessage) GetElementSetDeleteResp() *ElementSetDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_ElementSetDeleteResp); ok {
		return x.ElementSetDeleteResp
	}
	return nil
}

func (x *WSMessage) GetElementSetGetReq() *ElementSetGetReq {
	if x, ok := x.GetContents().(*WSMessage_ElementSetGetReq); ok {
		return x.ElementSetGetReq
	}
	return nil
}

func (x *WSMessage) GetElementSetGetResp() *ElementSetGetResp {
	if x, ok := x.GetContents().(*WSMessage_ElementSetGetResp); ok {
		return x.ElementSetGetResp
	}
	return nil
}

func (x *WSMessage) GetElementSetListReq() *ElementSetListReq {
	if x, ok := x.GetContents().(*WSMessage_ElementSetListReq); ok {
		return x.ElementSetListReq
	}
	return nil
}

func (x *WSMessage) GetElementSetListResp() *ElementSetListResp {
	if x, ok := x.GetContents().(*WSMessage_ElementSetListResp); ok {
		return x.ElementSetListResp
	}
	return nil
}

func (x *WSMessage) GetElementSetWriteReq() *ElementSetWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ElementSetWriteReq); ok {
		return x.ElementSetWriteReq
	}
	return nil
}

func (x *WSMessage) GetElementSetWriteResp() *ElementSetWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ElementSetWriteResp); ok {
		return x.ElementSetWriteResp
	}
	return nil
}

func (x *WSMessage) GetExportFilesReq() *ExportFilesReq {
	if x, ok := x.GetContents().(*WSMessage_ExportFilesReq); ok {
		return x.ExportFilesReq
	}
	return nil
}

func (x *WSMessage) GetExportFilesResp() *ExportFilesResp {
	if x, ok := x.GetContents().(*WSMessage_ExportFilesResp); ok {
		return x.ExportFilesResp
	}
	return nil
}

func (x *WSMessage) GetExpressionDeleteReq() *ExpressionDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionDeleteReq); ok {
		return x.ExpressionDeleteReq
	}
	return nil
}

func (x *WSMessage) GetExpressionDeleteResp() *ExpressionDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionDeleteResp); ok {
		return x.ExpressionDeleteResp
	}
	return nil
}

func (x *WSMessage) GetExpressionDisplaySettingsGetReq() *ExpressionDisplaySettingsGetReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionDisplaySettingsGetReq); ok {
		return x.ExpressionDisplaySettingsGetReq
	}
	return nil
}

func (x *WSMessage) GetExpressionDisplaySettingsGetResp() *ExpressionDisplaySettingsGetResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionDisplaySettingsGetResp); ok {
		return x.ExpressionDisplaySettingsGetResp
	}
	return nil
}

func (x *WSMessage) GetExpressionDisplaySettingsWriteReq() *ExpressionDisplaySettingsWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionDisplaySettingsWriteReq); ok {
		return x.ExpressionDisplaySettingsWriteReq
	}
	return nil
}

func (x *WSMessage) GetExpressionDisplaySettingsWriteResp() *ExpressionDisplaySettingsWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionDisplaySettingsWriteResp); ok {
		return x.ExpressionDisplaySettingsWriteResp
	}
	return nil
}

func (x *WSMessage) GetExpressionGetReq() *ExpressionGetReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGetReq); ok {
		return x.ExpressionGetReq
	}
	return nil
}

func (x *WSMessage) GetExpressionGetResp() *ExpressionGetResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGetResp); ok {
		return x.ExpressionGetResp
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupDeleteReq() *ExpressionGroupDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupDeleteReq); ok {
		return x.ExpressionGroupDeleteReq
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupDeleteResp() *ExpressionGroupDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupDeleteResp); ok {
		return x.ExpressionGroupDeleteResp
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupGetReq() *ExpressionGroupGetReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupGetReq); ok {
		return x.ExpressionGroupGetReq
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupGetResp() *ExpressionGroupGetResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupGetResp); ok {
		return x.ExpressionGroupGetResp
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupListReq() *ExpressionGroupListReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupListReq); ok {
		return x.ExpressionGroupListReq
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupListResp() *ExpressionGroupListResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupListResp); ok {
		return x.ExpressionGroupListResp
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupWriteReq() *ExpressionGroupWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupWriteReq); ok {
		return x.ExpressionGroupWriteReq
	}
	return nil
}

func (x *WSMessage) GetExpressionGroupWriteResp() *ExpressionGroupWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionGroupWriteResp); ok {
		return x.ExpressionGroupWriteResp
	}
	return nil
}

func (x *WSMessage) GetExpressionListReq() *ExpressionListReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionListReq); ok {
		return x.ExpressionListReq
	}
	return nil
}

func (x *WSMessage) GetExpressionListResp() *ExpressionListResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionListResp); ok {
		return x.ExpressionListResp
	}
	return nil
}

func (x *WSMessage) GetExpressionWriteExecStatReq() *ExpressionWriteExecStatReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionWriteExecStatReq); ok {
		return x.ExpressionWriteExecStatReq
	}
	return nil
}

func (x *WSMessage) GetExpressionWriteExecStatResp() *ExpressionWriteExecStatResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionWriteExecStatResp); ok {
		return x.ExpressionWriteExecStatResp
	}
	return nil
}

func (x *WSMessage) GetExpressionWriteReq() *ExpressionWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ExpressionWriteReq); ok {
		return x.ExpressionWriteReq
	}
	return nil
}

func (x *WSMessage) GetExpressionWriteResp() *ExpressionWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ExpressionWriteResp); ok {
		return x.ExpressionWriteResp
	}
	return nil
}

func (x *WSMessage) GetGetOwnershipReq() *GetOwnershipReq {
	if x, ok := x.GetContents().(*WSMessage_GetOwnershipReq); ok {
		return x.GetOwnershipReq
	}
	return nil
}

func (x *WSMessage) GetGetOwnershipResp() *GetOwnershipResp {
	if x, ok := x.GetContents().(*WSMessage_GetOwnershipResp); ok {
		return x.GetOwnershipResp
	}
	return nil
}

func (x *WSMessage) GetImageBeamLocationVersionsReq() *ImageBeamLocationVersionsReq {
	if x, ok := x.GetContents().(*WSMessage_ImageBeamLocationVersionsReq); ok {
		return x.ImageBeamLocationVersionsReq
	}
	return nil
}

func (x *WSMessage) GetImageBeamLocationVersionsResp() *ImageBeamLocationVersionsResp {
	if x, ok := x.GetContents().(*WSMessage_ImageBeamLocationVersionsResp); ok {
		return x.ImageBeamLocationVersionsResp
	}
	return nil
}

func (x *WSMessage) GetImageBeamLocationsReq() *ImageBeamLocationsReq {
	if x, ok := x.GetContents().(*WSMessage_ImageBeamLocationsReq); ok {
		return x.ImageBeamLocationsReq
	}
	return nil
}

func (x *WSMessage) GetImageBeamLocationsResp() *ImageBeamLocationsResp {
	if x, ok := x.GetContents().(*WSMessage_ImageBeamLocationsResp); ok {
		return x.ImageBeamLocationsResp
	}
	return nil
}

func (x *WSMessage) GetImageDeleteReq() *ImageDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_ImageDeleteReq); ok {
		return x.ImageDeleteReq
	}
	return nil
}

func (x *WSMessage) GetImageDeleteResp() *ImageDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_ImageDeleteResp); ok {
		return x.ImageDeleteResp
	}
	return nil
}

func (x *WSMessage) GetImageGetDefaultReq() *ImageGetDefaultReq {
	if x, ok := x.GetContents().(*WSMessage_ImageGetDefaultReq); ok {
		return x.ImageGetDefaultReq
	}
	return nil
}

func (x *WSMessage) GetImageGetDefaultResp() *ImageGetDefaultResp {
	if x, ok := x.GetContents().(*WSMessage_ImageGetDefaultResp); ok {
		return x.ImageGetDefaultResp
	}
	return nil
}

func (x *WSMessage) GetImageGetReq() *ImageGetReq {
	if x, ok := x.GetContents().(*WSMessage_ImageGetReq); ok {
		return x.ImageGetReq
	}
	return nil
}

func (x *WSMessage) GetImageGetResp() *ImageGetResp {
	if x, ok := x.GetContents().(*WSMessage_ImageGetResp); ok {
		return x.ImageGetResp
	}
	return nil
}

func (x *WSMessage) GetImageListReq() *ImageListReq {
	if x, ok := x.GetContents().(*WSMessage_ImageListReq); ok {
		return x.ImageListReq
	}
	return nil
}

func (x *WSMessage) GetImageListResp() *ImageListResp {
	if x, ok := x.GetContents().(*WSMessage_ImageListResp); ok {
		return x.ImageListResp
	}
	return nil
}

func (x *WSMessage) GetImageListUpd() *ImageListUpd {
	if x, ok := x.GetContents().(*WSMessage_ImageListUpd); ok {
		return x.ImageListUpd
	}
	return nil
}

func (x *WSMessage) GetImageSetDefaultReq() *ImageSetDefaultReq {
	if x, ok := x.GetContents().(*WSMessage_ImageSetDefaultReq); ok {
		return x.ImageSetDefaultReq
	}
	return nil
}

func (x *WSMessage) GetImageSetDefaultResp() *ImageSetDefaultResp {
	if x, ok := x.GetContents().(*WSMessage_ImageSetDefaultResp); ok {
		return x.ImageSetDefaultResp
	}
	return nil
}

func (x *WSMessage) GetImageSetMatchTransformReq() *ImageSetMatchTransformReq {
	if x, ok := x.GetContents().(*WSMessage_ImageSetMatchTransformReq); ok {
		return x.ImageSetMatchTransformReq
	}
	return nil
}

func (x *WSMessage) GetImageSetMatchTransformResp() *ImageSetMatchTransformResp {
	if x, ok := x.GetContents().(*WSMessage_ImageSetMatchTransformResp); ok {
		return x.ImageSetMatchTransformResp
	}
	return nil
}

func (x *WSMessage) GetImportMarsViewerImageReq() *ImportMarsViewerImageReq {
	if x, ok := x.GetContents().(*WSMessage_ImportMarsViewerImageReq); ok {
		return x.ImportMarsViewerImageReq
	}
	return nil
}

func (x *WSMessage) GetImportMarsViewerImageResp() *ImportMarsViewerImageResp {
	if x, ok := x.GetContents().(*WSMessage_ImportMarsViewerImageResp); ok {
		return x.ImportMarsViewerImageResp
	}
	return nil
}

func (x *WSMessage) GetImportMarsViewerImageUpd() *ImportMarsViewerImageUpd {
	if x, ok := x.GetContents().(*WSMessage_ImportMarsViewerImageUpd); ok {
		return x.ImportMarsViewerImageUpd
	}
	return nil
}

func (x *WSMessage) GetJobListReq() *JobListReq {
	if x, ok := x.GetContents().(*WSMessage_JobListReq); ok {
		return x.JobListReq
	}
	return nil
}

func (x *WSMessage) GetJobListResp() *JobListResp {
	if x, ok := x.GetContents().(*WSMessage_JobListResp); ok {
		return x.JobListResp
	}
	return nil
}

func (x *WSMessage) GetJobListUpd() *JobListUpd {
	if x, ok := x.GetContents().(*WSMessage_JobListUpd); ok {
		return x.JobListUpd
	}
	return nil
}

func (x *WSMessage) GetLogGetLevelReq() *LogGetLevelReq {
	if x, ok := x.GetContents().(*WSMessage_LogGetLevelReq); ok {
		return x.LogGetLevelReq
	}
	return nil
}

func (x *WSMessage) GetLogGetLevelResp() *LogGetLevelResp {
	if x, ok := x.GetContents().(*WSMessage_LogGetLevelResp); ok {
		return x.LogGetLevelResp
	}
	return nil
}

func (x *WSMessage) GetLogReadReq() *LogReadReq {
	if x, ok := x.GetContents().(*WSMessage_LogReadReq); ok {
		return x.LogReadReq
	}
	return nil
}

func (x *WSMessage) GetLogReadResp() *LogReadResp {
	if x, ok := x.GetContents().(*WSMessage_LogReadResp); ok {
		return x.LogReadResp
	}
	return nil
}

func (x *WSMessage) GetLogSetLevelReq() *LogSetLevelReq {
	if x, ok := x.GetContents().(*WSMessage_LogSetLevelReq); ok {
		return x.LogSetLevelReq
	}
	return nil
}

func (x *WSMessage) GetLogSetLevelResp() *LogSetLevelResp {
	if x, ok := x.GetContents().(*WSMessage_LogSetLevelResp); ok {
		return x.LogSetLevelResp
	}
	return nil
}

func (x *WSMessage) GetMemoiseGetReq() *MemoiseGetReq {
	if x, ok := x.GetContents().(*WSMessage_MemoiseGetReq); ok {
		return x.MemoiseGetReq
	}
	return nil
}

func (x *WSMessage) GetMemoiseGetResp() *MemoiseGetResp {
	if x, ok := x.GetContents().(*WSMessage_MemoiseGetResp); ok {
		return x.MemoiseGetResp
	}
	return nil
}

func (x *WSMessage) GetMemoiseWriteReq() *MemoiseWriteReq {
	if x, ok := x.GetContents().(*WSMessage_MemoiseWriteReq); ok {
		return x.MemoiseWriteReq
	}
	return nil
}

func (x *WSMessage) GetMemoiseWriteResp() *MemoiseWriteResp {
	if x, ok := x.GetContents().(*WSMessage_MemoiseWriteResp); ok {
		return x.MemoiseWriteResp
	}
	return nil
}

func (x *WSMessage) GetMultiQuantCompareReq() *MultiQuantCompareReq {
	if x, ok := x.GetContents().(*WSMessage_MultiQuantCompareReq); ok {
		return x.MultiQuantCompareReq
	}
	return nil
}

func (x *WSMessage) GetMultiQuantCompareResp() *MultiQuantCompareResp {
	if x, ok := x.GetContents().(*WSMessage_MultiQuantCompareResp); ok {
		return x.MultiQuantCompareResp
	}
	return nil
}

func (x *WSMessage) GetNotificationDismissReq() *NotificationDismissReq {
	if x, ok := x.GetContents().(*WSMessage_NotificationDismissReq); ok {
		return x.NotificationDismissReq
	}
	return nil
}

func (x *WSMessage) GetNotificationDismissResp() *NotificationDismissResp {
	if x, ok := x.GetContents().(*WSMessage_NotificationDismissResp); ok {
		return x.NotificationDismissResp
	}
	return nil
}

func (x *WSMessage) GetNotificationReq() *NotificationReq {
	if x, ok := x.GetContents().(*WSMessage_NotificationReq); ok {
		return x.NotificationReq
	}
	return nil
}

func (x *WSMessage) GetNotificationResp() *NotificationResp {
	if x, ok := x.GetContents().(*WSMessage_NotificationResp); ok {
		return x.NotificationResp
	}
	return nil
}

func (x *WSMessage) GetNotificationUpd() *NotificationUpd {
	if x, ok := x.GetContents().(*WSMessage_NotificationUpd); ok {
		return x.NotificationUpd
	}
	return nil
}

func (x *WSMessage) GetObjectEditAccessReq() *ObjectEditAccessReq {
	if x, ok := x.GetContents().(*WSMessage_ObjectEditAccessReq); ok {
		return x.ObjectEditAccessReq
	}
	return nil
}

func (x *WSMessage) GetObjectEditAccessResp() *ObjectEditAccessResp {
	if x, ok := x.GetContents().(*WSMessage_ObjectEditAccessResp); ok {
		return x.ObjectEditAccessResp
	}
	return nil
}

func (x *WSMessage) GetPiquantConfigListReq() *PiquantConfigListReq {
	if x, ok := x.GetContents().(*WSMessage_PiquantConfigListReq); ok {
		return x.PiquantConfigListReq
	}
	return nil
}

func (x *WSMessage) GetPiquantConfigListResp() *PiquantConfigListResp {
	if x, ok := x.GetContents().(*WSMessage_PiquantConfigListResp); ok {
		return x.PiquantConfigListResp
	}
	return nil
}

func (x *WSMessage) GetPiquantConfigVersionReq() *PiquantConfigVersionReq {
	if x, ok := x.GetContents().(*WSMessage_PiquantConfigVersionReq); ok {
		return x.PiquantConfigVersionReq
	}
	return nil
}

func (x *WSMessage) GetPiquantConfigVersionResp() *PiquantConfigVersionResp {
	if x, ok := x.GetContents().(*WSMessage_PiquantConfigVersionResp); ok {
		return x.PiquantConfigVersionResp
	}
	return nil
}

func (x *WSMessage) GetPiquantConfigVersionsListReq() *PiquantConfigVersionsListReq {
	if x, ok := x.GetContents().(*WSMessage_PiquantConfigVersionsListReq); ok {
		return x.PiquantConfigVersionsListReq
	}
	return nil
}

func (x *WSMessage) GetPiquantConfigVersionsListResp() *PiquantConfigVersionsListResp {
	if x, ok := x.GetContents().(*WSMessage_PiquantConfigVersionsListResp); ok {
		return x.PiquantConfigVersionsListResp
	}
	return nil
}

func (x *WSMessage) GetPiquantCurrentVersionReq() *PiquantCurrentVersionReq {
	if x, ok := x.GetContents().(*WSMessage_PiquantCurrentVersionReq); ok {
		return x.PiquantCurrentVersionReq
	}
	return nil
}

func (x *WSMessage) GetPiquantCurrentVersionResp() *PiquantCurrentVersionResp {
	if x, ok := x.GetContents().(*WSMessage_PiquantCurrentVersionResp); ok {
		return x.PiquantCurrentVersionResp
	}
	return nil
}

func (x *WSMessage) GetPiquantVersionListReq() *PiquantVersionListReq {
	if x, ok := x.GetContents().(*WSMessage_PiquantVersionListReq); ok {
		return x.PiquantVersionListReq
	}
	return nil
}

func (x *WSMessage) GetPiquantVersionListResp() *PiquantVersionListResp {
	if x, ok := x.GetContents().(*WSMessage_PiquantVersionListResp); ok {
		return x.PiquantVersionListResp
	}
	return nil
}

func (x *WSMessage) GetPiquantWriteCurrentVersionReq() *PiquantWriteCurrentVersionReq {
	if x, ok := x.GetContents().(*WSMessage_PiquantWriteCurrentVersionReq); ok {
		return x.PiquantWriteCurrentVersionReq
	}
	return nil
}

func (x *WSMessage) GetPiquantWriteCurrentVersionResp() *PiquantWriteCurrentVersionResp {
	if x, ok := x.GetContents().(*WSMessage_PiquantWriteCurrentVersionResp); ok {
		return x.PiquantWriteCurrentVersionResp
	}
	return nil
}

func (x *WSMessage) GetPseudoIntensityReq() *PseudoIntensityReq {
	if x, ok := x.GetContents().(*WSMessage_PseudoIntensityReq); ok {
		return x.PseudoIntensityReq
	}
	return nil
}

func (x *WSMessage) GetPseudoIntensityResp() *PseudoIntensityResp {
	if x, ok := x.GetContents().(*WSMessage_PseudoIntensityResp); ok {
		return x.PseudoIntensityResp
	}
	return nil
}

func (x *WSMessage) GetPublishExpressionToZenodoReq() *PublishExpressionToZenodoReq {
	if x, ok := x.GetContents().(*WSMessage_PublishExpressionToZenodoReq); ok {
		return x.PublishExpressionToZenodoReq
	}
	return nil
}

func (x *WSMessage) GetPublishExpressionToZenodoResp() *PublishExpressionToZenodoResp {
	if x, ok := x.GetContents().(*WSMessage_PublishExpressionToZenodoResp); ok {
		return x.PublishExpressionToZenodoResp
	}
	return nil
}

func (x *WSMessage) GetQuantBlessReq() *QuantBlessReq {
	if x, ok := x.GetContents().(*WSMessage_QuantBlessReq); ok {
		return x.QuantBlessReq
	}
	return nil
}

func (x *WSMessage) GetQuantBlessResp() *QuantBlessResp {
	if x, ok := x.GetContents().(*WSMessage_QuantBlessResp); ok {
		return x.QuantBlessResp
	}
	return nil
}

func (x *WSMessage) GetQuantCombineListGetReq() *QuantCombineListGetReq {
	if x, ok := x.GetContents().(*WSMessage_QuantCombineListGetReq); ok {
		return x.QuantCombineListGetReq
	}
	return nil
}

func (x *WSMessage) GetQuantCombineListGetResp() *QuantCombineListGetResp {
	if x, ok := x.GetContents().(*WSMessage_QuantCombineListGetResp); ok {
		return x.QuantCombineListGetResp
	}
	return nil
}

func (x *WSMessage) GetQuantCombineListWriteReq() *QuantCombineListWriteReq {
	if x, ok := x.GetContents().(*WSMessage_QuantCombineListWriteReq); ok {
		return x.QuantCombineListWriteReq
	}
	return nil
}

func (x *WSMessage) GetQuantCombineListWriteResp() *QuantCombineListWriteResp {
	if x, ok := x.GetContents().(*WSMessage_QuantCombineListWriteResp); ok {
		return x.QuantCombineListWriteResp
	}
	return nil
}

func (x *WSMessage) GetQuantCombineReq() *QuantCombineReq {
	if x, ok := x.GetContents().(*WSMessage_QuantCombineReq); ok {
		return x.QuantCombineReq
	}
	return nil
}

func (x *WSMessage) GetQuantCombineResp() *QuantCombineResp {
	if x, ok := x.GetContents().(*WSMessage_QuantCombineResp); ok {
		return x.QuantCombineResp
	}
	return nil
}

func (x *WSMessage) GetQuantCreateReq() *QuantCreateReq {
	if x, ok := x.GetContents().(*WSMessage_QuantCreateReq); ok {
		return x.QuantCreateReq
	}
	return nil
}

func (x *WSMessage) GetQuantCreateResp() *QuantCreateResp {
	if x, ok := x.GetContents().(*WSMessage_QuantCreateResp); ok {
		return x.QuantCreateResp
	}
	return nil
}

func (x *WSMessage) GetQuantCreateUpd() *QuantCreateUpd {
	if x, ok := x.GetContents().(*WSMessage_QuantCreateUpd); ok {
		return x.QuantCreateUpd
	}
	return nil
}

func (x *WSMessage) GetQuantDeleteReq() *QuantDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_QuantDeleteReq); ok {
		return x.QuantDeleteReq
	}
	return nil
}

func (x *WSMessage) GetQuantDeleteResp() *QuantDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_QuantDeleteResp); ok {
		return x.QuantDeleteResp
	}
	return nil
}

func (x *WSMessage) GetQuantGetReq() *QuantGetReq {
	if x, ok := x.GetContents().(*WSMessage_QuantGetReq); ok {
		return x.QuantGetReq
	}
	return nil
}

func (x *WSMessage) GetQuantGetResp() *QuantGetResp {
	if x, ok := x.GetContents().(*WSMessage_QuantGetResp); ok {
		return x.QuantGetResp
	}
	return nil
}

func (x *WSMessage) GetQuantLastOutputGetReq() *QuantLastOutputGetReq {
	if x, ok := x.GetContents().(*WSMessage_QuantLastOutputGetReq); ok {
		return x.QuantLastOutputGetReq
	}
	return nil
}

func (x *WSMessage) GetQuantLastOutputGetResp() *QuantLastOutputGetResp {
	if x, ok := x.GetContents().(*WSMessage_QuantLastOutputGetResp); ok {
		return x.QuantLastOutputGetResp
	}
	return nil
}

func (x *WSMessage) GetQuantListReq() *QuantListReq {
	if x, ok := x.GetContents().(*WSMessage_QuantListReq); ok {
		return x.QuantListReq
	}
	return nil
}

func (x *WSMessage) GetQuantListResp() *QuantListResp {
	if x, ok := x.GetContents().(*WSMessage_QuantListResp); ok {
		return x.QuantListResp
	}
	return nil
}

func (x *WSMessage) GetQuantLogGetReq() *QuantLogGetReq {
	if x, ok := x.GetContents().(*WSMessage_QuantLogGetReq); ok {
		return x.QuantLogGetReq
	}
	return nil
}

func (x *WSMessage) GetQuantLogGetResp() *QuantLogGetResp {
	if x, ok := x.GetContents().(*WSMessage_QuantLogGetResp); ok {
		return x.QuantLogGetResp
	}
	return nil
}

func (x *WSMessage) GetQuantLogListReq() *QuantLogListReq {
	if x, ok := x.GetContents().(*WSMessage_QuantLogListReq); ok {
		return x.QuantLogListReq
	}
	return nil
}

func (x *WSMessage) GetQuantLogListResp() *QuantLogListResp {
	if x, ok := x.GetContents().(*WSMessage_QuantLogListResp); ok {
		return x.QuantLogListResp
	}
	return nil
}

func (x *WSMessage) GetQuantPublishReq() *QuantPublishReq {
	if x, ok := x.GetContents().(*WSMessage_QuantPublishReq); ok {
		return x.QuantPublishReq
	}
	return nil
}

func (x *WSMessage) GetQuantPublishResp() *QuantPublishResp {
	if x, ok := x.GetContents().(*WSMessage_QuantPublishResp); ok {
		return x.QuantPublishResp
	}
	return nil
}

func (x *WSMessage) GetQuantRawDataGetReq() *QuantRawDataGetReq {
	if x, ok := x.GetContents().(*WSMessage_QuantRawDataGetReq); ok {
		return x.QuantRawDataGetReq
	}
	return nil
}

func (x *WSMessage) GetQuantRawDataGetResp() *QuantRawDataGetResp {
	if x, ok := x.GetContents().(*WSMessage_QuantRawDataGetResp); ok {
		return x.QuantRawDataGetResp
	}
	return nil
}

func (x *WSMessage) GetQuantUploadReq() *QuantUploadReq {
	if x, ok := x.GetContents().(*WSMessage_QuantUploadReq); ok {
		return x.QuantUploadReq
	}
	return nil
}

func (x *WSMessage) GetQuantUploadResp() *QuantUploadResp {
	if x, ok := x.GetContents().(*WSMessage_QuantUploadResp); ok {
		return x.QuantUploadResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestBulkDuplicateReq() *RegionOfInterestBulkDuplicateReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestBulkDuplicateReq); ok {
		return x.RegionOfInterestBulkDuplicateReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestBulkDuplicateResp() *RegionOfInterestBulkDuplicateResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestBulkDuplicateResp); ok {
		return x.RegionOfInterestBulkDuplicateResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestBulkWriteReq() *RegionOfInterestBulkWriteReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestBulkWriteReq); ok {
		return x.RegionOfInterestBulkWriteReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestBulkWriteResp() *RegionOfInterestBulkWriteResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestBulkWriteResp); ok {
		return x.RegionOfInterestBulkWriteResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestDeleteReq() *RegionOfInterestDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestDeleteReq); ok {
		return x.RegionOfInterestDeleteReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestDeleteResp() *RegionOfInterestDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestDeleteResp); ok {
		return x.RegionOfInterestDeleteResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestDisplaySettingsGetReq() *RegionOfInterestDisplaySettingsGetReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestDisplaySettingsGetReq); ok {
		return x.RegionOfInterestDisplaySettingsGetReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestDisplaySettingsGetResp() *RegionOfInterestDisplaySettingsGetResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestDisplaySettingsGetResp); ok {
		return x.RegionOfInterestDisplaySettingsGetResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestDisplaySettingsWriteReq() *RegionOfInterestDisplaySettingsWriteReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestDisplaySettingsWriteReq); ok {
		return x.RegionOfInterestDisplaySettingsWriteReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestDisplaySettingsWriteResp() *RegionOfInterestDisplaySettingsWriteResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestDisplaySettingsWriteResp); ok {
		return x.RegionOfInterestDisplaySettingsWriteResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestGetReq() *RegionOfInterestGetReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestGetReq); ok {
		return x.RegionOfInterestGetReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestGetResp() *RegionOfInterestGetResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestGetResp); ok {
		return x.RegionOfInterestGetResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestListReq() *RegionOfInterestListReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestListReq); ok {
		return x.RegionOfInterestListReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestListResp() *RegionOfInterestListResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestListResp); ok {
		return x.RegionOfInterestListResp
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestWriteReq() *RegionOfInterestWriteReq {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestWriteReq); ok {
		return x.RegionOfInterestWriteReq
	}
	return nil
}

func (x *WSMessage) GetRegionOfInterestWriteResp() *RegionOfInterestWriteResp {
	if x, ok := x.GetContents().(*WSMessage_RegionOfInterestWriteResp); ok {
		return x.RegionOfInterestWriteResp
	}
	return nil
}

func (x *WSMessage) GetRunTestReq() *RunTestReq {
	if x, ok := x.GetContents().(*WSMessage_RunTestReq); ok {
		return x.RunTestReq
	}
	return nil
}

func (x *WSMessage) GetRunTestResp() *RunTestResp {
	if x, ok := x.GetContents().(*WSMessage_RunTestResp); ok {
		return x.RunTestResp
	}
	return nil
}

func (x *WSMessage) GetScanAutoShareReq() *ScanAutoShareReq {
	if x, ok := x.GetContents().(*WSMessage_ScanAutoShareReq); ok {
		return x.ScanAutoShareReq
	}
	return nil
}

func (x *WSMessage) GetScanAutoShareResp() *ScanAutoShareResp {
	if x, ok := x.GetContents().(*WSMessage_ScanAutoShareResp); ok {
		return x.ScanAutoShareResp
	}
	return nil
}

func (x *WSMessage) GetScanAutoShareWriteReq() *ScanAutoShareWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ScanAutoShareWriteReq); ok {
		return x.ScanAutoShareWriteReq
	}
	return nil
}

func (x *WSMessage) GetScanAutoShareWriteResp() *ScanAutoShareWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ScanAutoShareWriteResp); ok {
		return x.ScanAutoShareWriteResp
	}
	return nil
}

func (x *WSMessage) GetScanBeamLocationsReq() *ScanBeamLocationsReq {
	if x, ok := x.GetContents().(*WSMessage_ScanBeamLocationsReq); ok {
		return x.ScanBeamLocationsReq
	}
	return nil
}

func (x *WSMessage) GetScanBeamLocationsResp() *ScanBeamLocationsResp {
	if x, ok := x.GetContents().(*WSMessage_ScanBeamLocationsResp); ok {
		return x.ScanBeamLocationsResp
	}
	return nil
}

func (x *WSMessage) GetScanDeleteReq() *ScanDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_ScanDeleteReq); ok {
		return x.ScanDeleteReq
	}
	return nil
}

func (x *WSMessage) GetScanDeleteResp() *ScanDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_ScanDeleteResp); ok {
		return x.ScanDeleteResp
	}
	return nil
}

func (x *WSMessage) GetScanEntryMetadataReq() *ScanEntryMetadataReq {
	if x, ok := x.GetContents().(*WSMessage_ScanEntryMetadataReq); ok {
		return x.ScanEntryMetadataReq
	}
	return nil
}

func (x *WSMessage) GetScanEntryMetadataResp() *ScanEntryMetadataResp {
	if x, ok := x.GetContents().(*WSMessage_ScanEntryMetadataResp); ok {
		return x.ScanEntryMetadataResp
	}
	return nil
}

func (x *WSMessage) GetScanEntryReq() *ScanEntryReq {
	if x, ok := x.GetContents().(*WSMessage_ScanEntryReq); ok {
		return x.ScanEntryReq
	}
	return nil
}

func (x *WSMessage) GetScanEntryResp() *ScanEntryResp {
	if x, ok := x.GetContents().(*WSMessage_ScanEntryResp); ok {
		return x.ScanEntryResp
	}
	return nil
}

func (x *WSMessage) GetScanGetReq() *ScanGetReq {
	if x, ok := x.GetContents().(*WSMessage_ScanGetReq); ok {
		return x.ScanGetReq
	}
	return nil
}

func (x *WSMessage) GetScanGetResp() *ScanGetResp {
	if x, ok := x.GetContents().(*WSMessage_ScanGetResp); ok {
		return x.ScanGetResp
	}
	return nil
}

func (x *WSMessage) GetScanListReq() *ScanListReq {
	if x, ok := x.GetContents().(*WSMessage_ScanListReq); ok {
		return x.ScanListReq
	}
	return nil
}

func (x *WSMessage) GetScanListResp() *ScanListResp {
	if x, ok := x.GetContents().(*WSMessage_ScanListResp); ok {
		return x.ScanListResp
	}
	return nil
}

func (x *WSMessage) GetScanListUpd() *ScanListUpd {
	if x, ok := x.GetContents().(*WSMessage_ScanListUpd); ok {
		return x.ScanListUpd
	}
	return nil
}

func (x *WSMessage) GetScanMetaLabelsAndTypesReq() *ScanMetaLabelsAndTypesReq {
	if x, ok := x.GetContents().(*WSMessage_ScanMetaLabelsAndTypesReq); ok {
		return x.ScanMetaLabelsAndTypesReq
	}
	return nil
}

func (x *WSMessage) GetScanMetaLabelsAndTypesResp() *ScanMetaLabelsAndTypesResp {
	if x, ok := x.GetContents().(*WSMessage_ScanMetaLabelsAndTypesResp); ok {
		return x.ScanMetaLabelsAndTypesResp
	}
	return nil
}

func (x *WSMessage) GetScanMetaWriteReq() *ScanMetaWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ScanMetaWriteReq); ok {
		return x.ScanMetaWriteReq
	}
	return nil
}

func (x *WSMessage) GetScanMetaWriteResp() *ScanMetaWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ScanMetaWriteResp); ok {
		return x.ScanMetaWriteResp
	}
	return nil
}

func (x *WSMessage) GetScanTriggerAutoQuantReq() *ScanTriggerAutoQuantReq {
	if x, ok := x.GetContents().(*WSMessage_ScanTriggerAutoQuantReq); ok {
		return x.ScanTriggerAutoQuantReq
	}
	return nil
}

func (x *WSMessage) GetScanTriggerAutoQuantResp() *ScanTriggerAutoQuantResp {
	if x, ok := x.GetContents().(*WSMessage_ScanTriggerAutoQuantResp); ok {
		return x.ScanTriggerAutoQuantResp
	}
	return nil
}

func (x *WSMessage) GetScanTriggerReImportReq() *ScanTriggerReImportReq {
	if x, ok := x.GetContents().(*WSMessage_ScanTriggerReImportReq); ok {
		return x.ScanTriggerReImportReq
	}
	return nil
}

func (x *WSMessage) GetScanTriggerReImportResp() *ScanTriggerReImportResp {
	if x, ok := x.GetContents().(*WSMessage_ScanTriggerReImportResp); ok {
		return x.ScanTriggerReImportResp
	}
	return nil
}

func (x *WSMessage) GetScanTriggerReImportUpd() *ScanTriggerReImportUpd {
	if x, ok := x.GetContents().(*WSMessage_ScanTriggerReImportUpd); ok {
		return x.ScanTriggerReImportUpd
	}
	return nil
}

func (x *WSMessage) GetScanUploadReq() *ScanUploadReq {
	if x, ok := x.GetContents().(*WSMessage_ScanUploadReq); ok {
		return x.ScanUploadReq
	}
	return nil
}

func (x *WSMessage) GetScanUploadResp() *ScanUploadResp {
	if x, ok := x.GetContents().(*WSMessage_ScanUploadResp); ok {
		return x.ScanUploadResp
	}
	return nil
}

func (x *WSMessage) GetScanUploadUpd() *ScanUploadUpd {
	if x, ok := x.GetContents().(*WSMessage_ScanUploadUpd); ok {
		return x.ScanUploadUpd
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationDeleteReq() *ScreenConfigurationDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationDeleteReq); ok {
		return x.ScreenConfigurationDeleteReq
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationDeleteResp() *ScreenConfigurationDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationDeleteResp); ok {
		return x.ScreenConfigurationDeleteResp
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationGetReq() *ScreenConfigurationGetReq {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationGetReq); ok {
		return x.ScreenConfigurationGetReq
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationGetResp() *ScreenConfigurationGetResp {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationGetResp); ok {
		return x.ScreenConfigurationGetResp
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationListReq() *ScreenConfigurationListReq {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationListReq); ok {
		return x.ScreenConfigurationListReq
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationListResp() *ScreenConfigurationListResp {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationListResp); ok {
		return x.ScreenConfigurationListResp
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationWriteReq() *ScreenConfigurationWriteReq {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationWriteReq); ok {
		return x.ScreenConfigurationWriteReq
	}
	return nil
}

func (x *WSMessage) GetScreenConfigurationWriteResp() *ScreenConfigurationWriteResp {
	if x, ok := x.GetContents().(*WSMessage_ScreenConfigurationWriteResp); ok {
		return x.ScreenConfigurationWriteResp
	}
	return nil
}

func (x *WSMessage) GetSelectedImagePixelsReq() *SelectedImagePixelsReq {
	if x, ok := x.GetContents().(*WSMessage_SelectedImagePixelsReq); ok {
		return x.SelectedImagePixelsReq
	}
	return nil
}

func (x *WSMessage) GetSelectedImagePixelsResp() *SelectedImagePixelsResp {
	if x, ok := x.GetContents().(*WSMessage_SelectedImagePixelsResp); ok {
		return x.SelectedImagePixelsResp
	}
	return nil
}

func (x *WSMessage) GetSelectedImagePixelsWriteReq() *SelectedImagePixelsWriteReq {
	if x, ok := x.GetContents().(*WSMessage_SelectedImagePixelsWriteReq); ok {
		return x.SelectedImagePixelsWriteReq
	}
	return nil
}

func (x *WSMessage) GetSelectedImagePixelsWriteResp() *SelectedImagePixelsWriteResp {
	if x, ok := x.GetContents().(*WSMessage_SelectedImagePixelsWriteResp); ok {
		return x.SelectedImagePixelsWriteResp
	}
	return nil
}

func (x *WSMessage) GetSelectedScanEntriesReq() *SelectedScanEntriesReq {
	if x, ok := x.GetContents().(*WSMessage_SelectedScanEntriesReq); ok {
		return x.SelectedScanEntriesReq
	}
	return nil
}

func (x *WSMessage) GetSelectedScanEntriesResp() *SelectedScanEntriesResp {
	if x, ok := x.GetContents().(*WSMessage_SelectedScanEntriesResp); ok {
		return x.SelectedScanEntriesResp
	}
	return nil
}

func (x *WSMessage) GetSelectedScanEntriesWriteReq() *SelectedScanEntriesWriteReq {
	if x, ok := x.GetContents().(*WSMessage_SelectedScanEntriesWriteReq); ok {
		return x.SelectedScanEntriesWriteReq
	}
	return nil
}

func (x *WSMessage) GetSelectedScanEntriesWriteResp() *SelectedScanEntriesWriteResp {
	if x, ok := x.GetContents().(*WSMessage_SelectedScanEntriesWriteResp); ok {
		return x.SelectedScanEntriesWriteResp
	}
	return nil
}

func (x *WSMessage) GetSendUserNotificationReq() *SendUserNotificationReq {
	if x, ok := x.GetContents().(*WSMessage_SendUserNotificationReq); ok {
		return x.SendUserNotificationReq
	}
	return nil
}

func (x *WSMessage) GetSendUserNotificationResp() *SendUserNotificationResp {
	if x, ok := x.GetContents().(*WSMessage_SendUserNotificationResp); ok {
		return x.SendUserNotificationResp
	}
	return nil
}

func (x *WSMessage) GetSpectrumReq() *SpectrumReq {
	if x, ok := x.GetContents().(*WSMessage_SpectrumReq); ok {
		return x.SpectrumReq
	}
	return nil
}

func (x *WSMessage) GetSpectrumResp() *SpectrumResp {
	if x, ok := x.GetContents().(*WSMessage_SpectrumResp); ok {
		return x.SpectrumResp
	}
	return nil
}

func (x *WSMessage) GetTagCreateReq() *TagCreateReq {
	if x, ok := x.GetContents().(*WSMessage_TagCreateReq); ok {
		return x.TagCreateReq
	}
	return nil
}

func (x *WSMessage) GetTagCreateResp() *TagCreateResp {
	if x, ok := x.GetContents().(*WSMessage_TagCreateResp); ok {
		return x.TagCreateResp
	}
	return nil
}

func (x *WSMessage) GetTagDeleteReq() *TagDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_TagDeleteReq); ok {
		return x.TagDeleteReq
	}
	return nil
}

func (x *WSMessage) GetTagDeleteResp() *TagDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_TagDeleteResp); ok {
		return x.TagDeleteResp
	}
	return nil
}

func (x *WSMessage) GetTagListReq() *TagListReq {
	if x, ok := x.GetContents().(*WSMessage_TagListReq); ok {
		return x.TagListReq
	}
	return nil
}

func (x *WSMessage) GetTagListResp() *TagListResp {
	if x, ok := x.GetContents().(*WSMessage_TagListResp); ok {
		return x.TagListResp
	}
	return nil
}

func (x *WSMessage) GetUserAddRoleReq() *UserAddRoleReq {
	if x, ok := x.GetContents().(*WSMessage_UserAddRoleReq); ok {
		return x.UserAddRoleReq
	}
	return nil
}

func (x *WSMessage) GetUserAddRoleResp() *UserAddRoleResp {
	if x, ok := x.GetContents().(*WSMessage_UserAddRoleResp); ok {
		return x.UserAddRoleResp
	}
	return nil
}

func (x *WSMessage) GetUserDeleteRoleReq() *UserDeleteRoleReq {
	if x, ok := x.GetContents().(*WSMessage_UserDeleteRoleReq); ok {
		return x.UserDeleteRoleReq
	}
	return nil
}

func (x *WSMessage) GetUserDeleteRoleResp() *UserDeleteRoleResp {
	if x, ok := x.GetContents().(*WSMessage_UserDeleteRoleResp); ok {
		return x.UserDeleteRoleResp
	}
	return nil
}

func (x *WSMessage) GetUserDetailsReq() *UserDetailsReq {
	if x, ok := x.GetContents().(*WSMessage_UserDetailsReq); ok {
		return x.UserDetailsReq
	}
	return nil
}

func (x *WSMessage) GetUserDetailsResp() *UserDetailsResp {
	if x, ok := x.GetContents().(*WSMessage_UserDetailsResp); ok {
		return x.UserDetailsResp
	}
	return nil
}

func (x *WSMessage) GetUserDetailsWriteReq() *UserDetailsWriteReq {
	if x, ok := x.GetContents().(*WSMessage_UserDetailsWriteReq); ok {
		return x.UserDetailsWriteReq
	}
	return nil
}

func (x *WSMessage) GetUserDetailsWriteResp() *UserDetailsWriteResp {
	if x, ok := x.GetContents().(*WSMessage_UserDetailsWriteResp); ok {
		return x.UserDetailsWriteResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupAddAdminReq() *UserGroupAddAdminReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupAddAdminReq); ok {
		return x.UserGroupAddAdminReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupAddAdminResp() *UserGroupAddAdminResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupAddAdminResp); ok {
		return x.UserGroupAddAdminResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupAddMemberReq() *UserGroupAddMemberReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupAddMemberReq); ok {
		return x.UserGroupAddMemberReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupAddMemberResp() *UserGroupAddMemberResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupAddMemberResp); ok {
		return x.UserGroupAddMemberResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupAddViewerReq() *UserGroupAddViewerReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupAddViewerReq); ok {
		return x.UserGroupAddViewerReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupAddViewerResp() *UserGroupAddViewerResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupAddViewerResp); ok {
		return x.UserGroupAddViewerResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupCreateReq() *UserGroupCreateReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupCreateReq); ok {
		return x.UserGroupCreateReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupCreateResp() *UserGroupCreateResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupCreateResp); ok {
		return x.UserGroupCreateResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteAdminReq() *UserGroupDeleteAdminReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteAdminReq); ok {
		return x.UserGroupDeleteAdminReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteAdminResp() *UserGroupDeleteAdminResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteAdminResp); ok {
		return x.UserGroupDeleteAdminResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteMemberReq() *UserGroupDeleteMemberReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteMemberReq); ok {
		return x.UserGroupDeleteMemberReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteMemberResp() *UserGroupDeleteMemberResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteMemberResp); ok {
		return x.UserGroupDeleteMemberResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteReq() *UserGroupDeleteReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteReq); ok {
		return x.UserGroupDeleteReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteResp() *UserGroupDeleteResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteResp); ok {
		return x.UserGroupDeleteResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteViewerReq() *UserGroupDeleteViewerReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteViewerReq); ok {
		return x.UserGroupDeleteViewerReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupDeleteViewerResp() *UserGroupDeleteViewerResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupDeleteViewerResp); ok {
		return x.UserGroupDeleteViewerResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupEditDetailsReq() *UserGroupEditDetailsReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupEditDetailsReq); ok {
		return x.UserGroupEditDetailsReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupEditDetailsResp() *UserGroupEditDetailsResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupEditDetailsResp); ok {
		return x.UserGroupEditDetailsResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupIgnoreJoinReq() *UserGroupIgnoreJoinReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupIgnoreJoinReq); ok {
		return x.UserGroupIgnoreJoinReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupIgnoreJoinResp() *UserGroupIgnoreJoinResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupIgnoreJoinResp); ok {
		return x.UserGroupIgnoreJoinResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupJoinListReq() *UserGroupJoinListReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupJoinListReq); ok {
		return x.UserGroupJoinListReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupJoinListResp() *UserGroupJoinListResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupJoinListResp); ok {
		return x.UserGroupJoinListResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupJoinReq() *UserGroupJoinReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupJoinReq); ok {
		return x.UserGroupJoinReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupJoinResp() *UserGroupJoinResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupJoinResp); ok {
		return x.UserGroupJoinResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupListJoinableReq() *UserGroupListJoinableReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupListJoinableReq); ok {
		return x.UserGroupListJoinableReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupListJoinableResp() *UserGroupListJoinableResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupListJoinableResp); ok {
		return x.UserGroupListJoinableResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupListReq() *UserGroupListReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupListReq); ok {
		return x.UserGroupListReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupListResp() *UserGroupListResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupListResp); ok {
		return x.UserGroupListResp
	}
	return nil
}

func (x *WSMessage) GetUserGroupReq() *UserGroupReq {
	if x, ok := x.GetContents().(*WSMessage_UserGroupReq); ok {
		return x.UserGroupReq
	}
	return nil
}

func (x *WSMessage) GetUserGroupResp() *UserGroupResp {
	if x, ok := x.GetContents().(*WSMessage_UserGroupResp); ok {
		return x.UserGroupResp
	}
	return nil
}

func (x *WSMessage) GetUserListReq() *UserListReq {
	if x, ok := x.GetContents().(*WSMessage_UserListReq); ok {
		return x.UserListReq
	}
	return nil
}

func (x *WSMessage) GetUserListResp() *UserListResp {
	if x, ok := x.GetContents().(*WSMessage_UserListResp); ok {
		return x.UserListResp
	}
	return nil
}

func (x *WSMessage) GetUserNotificationSettingsReq() *UserNotificationSettingsReq {
	if x, ok := x.GetContents().(*WSMessage_UserNotificationSettingsReq); ok {
		return x.UserNotificationSettingsReq
	}
	return nil
}

func (x *WSMessage) GetUserNotificationSettingsResp() *UserNotificationSettingsResp {
	if x, ok := x.GetContents().(*WSMessage_UserNotificationSettingsResp); ok {
		return x.UserNotificationSettingsResp
	}
	return nil
}

func (x *WSMessage) GetUserNotificationSettingsUpd() *UserNotificationSettingsUpd {
	if x, ok := x.GetContents().(*WSMessage_UserNotificationSettingsUpd); ok {
		return x.UserNotificationSettingsUpd
	}
	return nil
}

func (x *WSMessage) GetUserNotificationSettingsWriteReq() *UserNotificationSettingsWriteReq {
	if x, ok := x.GetContents().(*WSMessage_UserNotificationSettingsWriteReq); ok {
		return x.UserNotificationSettingsWriteReq
	}
	return nil
}

func (x *WSMessage) GetUserNotificationSettingsWriteResp() *UserNotificationSettingsWriteResp {
	if x, ok := x.GetContents().(*WSMessage_UserNotificationSettingsWriteResp); ok {
		return x.UserNotificationSettingsWriteResp
	}
	return nil
}

func (x *WSMessage) GetUserRoleListReq() *UserRoleListReq {
	if x, ok := x.GetContents().(*WSMessage_UserRoleListReq); ok {
		return x.UserRoleListReq
	}
	return nil
}

func (x *WSMessage) GetUserRoleListResp() *UserRoleListResp {
	if x, ok := x.GetContents().(*WSMessage_UserRoleListResp); ok {
		return x.UserRoleListResp
	}
	return nil
}

func (x *WSMessage) GetUserRolesListReq() *UserRolesListReq {
	if x, ok := x.GetContents().(*WSMessage_UserRolesListReq); ok {
		return x.UserRolesListReq
	}
	return nil
}

func (x *WSMessage) GetUserRolesListResp() *UserRolesListResp {
	if x, ok := x.GetContents().(*WSMessage_UserRolesListResp); ok {
		return x.UserRolesListResp
	}
	return nil
}

func (x *WSMessage) GetUserSearchReq() *UserSearchReq {
	if x, ok := x.GetContents().(*WSMessage_UserSearchReq); ok {
		return x.UserSearchReq
	}
	return nil
}

func (x *WSMessage) GetUserSearchResp() *UserSearchResp {
	if x, ok := x.GetContents().(*WSMessage_UserSearchResp); ok {
		return x.UserSearchResp
	}
	return nil
}

func (x *WSMessage) GetWidgetDataGetReq() *WidgetDataGetReq {
	if x, ok := x.GetContents().(*WSMessage_WidgetDataGetReq); ok {
		return x.WidgetDataGetReq
	}
	return nil
}

func (x *WSMessage) GetWidgetDataGetResp() *WidgetDataGetResp {
	if x, ok := x.GetContents().(*WSMessage_WidgetDataGetResp); ok {
		return x.WidgetDataGetResp
	}
	return nil
}

func (x *WSMessage) GetWidgetDataWriteReq() *WidgetDataWriteReq {
	if x, ok := x.GetContents().(*WSMessage_WidgetDataWriteReq); ok {
		return x.WidgetDataWriteReq
	}
	return nil
}

func (x *WSMessage) GetWidgetDataWriteResp() *WidgetDataWriteResp {
	if x, ok := x.GetContents().(*WSMessage_WidgetDataWriteResp); ok {
		return x.WidgetDataWriteResp
	}
	return nil
}

func (x *WSMessage) GetZenodoDOIGetReq() *ZenodoDOIGetReq {
	if x, ok := x.GetContents().(*WSMessage_ZenodoDOIGetReq); ok {
		return x.ZenodoDOIGetReq
	}
	return nil
}

func (x *WSMessage) GetZenodoDOIGetResp() *ZenodoDOIGetResp {
	if x, ok := x.GetContents().(*WSMessage_ZenodoDOIGetResp); ok {
		return x.ZenodoDOIGetResp
	}
	return nil
}

type isWSMessage_Contents interface {
	isWSMessage_Contents()
}

type WSMessage_DataModuleAddVersionReq struct {
	DataModuleAddVersionReq *DataModuleAddVersionReq `protobuf:"bytes,198,opt,name=dataModuleAddVersionReq,proto3,oneof"`
}

type WSMessage_DataModuleAddVersionResp struct {
	DataModuleAddVersionResp *DataModuleAddVersionResp `protobuf:"bytes,199,opt,name=dataModuleAddVersionResp,proto3,oneof"`
}

type WSMessage_DataModuleGetReq struct {
	DataModuleGetReq *DataModuleGetReq `protobuf:"bytes,12,opt,name=dataModuleGetReq,proto3,oneof"`
}

type WSMessage_DataModuleGetResp struct {
	DataModuleGetResp *DataModuleGetResp `protobuf:"bytes,13,opt,name=dataModuleGetResp,proto3,oneof"`
}

type WSMessage_DataModuleListReq struct {
	DataModuleListReq *DataModuleListReq `protobuf:"bytes,10,opt,name=dataModuleListReq,proto3,oneof"`
}

type WSMessage_DataModuleListResp struct {
	DataModuleListResp *DataModuleListResp `protobuf:"bytes,11,opt,name=dataModuleListResp,proto3,oneof"`
}

type WSMessage_DataModuleWriteReq struct {
	DataModuleWriteReq *DataModuleWriteReq `protobuf:"bytes,14,opt,name=dataModuleWriteReq,proto3,oneof"`
}

type WSMessage_DataModuleWriteResp struct {
	DataModuleWriteResp *DataModuleWriteResp `protobuf:"bytes,15,opt,name=dataModuleWriteResp,proto3,oneof"`
}

type WSMessage_DetectedDiffractionPeaksReq struct {
	DetectedDiffractionPeaksReq *DetectedDiffractionPeaksReq `protobuf:"bytes,224,opt,name=detectedDiffractionPeaksReq,proto3,oneof"`
}

type WSMessage_DetectedDiffractionPeaksResp struct {
	DetectedDiffractionPeaksResp *DetectedDiffractionPeaksResp `protobuf:"bytes,225,opt,name=detectedDiffractionPeaksResp,proto3,oneof"`
}

type WSMessage_DetectorConfigListReq struct {
	DetectorConfigListReq *DetectorConfigListReq `protobuf:"bytes,258,opt,name=detectorConfigListReq,proto3,oneof"`
}

type WSMessage_DetectorConfigListResp struct {
	DetectorConfigListResp *DetectorConfigListResp `protobuf:"bytes,259,opt,name=detectorConfigListResp,proto3,oneof"`
}

type WSMessage_DetectorConfigReq struct {
	DetectorConfigReq *DetectorConfigReq `protobuf:"bytes,16,opt,name=detectorConfigReq,proto3,oneof"`
}

type WSMessage_DetectorConfigResp struct {
	DetectorConfigResp *DetectorConfigResp `protobuf:"bytes,17,opt,name=detectorConfigResp,proto3,oneof"`
}

type WSMessage_DiffractionPeakManualDeleteReq struct {
	DiffractionPeakManualDeleteReq *DiffractionPeakManualDeleteReq `protobuf:"bytes,18,opt,name=diffractionPeakManualDeleteReq,proto3,oneof"`
}

type WSMessage_DiffractionPeakManualDeleteResp struct {
	DiffractionPeakManualDeleteResp *DiffractionPeakManualDeleteResp `protobuf:"bytes,19,opt,name=diffractionPeakManualDeleteResp,proto3,oneof"`
}

type WSMessage_DiffractionPeakManualInsertReq struct {
	DiffractionPeakManualInsertReq *DiffractionPeakManualInsertReq `protobuf:"bytes,22,opt,name=diffractionPeakManualInsertReq,proto3,oneof"`
}

type WSMessage_DiffractionPeakManualInsertResp struct {
	DiffractionPeakManualInsertResp *DiffractionPeakManualInsertResp `protobuf:"bytes,23,opt,name=diffractionPeakManualInsertResp,proto3,oneof"`
}

type WSMessage_DiffractionPeakManualListReq struct {
	DiffractionPeakManualListReq *DiffractionPeakManualListReq `protobuf:"bytes,20,opt,name=diffractionPeakManualListReq,proto3,oneof"`
}

type WSMessage_DiffractionPeakManualListResp struct {
	DiffractionPeakManualListResp *DiffractionPeakManualListResp `protobuf:"bytes,21,opt,name=diffractionPeakManualListResp,proto3,oneof"`
}

type WSMessage_DiffractionPeakStatusDeleteReq struct {
	DiffractionPeakStatusDeleteReq *DiffractionPeakStatusDeleteReq `protobuf:"bytes,24,opt,name=diffractionPeakStatusDeleteReq,proto3,oneof"`
}

type WSMessage_DiffractionPeakStatusDeleteResp struct {
	DiffractionPeakStatusDeleteResp *DiffractionPeakStatusDeleteResp `protobuf:"bytes,25,opt,name=diffractionPeakStatusDeleteResp,proto3,oneof"`
}

type WSMessage_DiffractionPeakStatusListReq struct {
	DiffractionPeakStatusListReq *DiffractionPeakStatusListReq `protobuf:"bytes,26,opt,name=diffractionPeakStatusListReq,proto3,oneof"`
}

type WSMessage_DiffractionPeakStatusListResp struct {
	DiffractionPeakStatusListResp *DiffractionPeakStatusListResp `protobuf:"bytes,27,opt,name=diffractionPeakStatusListResp,proto3,oneof"`
}

type WSMessage_DiffractionPeakStatusWriteReq struct {
	DiffractionPeakStatusWriteReq *DiffractionPeakStatusWriteReq `protobuf:"bytes,28,opt,name=diffractionPeakStatusWriteReq,proto3,oneof"`
}

type WSMessage_DiffractionPeakStatusWriteResp struct {
	DiffractionPeakStatusWriteResp *DiffractionPeakStatusWriteResp `protobuf:"bytes,29,opt,name=diffractionPeakStatusWriteResp,proto3,oneof"`
}

type WSMessage_ElementSetDeleteReq struct {
	ElementSetDeleteReq *ElementSetDeleteReq `protobuf:"bytes,30,opt,name=elementSetDeleteReq,proto3,oneof"`
}

type WSMessage_ElementSetDeleteResp struct {
	ElementSetDeleteResp *ElementSetDeleteResp `protobuf:"bytes,31,opt,name=elementSetDeleteResp,proto3,oneof"`
}

type WSMessage_ElementSetGetReq struct {
	ElementSetGetReq *ElementSetGetReq `protobuf:"bytes,32,opt,name=elementSetGetReq,proto3,oneof"`
}

type WSMessage_ElementSetGetResp struct {
	ElementSetGetResp *ElementSetGetResp `protobuf:"bytes,33,opt,name=elementSetGetResp,proto3,oneof"`
}

type WSMessage_ElementSetListReq struct {
	ElementSetListReq *ElementSetListReq `protobuf:"bytes,34,opt,name=elementSetListReq,proto3,oneof"`
}

type WSMessage_ElementSetListResp struct {
	ElementSetListResp *ElementSetListResp `protobuf:"bytes,35,opt,name=elementSetListResp,proto3,oneof"`
}

type WSMessage_ElementSetWriteReq struct {
	ElementSetWriteReq *ElementSetWriteReq `protobuf:"bytes,36,opt,name=elementSetWriteReq,proto3,oneof"`
}

type WSMessage_ElementSetWriteResp struct {
	ElementSetWriteResp *ElementSetWriteResp `protobuf:"bytes,37,opt,name=elementSetWriteResp,proto3,oneof"`
}

type WSMessage_ExportFilesReq struct {
	ExportFilesReq *ExportFilesReq `protobuf:"bytes,38,opt,name=exportFilesReq,proto3,oneof"`
}

type WSMessage_ExportFilesResp struct {
	ExportFilesResp *ExportFilesResp `protobuf:"bytes,39,opt,name=exportFilesResp,proto3,oneof"`
}

type WSMessage_ExpressionDeleteReq struct {
	ExpressionDeleteReq *ExpressionDeleteReq `protobuf:"bytes,40,opt,name=expressionDeleteReq,proto3,oneof"`
}

type WSMessage_ExpressionDeleteResp struct {
	ExpressionDeleteResp *ExpressionDeleteResp `protobuf:"bytes,41,opt,name=expressionDeleteResp,proto3,oneof"`
}

type WSMessage_ExpressionDisplaySettingsGetReq struct {
	ExpressionDisplaySettingsGetReq *ExpressionDisplaySettingsGetReq `protobuf:"bytes,288,opt,name=expressionDisplaySettingsGetReq,proto3,oneof"`
}

type WSMessage_ExpressionDisplaySettingsGetResp struct {
	ExpressionDisplaySettingsGetResp *ExpressionDisplaySettingsGetResp `protobuf:"bytes,289,opt,name=expressionDisplaySettingsGetResp,proto3,oneof"`
}

type WSMessage_ExpressionDisplaySettingsWriteReq struct {
	ExpressionDisplaySettingsWriteReq *ExpressionDisplaySettingsWriteReq `protobuf:"bytes,290,opt,name=expressionDisplaySettingsWriteReq,proto3,oneof"`
}

type WSMessage_ExpressionDisplaySettingsWriteResp struct {
	ExpressionDisplaySettingsWriteResp *ExpressionDisplaySettingsWriteResp `protobuf:"bytes,291,opt,name=expressionDisplaySettingsWriteResp,proto3,oneof"`
}

type WSMessage_ExpressionGetReq struct {
	ExpressionGetReq *ExpressionGetReq `protobuf:"bytes,50,opt,name=expressionGetReq,proto3,oneof"`
}

type WSMessage_ExpressionGetResp struct {
	ExpressionGetResp *ExpressionGetResp `protobuf:"bytes,51,opt,name=expressionGetResp,proto3,oneof"`
}

type WSMessage_ExpressionGroupDeleteReq struct {
	ExpressionGroupDeleteReq *ExpressionGroupDeleteReq `protobuf:"bytes,42,opt,name=expressionGroupDeleteReq,proto3,oneof"`
}

type WSMessage_ExpressionGroupDeleteResp struct {
	ExpressionGroupDeleteResp *ExpressionGroupDeleteResp `protobuf:"bytes,43,opt,name=expressionGroupDeleteResp,proto3,oneof"`
}

type WSMessage_ExpressionGroupGetReq struct {
	ExpressionGroupGetReq *ExpressionGroupGetReq `protobuf:"bytes,176,opt,name=expressionGroupGetReq,proto3,oneof"`
}

type WSMessage_ExpressionGroupGetResp struct {
	ExpressionGroupGetResp *ExpressionGroupGetResp `protobuf:"bytes,177,opt,name=expressionGroupGetResp,proto3,oneof"`
}

type WSMessage_ExpressionGroupListReq struct {
	ExpressionGroupListReq *ExpressionGroupListReq `protobuf:"bytes,44,opt,name=expressionGroupListReq,proto3,oneof"`
}

type WSMessage_ExpressionGroupListResp struct {
	ExpressionGroupListResp *ExpressionGroupListResp `protobuf:"bytes,45,opt,name=expressionGroupListResp,proto3,oneof"`
}

type WSMessage_ExpressionGroupWriteReq struct {
	ExpressionGroupWriteReq *ExpressionGroupWriteReq `protobuf:"bytes,46,opt,name=expressionGroupWriteReq,proto3,oneof"`
}

type WSMessage_ExpressionGroupWriteResp struct {
	ExpressionGroupWriteResp *ExpressionGroupWriteResp `protobuf:"bytes,47,opt,name=expressionGroupWriteResp,proto3,oneof"`
}

type WSMessage_ExpressionListReq struct {
	ExpressionListReq *ExpressionListReq `protobuf:"bytes,48,opt,name=expressionListReq,proto3,oneof"`
}

type WSMessage_ExpressionListResp struct {
	ExpressionListResp *ExpressionListResp `protobuf:"bytes,49,opt,name=expressionListResp,proto3,oneof"`
}

type WSMessage_ExpressionWriteExecStatReq struct {
	ExpressionWriteExecStatReq *ExpressionWriteExecStatReq `protobuf:"bytes,52,opt,name=expressionWriteExecStatReq,proto3,oneof"`
}

type WSMessage_ExpressionWriteExecStatResp struct {
	ExpressionWriteExecStatResp *ExpressionWriteExecStatResp `protobuf:"bytes,53,opt,name=expressionWriteExecStatResp,proto3,oneof"`
}

type WSMessage_ExpressionWriteReq struct {
	ExpressionWriteReq *ExpressionWriteReq `protobuf:"bytes,54,opt,name=expressionWriteReq,proto3,oneof"`
}

type WSMessage_ExpressionWriteResp struct {
	ExpressionWriteResp *ExpressionWriteResp `protobuf:"bytes,55,opt,name=expressionWriteResp,proto3,oneof"`
}

type WSMessage_GetOwnershipReq struct {
	GetOwnershipReq *GetOwnershipReq `protobuf:"bytes,172,opt,name=getOwnershipReq,proto3,oneof"`
}

type WSMessage_GetOwnershipResp struct {
	GetOwnershipResp *GetOwnershipResp `protobuf:"bytes,173,opt,name=getOwnershipResp,proto3,oneof"`
}

type WSMessage_ImageBeamLocationVersionsReq struct {
	ImageBeamLocationVersionsReq *ImageBeamLocationVersionsReq `protobuf:"bytes,299,opt,name=imageBeamLocationVersionsReq,proto3,oneof"`
}

type WSMessage_ImageBeamLocationVersionsResp struct {
	ImageBeamLocationVersionsResp *ImageBeamLocationVersionsResp `protobuf:"bytes,300,opt,name=imageBeamLocationVersionsResp,proto3,oneof"`
}

type WSMessage_ImageBeamLocationsReq struct {
	ImageBeamLocationsReq *ImageBeamLocationsReq `protobuf:"bytes,190,opt,name=imageBeamLocationsReq,proto3,oneof"`
}

type WSMessage_ImageBeamLocationsResp struct {
	ImageBeamLocationsResp *ImageBeamLocationsResp `protobuf:"bytes,191,opt,name=imageBeamLocationsResp,proto3,oneof"`
}

type WSMessage_ImageDeleteReq struct {
	ImageDeleteReq *ImageDeleteReq `protobuf:"bytes,58,opt,name=imageDeleteReq,proto3,oneof"`
}

type WSMessage_ImageDeleteResp struct {
	ImageDeleteResp *ImageDeleteResp `protobuf:"bytes,59,opt,name=imageDeleteResp,proto3,oneof"`
}

type WSMessage_ImageGetDefaultReq struct {
	ImageGetDefaultReq *ImageGetDefaultReq `protobuf:"bytes,262,opt,name=imageGetDefaultReq,proto3,oneof"`
}

type WSMessage_ImageGetDefaultResp struct {
	ImageGetDefaultResp *ImageGetDefaultResp `protobuf:"bytes,263,opt,name=imageGetDefaultResp,proto3,oneof"`
}

type WSMessage_ImageGetReq struct {
	ImageGetReq *ImageGetReq `protobuf:"bytes,264,opt,name=imageGetReq,proto3,oneof"`
}

type WSMessage_ImageGetResp struct {
	ImageGetResp *ImageGetResp `protobuf:"bytes,265,opt,name=imageGetResp,proto3,oneof"`
}

type WSMessage_ImageListReq struct {
	ImageListReq *ImageListReq `protobuf:"bytes,60,opt,name=imageListReq,proto3,oneof"`
}

type WSMessage_ImageListResp struct {
	ImageListResp *ImageListResp `protobuf:"bytes,61,opt,name=imageListResp,proto3,oneof"`
}

type WSMessage_ImageListUpd struct {
	ImageListUpd *ImageListUpd `protobuf:"bytes,278,opt,name=imageListUpd,proto3,oneof"`
}

type WSMessage_ImageSetDefaultReq struct {
	ImageSetDefaultReq *ImageSetDefaultReq `protobuf:"bytes,63,opt,name=imageSetDefaultReq,proto3,oneof"`
}

type WSMessage_ImageSetDefaultResp struct {
	ImageSetDefaultResp *ImageSetDefaultResp `protobuf:"bytes,64,opt,name=imageSetDefaultResp,proto3,oneof"`
}

type WSMessage_ImageSetMatchTransformReq struct {
	ImageSetMatchTransformReq *ImageSetMatchTransformReq `protobuf:"bytes,266,opt,name=imageSetMatchTransformReq,proto3,oneof"`
}

type WSMessage_ImageSetMatchTransformResp struct {
	ImageSetMatchTransformResp *ImageSetMatchTransformResp `protobuf:"bytes,267,opt,name=imageSetMatchTransformResp,proto3,oneof"`
}

type WSMessage_ImportMarsViewerImageReq struct {
	ImportMarsViewerImageReq *ImportMarsViewerImageReq `protobuf:"bytes,273,opt,name=importMarsViewerImageReq,proto3,oneof"`
}

type WSMessage_ImportMarsViewerImageResp struct {
	ImportMarsViewerImageResp *ImportMarsViewerImageResp `protobuf:"bytes,274,opt,name=importMarsViewerImageResp,proto3,oneof"`
}

type WSMessage_ImportMarsViewerImageUpd struct {
	ImportMarsViewerImageUpd *ImportMarsViewerImageUpd `protobuf:"bytes,275,opt,name=importMarsViewerImageUpd,proto3,oneof"`
}

type WSMessage_JobListReq struct {
	JobListReq *JobListReq `protobuf:"bytes,296,opt,name=jobListReq,proto3,oneof"`
}

type WSMessage_JobListResp struct {
	JobListResp *JobListResp `protobuf:"bytes,297,opt,name=jobListResp,proto3,oneof"`
}

type WSMessage_JobListUpd struct {
	JobListUpd *JobListUpd `protobuf:"bytes,298,opt,name=jobListUpd,proto3,oneof"`
}

type WSMessage_LogGetLevelReq struct {
	LogGetLevelReq *LogGetLevelReq `protobuf:"bytes,67,opt,name=logGetLevelReq,proto3,oneof"`
}

type WSMessage_LogGetLevelResp struct {
	LogGetLevelResp *LogGetLevelResp `protobuf:"bytes,68,opt,name=logGetLevelResp,proto3,oneof"`
}

type WSMessage_LogReadReq struct {
	LogReadReq *LogReadReq `protobuf:"bytes,69,opt,name=logReadReq,proto3,oneof"`
}

type WSMessage_LogReadResp struct {
	LogReadResp *LogReadResp `protobuf:"bytes,70,opt,name=logReadResp,proto3,oneof"`
}

type WSMessage_LogSetLevelReq struct {
	LogSetLevelReq *LogSetLevelReq `protobuf:"bytes,71,opt,name=logSetLevelReq,proto3,oneof"`
}

type WSMessage_LogSetLevelResp struct {
	LogSetLevelResp *LogSetLevelResp `protobuf:"bytes,72,opt,name=logSetLevelResp,proto3,oneof"`
}

type WSMessage_MemoiseGetReq struct {
	MemoiseGetReq *MemoiseGetReq `protobuf:"bytes,283,opt,name=memoiseGetReq,proto3,oneof"`
}

type WSMessage_MemoiseGetResp struct {
	MemoiseGetResp *MemoiseGetResp `protobuf:"bytes,284,opt,name=memoiseGetResp,proto3,oneof"`
}

type WSMessage_MemoiseWriteReq struct {
	MemoiseWriteReq *MemoiseWriteReq `protobuf:"bytes,56,opt,name=memoiseWriteReq,proto3,oneof"`
}

type WSMessage_MemoiseWriteResp struct {
	MemoiseWriteResp *MemoiseWriteResp `protobuf:"bytes,57,opt,name=memoiseWriteResp,proto3,oneof"`
}

type WSMessage_MultiQuantCompareReq struct {
	MultiQuantCompareReq *MultiQuantCompareReq `protobuf:"bytes,200,opt,name=multiQuantCompareReq,proto3,oneof"`
}

type WSMessage_MultiQuantCompareResp struct {
	MultiQuantCompareResp *MultiQuantCompareResp `protobuf:"bytes,201,opt,name=multiQuantCompareResp,proto3,oneof"`
}

type WSMessage_NotificationDismissReq struct {
	NotificationDismissReq *NotificationDismissReq `protobuf:"bytes,286,opt,name=notificationDismissReq,proto3,oneof"`
}

type WSMessage_NotificationDismissResp struct {
	NotificationDismissResp *NotificationDismissResp `protobuf:"bytes,287,opt,name=notificationDismissResp,proto3,oneof"`
}

type WSMessage_NotificationReq struct {
	NotificationReq *NotificationReq `protobuf:"bytes,140,opt,name=notificationReq,proto3,oneof"`
}

type WSMessage_NotificationResp struct {
	NotificationResp *NotificationResp `protobuf:"bytes,141,opt,name=notificationResp,proto3,oneof"`
}

type WSMessage_NotificationUpd struct {
	NotificationUpd *NotificationUpd `protobuf:"bytes,147,opt,name=notificationUpd,proto3,oneof"`
}

type WSMessage_ObjectEditAccessReq struct {
	ObjectEditAccessReq *ObjectEditAccessReq `protobuf:"bytes,174,opt,name=objectEditAccessReq,proto3,oneof"`
}

type WSMessage_ObjectEditAccessResp struct {
	ObjectEditAccessResp *ObjectEditAccessResp `protobuf:"bytes,175,opt,name=objectEditAccessResp,proto3,oneof"`
}

type WSMessage_PiquantConfigListReq struct {
	PiquantConfigListReq *PiquantConfigListReq `protobuf:"bytes,73,opt,name=piquantConfigListReq,proto3,oneof"`
}

type WSMessage_PiquantConfigListResp struct {
	PiquantConfigListResp *PiquantConfigListResp `protobuf:"bytes,74,opt,name=piquantConfigListResp,proto3,oneof"`
}

type WSMessage_PiquantConfigVersionReq struct {
	PiquantConfigVersionReq *PiquantConfigVersionReq `protobuf:"bytes,75,opt,name=piquantConfigVersionReq,proto3,oneof"`
}

type WSMessage_PiquantConfigVersionResp struct {
	PiquantConfigVersionResp *PiquantConfigVersionResp `protobuf:"bytes,76,opt,name=piquantConfigVersionResp,proto3,oneof"`
}

type WSMessage_PiquantConfigVersionsListReq struct {
	PiquantConfigVersionsListReq *PiquantConfigVersionsListReq `protobuf:"bytes,77,opt,name=piquantConfigVersionsListReq,proto3,oneof"`
}

type WSMessage_PiquantConfigVersionsListResp struct {
	PiquantConfigVersionsListResp *PiquantConfigVersionsListResp `protobuf:"bytes,78,opt,name=piquantConfigVersionsListResp,proto3,oneof"`
}

type WSMessage_PiquantCurrentVersionReq struct {
	PiquantCurrentVersionReq *PiquantCurrentVersionReq `protobuf:"bytes,79,opt,name=piquantCurrentVersionReq,proto3,oneof"`
}

type WSMessage_PiquantCurrentVersionResp struct {
	PiquantCurrentVersionResp *PiquantCurrentVersionResp `protobuf:"bytes,80,opt,name=piquantCurrentVersionResp,proto3,oneof"`
}

type WSMessage_PiquantVersionListReq struct {
	PiquantVersionListReq *PiquantVersionListReq `protobuf:"bytes,81,opt,name=piquantVersionListReq,proto3,oneof"`
}

type WSMessage_PiquantVersionListResp struct {
	PiquantVersionListResp *PiquantVersionListResp `protobuf:"bytes,82,opt,name=piquantVersionListResp,proto3,oneof"`
}

type WSMessage_PiquantWriteCurrentVersionReq struct {
	PiquantWriteCurrentVersionReq *PiquantWriteCurrentVersionReq `protobuf:"bytes,83,opt,name=piquantWriteCurrentVersionReq,proto3,oneof"`
}

type WSMessage_PiquantWriteCurrentVersionResp struct {
	PiquantWriteCurrentVersionResp *PiquantWriteCurrentVersionResp `protobuf:"bytes,84,opt,name=piquantWriteCurrentVersionResp,proto3,oneof"`
}

type WSMessage_PseudoIntensityReq struct {
	PseudoIntensityReq *PseudoIntensityReq `protobuf:"bytes,85,opt,name=pseudoIntensityReq,proto3,oneof"`
}

type WSMessage_PseudoIntensityResp struct {
	PseudoIntensityResp *PseudoIntensityResp `protobuf:"bytes,86,opt,name=pseudoIntensityResp,proto3,oneof"`
}

type WSMessage_PublishExpressionToZenodoReq struct {
	PublishExpressionToZenodoReq *PublishExpressionToZenodoReq `protobuf:"bytes,242,opt,name=publishExpressionToZenodoReq,proto3,oneof"`
}

type WSMessage_PublishExpressionToZenodoResp struct {
	PublishExpressionToZenodoResp *PublishExpressionToZenodoResp `protobuf:"bytes,243,opt,name=publishExpressionToZenodoResp,proto3,oneof"`
}

type WSMessage_QuantBlessReq struct {
	QuantBlessReq *QuantBlessReq `protobuf:"bytes,202,opt,name=quantBlessReq,proto3,oneof"`
}

type WSMessage_QuantBlessResp struct {
	QuantBlessResp *QuantBlessResp `protobuf:"bytes,203,opt,name=quantBlessResp,proto3,oneof"`
}

type WSMessage_QuantCombineListGetReq struct {
	QuantCombineListGetReq *QuantCombineListGetReq `protobuf:"bytes,204,opt,name=quantCombineListGetReq,proto3,oneof"`
}

type WSMessage_QuantCombineListGetResp struct {
	QuantCombineListGetResp *QuantCombineListGetResp `protobuf:"bytes,205,opt,name=quantCombineListGetResp,proto3,oneof"`
}

type WSMessage_QuantCombineListWriteReq struct {
	QuantCombineListWriteReq *QuantCombineListWriteReq `protobuf:"bytes,206,opt,name=quantCombineListWriteReq,proto3,oneof"`
}

type WSMessage_QuantCombineListWriteResp struct {
	QuantCombineListWriteResp *QuantCombineListWriteResp `protobuf:"bytes,207,opt,name=quantCombineListWriteResp,proto3,oneof"`
}

type WSMessage_QuantCombineReq struct {
	QuantCombineReq *QuantCombineReq `protobuf:"bytes,208,opt,name=quantCombineReq,proto3,oneof"`
}

type WSMessage_QuantCombineResp struct {
	QuantCombineResp *QuantCombineResp `protobuf:"bytes,209,opt,name=quantCombineResp,proto3,oneof"`
}

type WSMessage_QuantCreateReq struct {
	QuantCreateReq *QuantCreateReq `protobuf:"bytes,270,opt,name=quantCreateReq,proto3,oneof"`
}

type WSMessage_QuantCreateResp struct {
	QuantCreateResp *QuantCreateResp `protobuf:"bytes,271,opt,name=quantCreateResp,proto3,oneof"`
}

type WSMessage_QuantCreateUpd struct {
	QuantCreateUpd *QuantCreateUpd `protobuf:"bytes,272,opt,name=quantCreateUpd,proto3,oneof"`
}

type WSMessage_QuantDeleteReq struct {
	QuantDeleteReq *QuantDeleteReq `protobuf:"bytes,210,opt,name=quantDeleteReq,proto3,oneof"`
}

type WSMessage_QuantDeleteResp struct {
	QuantDeleteResp *QuantDeleteResp `protobuf:"bytes,211,opt,name=quantDeleteResp,proto3,oneof"`
}

type WSMessage_QuantGetReq struct {
	QuantGetReq *QuantGetReq `protobuf:"bytes,212,opt,name=quantGetReq,proto3,oneof"`
}

type WSMessage_QuantGetResp struct {
	QuantGetResp *QuantGetResp `protobuf:"bytes,213,opt,name=quantGetResp,proto3,oneof"`
}

type WSMessage_QuantLastOutputGetReq struct {
	QuantLastOutputGetReq *QuantLastOutputGetReq `protobuf:"bytes,214,opt,name=quantLastOutputGetReq,proto3,oneof"`
}

type WSMessage_QuantLastOutputGetResp struct {
	QuantLastOutputGetResp *QuantLastOutputGetResp `protobuf:"bytes,215,opt,name=quantLastOutputGetResp,proto3,oneof"`
}

type WSMessage_QuantListReq struct {
	QuantListReq *QuantListReq `protobuf:"bytes,216,opt,name=quantListReq,proto3,oneof"`
}

type WSMessage_QuantListResp struct {
	QuantListResp *QuantListResp `protobuf:"bytes,217,opt,name=quantListResp,proto3,oneof"`
}

type WSMessage_QuantLogGetReq struct {
	QuantLogGetReq *QuantLogGetReq `protobuf:"bytes,301,opt,name=quantLogGetReq,proto3,oneof"`
}

type WSMessage_QuantLogGetResp struct {
	QuantLogGetResp *QuantLogGetResp `protobuf:"bytes,302,opt,name=quantLogGetResp,proto3,oneof"`
}

type WSMessage_QuantLogListReq struct {
	QuantLogListReq *QuantLogListReq `protobuf:"bytes,303,opt,name=quantLogListReq,proto3,oneof"`
}

type WSMessage_QuantLogListResp struct {
	QuantLogListResp *QuantLogListResp `protobuf:"bytes,304,opt,name=quantLogListResp,proto3,oneof"`
}

type WSMessage_QuantPublishReq struct {
	QuantPublishReq *QuantPublishReq `protobuf:"bytes,218,opt,name=quantPublishReq,proto3,oneof"`
}

type WSMessage_QuantPublishResp struct {
	QuantPublishResp *QuantPublishResp `protobuf:"bytes,219,opt,name=quantPublishResp,proto3,oneof"`
}

type WSMessage_QuantRawDataGetReq struct {
	QuantRawDataGetReq *QuantRawDataGetReq `protobuf:"bytes,305,opt,name=quantRawDataGetReq,proto3,oneof"`
}

type WSMessage_QuantRawDataGetResp struct {
	QuantRawDataGetResp *QuantRawDataGetResp `protobuf:"bytes,306,opt,name=quantRawDataGetResp,proto3,oneof"`
}

type WSMessage_QuantUploadReq struct {
	QuantUploadReq *QuantUploadReq `protobuf:"bytes,220,opt,name=quantUploadReq,proto3,oneof"`
}

type WSMessage_QuantUploadResp struct {
	QuantUploadResp *QuantUploadResp `protobuf:"bytes,221,opt,name=quantUploadResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestBulkDuplicateReq struct {
	RegionOfInterestBulkDuplicateReq *RegionOfInterestBulkDuplicateReq `protobuf:"bytes,238,opt,name=regionOfInterestBulkDuplicateReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestBulkDuplicateResp struct {
	RegionOfInterestBulkDuplicateResp *RegionOfInterestBulkDuplicateResp `protobuf:"bytes,239,opt,name=regionOfInterestBulkDuplicateResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestBulkWriteReq struct {
	RegionOfInterestBulkWriteReq *RegionOfInterestBulkWriteReq `protobuf:"bytes,236,opt,name=regionOfInterestBulkWriteReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestBulkWriteResp struct {
	RegionOfInterestBulkWriteResp *RegionOfInterestBulkWriteResp `protobuf:"bytes,237,opt,name=regionOfInterestBulkWriteResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestDeleteReq struct {
	RegionOfInterestDeleteReq *RegionOfInterestDeleteReq `protobuf:"bytes,87,opt,name=regionOfInterestDeleteReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestDeleteResp struct {
	RegionOfInterestDeleteResp *RegionOfInterestDeleteResp `protobuf:"bytes,88,opt,name=regionOfInterestDeleteResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestDisplaySettingsGetReq struct {
	RegionOfInterestDisplaySettingsGetReq *RegionOfInterestDisplaySettingsGetReq `protobuf:"bytes,246,opt,name=regionOfInterestDisplaySettingsGetReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestDisplaySettingsGetResp struct {
	RegionOfInterestDisplaySettingsGetResp *RegionOfInterestDisplaySettingsGetResp `protobuf:"bytes,247,opt,name=regionOfInterestDisplaySettingsGetResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestDisplaySettingsWriteReq struct {
	RegionOfInterestDisplaySettingsWriteReq *RegionOfInterestDisplaySettingsWriteReq `protobuf:"bytes,244,opt,name=regionOfInterestDisplaySettingsWriteReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestDisplaySettingsWriteResp struct {
	RegionOfInterestDisplaySettingsWriteResp *RegionOfInterestDisplaySettingsWriteResp `protobuf:"bytes,245,opt,name=regionOfInterestDisplaySettingsWriteResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestGetReq struct {
	RegionOfInterestGetReq *RegionOfInterestGetReq `protobuf:"bytes,91,opt,name=regionOfInterestGetReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestGetResp struct {
	RegionOfInterestGetResp *RegionOfInterestGetResp `protobuf:"bytes,92,opt,name=regionOfInterestGetResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestListReq struct {
	RegionOfInterestListReq *RegionOfInterestListReq `protobuf:"bytes,89,opt,name=regionOfInterestListReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestListResp struct {
	RegionOfInterestListResp *RegionOfInterestListResp `protobuf:"bytes,90,opt,name=regionOfInterestListResp,proto3,oneof"`
}

type WSMessage_RegionOfInterestWriteReq struct {
	RegionOfInterestWriteReq *RegionOfInterestWriteReq `protobuf:"bytes,93,opt,name=regionOfInterestWriteReq,proto3,oneof"`
}

type WSMessage_RegionOfInterestWriteResp struct {
	RegionOfInterestWriteResp *RegionOfInterestWriteResp `protobuf:"bytes,94,opt,name=regionOfInterestWriteResp,proto3,oneof"`
}

type WSMessage_RunTestReq struct {
	RunTestReq *RunTestReq `protobuf:"bytes,95,opt,name=runTestReq,proto3,oneof"`
}

type WSMessage_RunTestResp struct {
	RunTestResp *RunTestResp `protobuf:"bytes,96,opt,name=runTestResp,proto3,oneof"`
}

type WSMessage_ScanAutoShareReq struct {
	ScanAutoShareReq *ScanAutoShareReq `protobuf:"bytes,279,opt,name=scanAutoShareReq,proto3,oneof"`
}

type WSMessage_ScanAutoShareResp struct {
	ScanAutoShareResp *ScanAutoShareResp `protobuf:"bytes,280,opt,name=scanAutoShareResp,proto3,oneof"`
}

type WSMessage_ScanAutoShareWriteReq struct {
	ScanAutoShareWriteReq *ScanAutoShareWriteReq `protobuf:"bytes,281,opt,name=scanAutoShareWriteReq,proto3,oneof"`
}

type WSMessage_ScanAutoShareWriteResp struct {
	ScanAutoShareWriteResp *ScanAutoShareWriteResp `protobuf:"bytes,282,opt,name=scanAutoShareWriteResp,proto3,oneof"`
}

type WSMessage_ScanBeamLocationsReq struct {
	ScanBeamLocationsReq *ScanBeamLocationsReq `protobuf:"bytes,192,opt,name=scanBeamLocationsReq,proto3,oneof"`
}

type WSMessage_ScanBeamLocationsResp struct {
	ScanBeamLocationsResp *ScanBeamLocationsResp `protobuf:"bytes,193,opt,name=scanBeamLocationsResp,proto3,oneof"`
}

type WSMessage_ScanDeleteReq struct {
	ScanDeleteReq *ScanDeleteReq `protobuf:"bytes,276,opt,name=scanDeleteReq,proto3,oneof"`
}

type WSMessage_ScanDeleteResp struct {
	ScanDeleteResp *ScanDeleteResp `protobuf:"bytes,277,opt,name=scanDeleteResp,proto3,oneof"`
}

type WSMessage_ScanEntryMetadataReq struct {
	ScanEntryMetadataReq *ScanEntryMetadataReq `protobuf:"bytes,194,opt,name=scanEntryMetadataReq,proto3,oneof"`
}

type WSMessage_ScanEntryMetadataResp struct {
	ScanEntryMetadataResp *ScanEntryMetadataResp `protobuf:"bytes,195,opt,name=scanEntryMetadataResp,proto3,oneof"`
}

type WSMessage_ScanEntryReq struct {
	ScanEntryReq *ScanEntryReq `protobuf:"bytes,196,opt,name=scanEntryReq,proto3,oneof"`
}

type WSMessage_ScanEntryResp struct {
	ScanEntryResp *ScanEntryResp `protobuf:"bytes,197,opt,name=scanEntryResp,proto3,oneof"`
}

type WSMessage_ScanGetReq struct {
	ScanGetReq *ScanGetReq `protobuf:"bytes,292,opt,name=scanGetReq,proto3,oneof"`
}

type WSMessage_ScanGetResp struct {
	ScanGetResp *ScanGetResp `protobuf:"bytes,293,opt,name=scanGetResp,proto3,oneof"`
}

type WSMessage_ScanListReq struct {
	ScanListReq *ScanListReq `protobuf:"bytes,99,opt,name=scanListReq,proto3,oneof"`
}

type WSMessage_ScanListResp struct {
	ScanListResp *ScanListResp `protobuf:"bytes,100,opt,name=scanListResp,proto3,oneof"`
}

type WSMessage_ScanListUpd struct {
	ScanListUpd *ScanListUpd `protobuf:"bytes,101,opt,name=scanListUpd,proto3,oneof"`
}

type WSMessage_ScanMetaLabelsAndTypesReq struct {
	ScanMetaLabelsAndTypesReq *ScanMetaLabelsAndTypesReq `protobuf:"bytes,104,opt,name=scanMetaLabelsAndTypesReq,proto3,oneof"`
}

type WSMessage_ScanMetaLabelsAndTypesResp struct {
	ScanMetaLabelsAndTypesResp *ScanMetaLabelsAndTypesResp `protobuf:"bytes,105,opt,name=scanMetaLabelsAndTypesResp,proto3,oneof"`
}

type WSMessage_ScanMetaWriteReq struct {
	ScanMetaWriteReq *ScanMetaWriteReq `protobuf:"bytes,106,opt,name=scanMetaWriteReq,proto3,oneof"`
}

type WSMessage_ScanMetaWriteResp struct {
	ScanMetaWriteResp *ScanMetaWriteResp `protobuf:"bytes,107,opt,name=scanMetaWriteResp,proto3,oneof"`
}

type WSMessage_ScanTriggerAutoQuantReq struct {
	ScanTriggerAutoQuantReq *ScanTriggerAutoQuantReq `protobuf:"bytes,294,opt,name=scanTriggerAutoQuantReq,proto3,oneof"`
}

type WSMessage_ScanTriggerAutoQuantResp struct {
	ScanTriggerAutoQuantResp *ScanTriggerAutoQuantResp `protobuf:"bytes,295,opt,name=scanTriggerAutoQuantResp,proto3,oneof"`
}

type WSMessage_ScanTriggerReImportReq struct {
	ScanTriggerReImportReq *ScanTriggerReImportReq `protobuf:"bytes,108,opt,name=scanTriggerReImportReq,proto3,oneof"`
}

type WSMessage_ScanTriggerReImportResp struct {
	ScanTriggerReImportResp *ScanTriggerReImportResp `protobuf:"bytes,109,opt,name=scanTriggerReImportResp,proto3,oneof"`
}

type WSMessage_ScanTriggerReImportUpd struct {
	ScanTriggerReImportUpd *ScanTriggerReImportUpd `protobuf:"bytes,269,opt,name=scanTriggerReImportUpd,proto3,oneof"`
}

type WSMessage_ScanUploadReq struct {
	ScanUploadReq *ScanUploadReq `protobuf:"bytes,110,opt,name=scanUploadReq,proto3,oneof"`
}

type WSMessage_ScanUploadResp struct {
	ScanUploadResp *ScanUploadResp `protobuf:"bytes,111,opt,name=scanUploadResp,proto3,oneof"`
}

type WSMessage_ScanUploadUpd struct {
	ScanUploadUpd *ScanUploadUpd `protobuf:"bytes,268,opt,name=scanUploadUpd,proto3,oneof"`
}

type WSMessage_ScreenConfigurationDeleteReq struct {
	ScreenConfigurationDeleteReq *ScreenConfigurationDeleteReq `protobuf:"bytes,260,opt,name=screenConfigurationDeleteReq,proto3,oneof"`
}

type WSMessage_ScreenConfigurationDeleteResp struct {
	ScreenConfigurationDeleteResp *ScreenConfigurationDeleteResp `protobuf:"bytes,261,opt,name=screenConfigurationDeleteResp,proto3,oneof"`
}

type WSMessage_ScreenConfigurationGetReq struct {
	ScreenConfigurationGetReq *ScreenConfigurationGetReq `protobuf:"bytes,248,opt,name=screenConfigurationGetReq,proto3,oneof"`
}

type WSMessage_ScreenConfigurationGetResp struct {
	ScreenConfigurationGetResp *ScreenConfigurationGetResp `protobuf:"bytes,249,opt,name=screenConfigurationGetResp,proto3,oneof"`
}

type WSMessage_ScreenConfigurationListReq struct {
	ScreenConfigurationListReq *ScreenConfigurationListReq `protobuf:"bytes,250,opt,name=screenConfigurationListReq,proto3,oneof"`
}

type WSMessage_ScreenConfigurationListResp struct {
	ScreenConfigurationListResp *ScreenConfigurationListResp `protobuf:"bytes,251,opt,name=screenConfigurationListResp,proto3,oneof"`
}

type WSMessage_ScreenConfigurationWriteReq struct {
	ScreenConfigurationWriteReq *ScreenConfigurationWriteReq `protobuf:"bytes,252,opt,name=screenConfigurationWriteReq,proto3,oneof"`
}

type WSMessage_ScreenConfigurationWriteResp struct {
	ScreenConfigurationWriteResp *ScreenConfigurationWriteResp `protobuf:"bytes,253,opt,name=screenConfigurationWriteResp,proto3,oneof"`
}

type WSMessage_SelectedImagePixelsReq struct {
	SelectedImagePixelsReq *SelectedImagePixelsReq `protobuf:"bytes,226,opt,name=selectedImagePixelsReq,proto3,oneof"`
}

type WSMessage_SelectedImagePixelsResp struct {
	SelectedImagePixelsResp *SelectedImagePixelsResp `protobuf:"bytes,227,opt,name=selectedImagePixelsResp,proto3,oneof"`
}

type WSMessage_SelectedImagePixelsWriteReq struct {
	SelectedImagePixelsWriteReq *SelectedImagePixelsWriteReq `protobuf:"bytes,228,opt,name=selectedImagePixelsWriteReq,proto3,oneof"`
}

type WSMessage_SelectedImagePixelsWriteResp struct {
	SelectedImagePixelsWriteResp *SelectedImagePixelsWriteResp `protobuf:"bytes,229,opt,name=selectedImagePixelsWriteResp,proto3,oneof"`
}

type WSMessage_SelectedScanEntriesReq struct {
	SelectedScanEntriesReq *SelectedScanEntriesReq `protobuf:"bytes,230,opt,name=selectedScanEntriesReq,proto3,oneof"`
}

type WSMessage_SelectedScanEntriesResp struct {
	SelectedScanEntriesResp *SelectedScanEntriesResp `protobuf:"bytes,231,opt,name=selectedScanEntriesResp,proto3,oneof"`
}

type WSMessage_SelectedScanEntriesWriteReq struct {
	SelectedScanEntriesWriteReq *SelectedScanEntriesWriteReq `protobuf:"bytes,232,opt,name=selectedScanEntriesWriteReq,proto3,oneof"`
}

type WSMessage_SelectedScanEntriesWriteResp struct {
	SelectedScanEntriesWriteResp *SelectedScanEntriesWriteResp `protobuf:"bytes,233,opt,name=selectedScanEntriesWriteResp,proto3,oneof"`
}

type WSMessage_SendUserNotificationReq struct {
	SendUserNotificationReq *SendUserNotificationReq `protobuf:"bytes,112,opt,name=sendUserNotificationReq,proto3,oneof"`
}

type WSMessage_SendUserNotificationResp struct {
	SendUserNotificationResp *SendUserNotificationResp `protobuf:"bytes,113,opt,name=sendUserNotificationResp,proto3,oneof"`
}

type WSMessage_SpectrumReq struct {
	SpectrumReq *SpectrumReq `protobuf:"bytes,114,opt,name=spectrumReq,proto3,oneof"`
}

type WSMessage_SpectrumResp struct {
	SpectrumResp *SpectrumResp `protobuf:"bytes,115,opt,name=spectrumResp,proto3,oneof"`
}

type WSMessage_TagCreateReq struct {
	TagCreateReq *TagCreateReq `protobuf:"bytes,116,opt,name=tagCreateReq,proto3,oneof"`
}

type WSMessage_TagCreateResp struct {
	TagCreateResp *TagCreateResp `protobuf:"bytes,117,opt,name=tagCreateResp,proto3,oneof"`
}

type WSMessage_TagDeleteReq struct {
	TagDeleteReq *TagDeleteReq `protobuf:"bytes,118,opt,name=tagDeleteReq,proto3,oneof"`
}

type WSMessage_TagDeleteResp struct {
	TagDeleteResp *TagDeleteResp `protobuf:"bytes,119,opt,name=tagDeleteResp,proto3,oneof"`
}

type WSMessage_TagListReq struct {
	TagListReq *TagListReq `protobuf:"bytes,120,opt,name=tagListReq,proto3,oneof"`
}

type WSMessage_TagListResp struct {
	TagListResp *TagListResp `protobuf:"bytes,121,opt,name=tagListResp,proto3,oneof"`
}

type WSMessage_UserAddRoleReq struct {
	UserAddRoleReq *UserAddRoleReq `protobuf:"bytes,122,opt,name=userAddRoleReq,proto3,oneof"`
}

type WSMessage_UserAddRoleResp struct {
	UserAddRoleResp *UserAddRoleResp `protobuf:"bytes,123,opt,name=userAddRoleResp,proto3,oneof"`
}

type WSMessage_UserDeleteRoleReq struct {
	UserDeleteRoleReq *UserDeleteRoleReq `protobuf:"bytes,124,opt,name=userDeleteRoleReq,proto3,oneof"`
}

type WSMessage_UserDeleteRoleResp struct {
	UserDeleteRoleResp *UserDeleteRoleResp `protobuf:"bytes,125,opt,name=userDeleteRoleResp,proto3,oneof"`
}

type WSMessage_UserDetailsReq struct {
	UserDetailsReq *UserDetailsReq `protobuf:"bytes,126,opt,name=userDetailsReq,proto3,oneof"`
}

type WSMessage_UserDetailsResp struct {
	UserDetailsResp *UserDetailsResp `protobuf:"bytes,127,opt,name=userDetailsResp,proto3,oneof"`
}

type WSMessage_UserDetailsWriteReq struct {
	UserDetailsWriteReq *UserDetailsWriteReq `protobuf:"bytes,129,opt,name=userDetailsWriteReq,proto3,oneof"`
}

type WSMessage_UserDetailsWriteResp struct {
	UserDetailsWriteResp *UserDetailsWriteResp `protobuf:"bytes,130,opt,name=userDetailsWriteResp,proto3,oneof"`
}

type WSMessage_UserGroupAddAdminReq struct {
	UserGroupAddAdminReq *UserGroupAddAdminReq `protobuf:"bytes,156,opt,name=userGroupAddAdminReq,proto3,oneof"`
}

type WSMessage_UserGroupAddAdminResp struct {
	UserGroupAddAdminResp *UserGroupAddAdminResp `protobuf:"bytes,157,opt,name=userGroupAddAdminResp,proto3,oneof"`
}

type WSMessage_UserGroupAddMemberReq struct {
	UserGroupAddMemberReq *UserGroupAddMemberReq `protobuf:"bytes,158,opt,name=userGroupAddMemberReq,proto3,oneof"`
}

type WSMessage_UserGroupAddMemberResp struct {
	UserGroupAddMemberResp *UserGroupAddMemberResp `protobuf:"bytes,159,opt,name=userGroupAddMemberResp,proto3,oneof"`
}

type WSMessage_UserGroupAddViewerReq struct {
	UserGroupAddViewerReq *UserGroupAddViewerReq `protobuf:"bytes,180,opt,name=userGroupAddViewerReq,proto3,oneof"`
}

type WSMessage_UserGroupAddViewerResp struct {
	UserGroupAddViewerResp *UserGroupAddViewerResp `protobuf:"bytes,181,opt,name=userGroupAddViewerResp,proto3,oneof"`
}

type WSMessage_UserGroupCreateReq struct {
	UserGroupCreateReq *UserGroupCreateReq `protobuf:"bytes,160,opt,name=userGroupCreateReq,proto3,oneof"`
}

type WSMessage_UserGroupCreateResp struct {
	UserGroupCreateResp *UserGroupCreateResp `protobuf:"bytes,161,opt,name=userGroupCreateResp,proto3,oneof"`
}

type WSMessage_UserGroupDeleteAdminReq struct {
	UserGroupDeleteAdminReq *UserGroupDeleteAdminReq `protobuf:"bytes,162,opt,name=userGroupDeleteAdminReq,proto3,oneof"`
}

type WSMessage_UserGroupDeleteAdminResp struct {
	UserGroupDeleteAdminResp *UserGroupDeleteAdminResp `protobuf:"bytes,163,opt,name=userGroupDeleteAdminResp,proto3,oneof"`
}

type WSMessage_UserGroupDeleteMemberReq struct {
	UserGroupDeleteMemberReq *UserGroupDeleteMemberReq `protobuf:"bytes,164,opt,name=userGroupDeleteMemberReq,proto3,oneof"`
}

type WSMessage_UserGroupDeleteMemberResp struct {
	UserGroupDeleteMemberResp *UserGroupDeleteMemberResp `protobuf:"bytes,165,opt,name=userGroupDeleteMemberResp,proto3,oneof"`
}

type WSMessage_UserGroupDeleteReq struct {
	UserGroupDeleteReq *UserGroupDeleteReq `protobuf:"bytes,166,opt,name=userGroupDeleteReq,proto3,oneof"`
}

type WSMessage_UserGroupDeleteResp struct {
	UserGroupDeleteResp *UserGroupDeleteResp `protobuf:"bytes,167,opt,name=userGroupDeleteResp,proto3,oneof"`
}

type WSMessage_UserGroupDeleteViewerReq struct {
	UserGroupDeleteViewerReq *UserGroupDeleteViewerReq `protobuf:"bytes,178,opt,name=userGroupDeleteViewerReq,proto3,oneof"`
}

type WSMessage_UserGroupDeleteViewerResp struct {
	UserGroupDeleteViewerResp *UserGroupDeleteViewerResp `protobuf:"bytes,179,opt,name=userGroupDeleteViewerResp,proto3,oneof"`
}

type WSMessage_UserGroupEditDetailsReq struct {
	UserGroupEditDetailsReq *UserGroupEditDetailsReq `protobuf:"bytes,170,opt,name=userGroupEditDetailsReq,proto3,oneof"`
}

type WSMessage_UserGroupEditDetailsResp struct {
	UserGroupEditDetailsResp *UserGroupEditDetailsResp `protobuf:"bytes,171,opt,name=userGroupEditDetailsResp,proto3,oneof"`
}

type WSMessage_UserGroupIgnoreJoinReq struct {
	UserGroupIgnoreJoinReq *UserGroupIgnoreJoinReq `protobuf:"bytes,182,opt,name=userGroupIgnoreJoinReq,proto3,oneof"`
}

type WSMessage_UserGroupIgnoreJoinResp struct {
	UserGroupIgnoreJoinResp *UserGroupIgnoreJoinResp `protobuf:"bytes,183,opt,name=userGroupIgnoreJoinResp,proto3,oneof"`
}

type WSMessage_UserGroupJoinListReq struct {
	UserGroupJoinListReq *UserGroupJoinListReq `protobuf:"bytes,184,opt,name=userGroupJoinListReq,proto3,oneof"`
}

type WSMessage_UserGroupJoinListResp struct {
	UserGroupJoinListResp *UserGroupJoinListResp `protobuf:"bytes,185,opt,name=userGroupJoinListResp,proto3,oneof"`
}

type WSMessage_UserGroupJoinReq struct {
	UserGroupJoinReq *UserGroupJoinReq `protobuf:"bytes,186,opt,name=userGroupJoinReq,proto3,oneof"`
}

type WSMessage_UserGroupJoinResp struct {
	UserGroupJoinResp *UserGroupJoinResp `protobuf:"bytes,187,opt,name=userGroupJoinResp,proto3,oneof"`
}

type WSMessage_UserGroupListJoinableReq struct {
	UserGroupListJoinableReq *UserGroupListJoinableReq `protobuf:"bytes,234,opt,name=userGroupListJoinableReq,proto3,oneof"`
}

type WSMessage_UserGroupListJoinableResp struct {
	UserGroupListJoinableResp *UserGroupListJoinableResp `protobuf:"bytes,235,opt,name=userGroupListJoinableResp,proto3,oneof"`
}

type WSMessage_UserGroupListReq struct {
	UserGroupListReq *UserGroupListReq `protobuf:"bytes,168,opt,name=userGroupListReq,proto3,oneof"`
}

type WSMessage_UserGroupListResp struct {
	UserGroupListResp *UserGroupListResp `protobuf:"bytes,169,opt,name=userGroupListResp,proto3,oneof"`
}

type WSMessage_UserGroupReq struct {
	UserGroupReq *UserGroupReq `protobuf:"bytes,188,opt,name=userGroupReq,proto3,oneof"`
}

type WSMessage_UserGroupResp struct {
	UserGroupResp *UserGroupResp `protobuf:"bytes,189,opt,name=userGroupResp,proto3,oneof"`
}

type WSMessage_UserListReq struct {
	UserListReq *UserListReq `protobuf:"bytes,138,opt,name=userListReq,proto3,oneof"`
}

type WSMessage_UserListResp struct {
	UserListResp *UserListResp `protobuf:"bytes,139,opt,name=userListResp,proto3,oneof"`
}

type WSMessage_UserNotificationSettingsReq struct {
	UserNotificationSettingsReq *UserNotificationSettingsReq `protobuf:"bytes,142,opt,name=userNotificationSettingsReq,proto3,oneof"`
}

type WSMessage_UserNotificationSettingsResp struct {
	UserNotificationSettingsResp *UserNotificationSettingsResp `protobuf:"bytes,143,opt,name=userNotificationSettingsResp,proto3,oneof"`
}

type WSMessage_UserNotificationSettingsUpd struct {
	UserNotificationSettingsUpd *UserNotificationSettingsUpd `protobuf:"bytes,144,opt,name=userNotificationSettingsUpd,proto3,oneof"`
}

type WSMessage_UserNotificationSettingsWriteReq struct {
	UserNotificationSettingsWriteReq *UserNotificationSettingsWriteReq `protobuf:"bytes,145,opt,name=userNotificationSettingsWriteReq,proto3,oneof"`
}

type WSMessage_UserNotificationSettingsWriteResp struct {
	UserNotificationSettingsWriteResp *UserNotificationSettingsWriteResp `protobuf:"bytes,146,opt,name=userNotificationSettingsWriteResp,proto3,oneof"`
}

type WSMessage_UserRoleListReq struct {
	UserRoleListReq *UserRoleListReq `protobuf:"bytes,148,opt,name=userRoleListReq,proto3,oneof"`
}

type WSMessage_UserRoleListResp struct {
	UserRoleListResp *UserRoleListResp `protobuf:"bytes,149,opt,name=userRoleListResp,proto3,oneof"`
}

type WSMessage_UserRolesListReq struct {
	UserRolesListReq *UserRolesListReq `protobuf:"bytes,150,opt,name=userRolesListReq,proto3,oneof"`
}

type WSMessage_UserRolesListResp struct {
	UserRolesListResp *UserRolesListResp `protobuf:"bytes,151,opt,name=userRolesListResp,proto3,oneof"`
}

type WSMessage_UserSearchReq struct {
	UserSearchReq *UserSearchReq `protobuf:"bytes,222,opt,name=userSearchReq,proto3,oneof"`
}

type WSMessage_UserSearchResp struct {
	UserSearchResp *UserSearchResp `protobuf:"bytes,223,opt,name=userSearchResp,proto3,oneof"`
}

type WSMessage_WidgetDataGetReq struct {
	WidgetDataGetReq *WidgetDataGetReq `protobuf:"bytes,254,opt,name=widgetDataGetReq,proto3,oneof"`
}

type WSMessage_WidgetDataGetResp struct {
	WidgetDataGetResp *WidgetDataGetResp `protobuf:"bytes,255,opt,name=widgetDataGetResp,proto3,oneof"`
}

type WSMessage_WidgetDataWriteReq struct {
	WidgetDataWriteReq *WidgetDataWriteReq `protobuf:"bytes,256,opt,name=widgetDataWriteReq,proto3,oneof"`
}

type WSMessage_WidgetDataWriteResp struct {
	WidgetDataWriteResp *WidgetDataWriteResp `protobuf:"bytes,257,opt,name=widgetDataWriteResp,proto3,oneof"`
}

type WSMessage_ZenodoDOIGetReq struct {
	ZenodoDOIGetReq *ZenodoDOIGetReq `protobuf:"bytes,240,opt,name=zenodoDOIGetReq,proto3,oneof"`
}

type WSMessage_ZenodoDOIGetResp struct {
	ZenodoDOIGetResp *ZenodoDOIGetResp `protobuf:"bytes,241,opt,name=zenodoDOIGetResp,proto3,oneof"`
}

func (*WSMessage_DataModuleAddVersionReq) isWSMessage_Contents() {}

func (*WSMessage_DataModuleAddVersionResp) isWSMessage_Contents() {}

func (*WSMessage_DataModuleGetReq) isWSMessage_Contents() {}

func (*WSMessage_DataModuleGetResp) isWSMessage_Contents() {}

func (*WSMessage_DataModuleListReq) isWSMessage_Contents() {}

func (*WSMessage_DataModuleListResp) isWSMessage_Contents() {}

func (*WSMessage_DataModuleWriteReq) isWSMessage_Contents() {}

func (*WSMessage_DataModuleWriteResp) isWSMessage_Contents() {}

func (*WSMessage_DetectedDiffractionPeaksReq) isWSMessage_Contents() {}

func (*WSMessage_DetectedDiffractionPeaksResp) isWSMessage_Contents() {}

func (*WSMessage_DetectorConfigListReq) isWSMessage_Contents() {}

func (*WSMessage_DetectorConfigListResp) isWSMessage_Contents() {}

func (*WSMessage_DetectorConfigReq) isWSMessage_Contents() {}

func (*WSMessage_DetectorConfigResp) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakManualDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakManualDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakManualInsertReq) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakManualInsertResp) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakManualListReq) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakManualListResp) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakStatusDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakStatusDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakStatusListReq) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakStatusListResp) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakStatusWriteReq) isWSMessage_Contents() {}

func (*WSMessage_DiffractionPeakStatusWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ElementSetDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_ElementSetDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_ElementSetGetReq) isWSMessage_Contents() {}

func (*WSMessage_ElementSetGetResp) isWSMessage_Contents() {}

func (*WSMessage_ElementSetListReq) isWSMessage_Contents() {}

func (*WSMessage_ElementSetListResp) isWSMessage_Contents() {}

func (*WSMessage_ElementSetWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ElementSetWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ExportFilesReq) isWSMessage_Contents() {}

func (*WSMessage_ExportFilesResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionDisplaySettingsGetReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionDisplaySettingsGetResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionDisplaySettingsWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionDisplaySettingsWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGetReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGetResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupGetReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupGetResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupListReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupListResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionGroupWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionListReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionListResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionWriteExecStatReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionWriteExecStatResp) isWSMessage_Contents() {}

func (*WSMessage_ExpressionWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ExpressionWriteResp) isWSMessage_Contents() {}

func (*WSMessage_GetOwnershipReq) isWSMessage_Contents() {}

func (*WSMessage_GetOwnershipResp) isWSMessage_Contents() {}

func (*WSMessage_ImageBeamLocationVersionsReq) isWSMessage_Contents() {}

func (*WSMessage_ImageBeamLocationVersionsResp) isWSMessage_Contents() {}

func (*WSMessage_ImageBeamLocationsReq) isWSMessage_Contents() {}

func (*WSMessage_ImageBeamLocationsResp) isWSMessage_Contents() {}

func (*WSMessage_ImageDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_ImageDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_ImageGetDefaultReq) isWSMessage_Contents() {}

func (*WSMessage_ImageGetDefaultResp) isWSMessage_Contents() {}

func (*WSMessage_ImageGetReq) isWSMessage_Contents() {}

func (*WSMessage_ImageGetResp) isWSMessage_Contents() {}

func (*WSMessage_ImageListReq) isWSMessage_Contents() {}

func (*WSMessage_ImageListResp) isWSMessage_Contents() {}

func (*WSMessage_ImageListUpd) isWSMessage_Contents() {}

func (*WSMessage_ImageSetDefaultReq) isWSMessage_Contents() {}

func (*WSMessage_ImageSetDefaultResp) isWSMessage_Contents() {}

func (*WSMessage_ImageSetMatchTransformReq) isWSMessage_Contents() {}

func (*WSMessage_ImageSetMatchTransformResp) isWSMessage_Contents() {}

func (*WSMessage_ImportMarsViewerImageReq) isWSMessage_Contents() {}

func (*WSMessage_ImportMarsViewerImageResp) isWSMessage_Contents() {}

func (*WSMessage_ImportMarsViewerImageUpd) isWSMessage_Contents() {}

func (*WSMessage_JobListReq) isWSMessage_Contents() {}

func (*WSMessage_JobListResp) isWSMessage_Contents() {}

func (*WSMessage_JobListUpd) isWSMessage_Contents() {}

func (*WSMessage_LogGetLevelReq) isWSMessage_Contents() {}

func (*WSMessage_LogGetLevelResp) isWSMessage_Contents() {}

func (*WSMessage_LogReadReq) isWSMessage_Contents() {}

func (*WSMessage_LogReadResp) isWSMessage_Contents() {}

func (*WSMessage_LogSetLevelReq) isWSMessage_Contents() {}

func (*WSMessage_LogSetLevelResp) isWSMessage_Contents() {}

func (*WSMessage_MemoiseGetReq) isWSMessage_Contents() {}

func (*WSMessage_MemoiseGetResp) isWSMessage_Contents() {}

func (*WSMessage_MemoiseWriteReq) isWSMessage_Contents() {}

func (*WSMessage_MemoiseWriteResp) isWSMessage_Contents() {}

func (*WSMessage_MultiQuantCompareReq) isWSMessage_Contents() {}

func (*WSMessage_MultiQuantCompareResp) isWSMessage_Contents() {}

func (*WSMessage_NotificationDismissReq) isWSMessage_Contents() {}

func (*WSMessage_NotificationDismissResp) isWSMessage_Contents() {}

func (*WSMessage_NotificationReq) isWSMessage_Contents() {}

func (*WSMessage_NotificationResp) isWSMessage_Contents() {}

func (*WSMessage_NotificationUpd) isWSMessage_Contents() {}

func (*WSMessage_ObjectEditAccessReq) isWSMessage_Contents() {}

func (*WSMessage_ObjectEditAccessResp) isWSMessage_Contents() {}

func (*WSMessage_PiquantConfigListReq) isWSMessage_Contents() {}

func (*WSMessage_PiquantConfigListResp) isWSMessage_Contents() {}

func (*WSMessage_PiquantConfigVersionReq) isWSMessage_Contents() {}

func (*WSMessage_PiquantConfigVersionResp) isWSMessage_Contents() {}

func (*WSMessage_PiquantConfigVersionsListReq) isWSMessage_Contents() {}

func (*WSMessage_PiquantConfigVersionsListResp) isWSMessage_Contents() {}

func (*WSMessage_PiquantCurrentVersionReq) isWSMessage_Contents() {}

func (*WSMessage_PiquantCurrentVersionResp) isWSMessage_Contents() {}

func (*WSMessage_PiquantVersionListReq) isWSMessage_Contents() {}

func (*WSMessage_PiquantVersionListResp) isWSMessage_Contents() {}

func (*WSMessage_PiquantWriteCurrentVersionReq) isWSMessage_Contents() {}

func (*WSMessage_PiquantWriteCurrentVersionResp) isWSMessage_Contents() {}

func (*WSMessage_PseudoIntensityReq) isWSMessage_Contents() {}

func (*WSMessage_PseudoIntensityResp) isWSMessage_Contents() {}

func (*WSMessage_PublishExpressionToZenodoReq) isWSMessage_Contents() {}

func (*WSMessage_PublishExpressionToZenodoResp) isWSMessage_Contents() {}

func (*WSMessage_QuantBlessReq) isWSMessage_Contents() {}

func (*WSMessage_QuantBlessResp) isWSMessage_Contents() {}

func (*WSMessage_QuantCombineListGetReq) isWSMessage_Contents() {}

func (*WSMessage_QuantCombineListGetResp) isWSMessage_Contents() {}

func (*WSMessage_QuantCombineListWriteReq) isWSMessage_Contents() {}

func (*WSMessage_QuantCombineListWriteResp) isWSMessage_Contents() {}

func (*WSMessage_QuantCombineReq) isWSMessage_Contents() {}

func (*WSMessage_QuantCombineResp) isWSMessage_Contents() {}

func (*WSMessage_QuantCreateReq) isWSMessage_Contents() {}

func (*WSMessage_QuantCreateResp) isWSMessage_Contents() {}

func (*WSMessage_QuantCreateUpd) isWSMessage_Contents() {}

func (*WSMessage_QuantDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_QuantDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_QuantGetReq) isWSMessage_Contents() {}

func (*WSMessage_QuantGetResp) isWSMessage_Contents() {}

func (*WSMessage_QuantLastOutputGetReq) isWSMessage_Contents() {}

func (*WSMessage_QuantLastOutputGetResp) isWSMessage_Contents() {}

func (*WSMessage_QuantListReq) isWSMessage_Contents() {}

func (*WSMessage_QuantListResp) isWSMessage_Contents() {}

func (*WSMessage_QuantLogGetReq) isWSMessage_Contents() {}

func (*WSMessage_QuantLogGetResp) isWSMessage_Contents() {}

func (*WSMessage_QuantLogListReq) isWSMessage_Contents() {}

func (*WSMessage_QuantLogListResp) isWSMessage_Contents() {}

func (*WSMessage_QuantPublishReq) isWSMessage_Contents() {}

func (*WSMessage_QuantPublishResp) isWSMessage_Contents() {}

func (*WSMessage_QuantRawDataGetReq) isWSMessage_Contents() {}

func (*WSMessage_QuantRawDataGetResp) isWSMessage_Contents() {}

func (*WSMessage_QuantUploadReq) isWSMessage_Contents() {}

func (*WSMessage_QuantUploadResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestBulkDuplicateReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestBulkDuplicateResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestBulkWriteReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestBulkWriteResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestDisplaySettingsGetReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestDisplaySettingsGetResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestDisplaySettingsWriteReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestDisplaySettingsWriteResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestGetReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestGetResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestListReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestListResp) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestWriteReq) isWSMessage_Contents() {}

func (*WSMessage_RegionOfInterestWriteResp) isWSMessage_Contents() {}

func (*WSMessage_RunTestReq) isWSMessage_Contents() {}

func (*WSMessage_RunTestResp) isWSMessage_Contents() {}

func (*WSMessage_ScanAutoShareReq) isWSMessage_Contents() {}

func (*WSMessage_ScanAutoShareResp) isWSMessage_Contents() {}

func (*WSMessage_ScanAutoShareWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ScanAutoShareWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ScanBeamLocationsReq) isWSMessage_Contents() {}

func (*WSMessage_ScanBeamLocationsResp) isWSMessage_Contents() {}

func (*WSMessage_ScanDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_ScanDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_ScanEntryMetadataReq) isWSMessage_Contents() {}

func (*WSMessage_ScanEntryMetadataResp) isWSMessage_Contents() {}

func (*WSMessage_ScanEntryReq) isWSMessage_Contents() {}

func (*WSMessage_ScanEntryResp) isWSMessage_Contents() {}

func (*WSMessage_ScanGetReq) isWSMessage_Contents() {}

func (*WSMessage_ScanGetResp) isWSMessage_Contents() {}

func (*WSMessage_ScanListReq) isWSMessage_Contents() {}

func (*WSMessage_ScanListResp) isWSMessage_Contents() {}

func (*WSMessage_ScanListUpd) isWSMessage_Contents() {}

func (*WSMessage_ScanMetaLabelsAndTypesReq) isWSMessage_Contents() {}

func (*WSMessage_ScanMetaLabelsAndTypesResp) isWSMessage_Contents() {}

func (*WSMessage_ScanMetaWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ScanMetaWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ScanTriggerAutoQuantReq) isWSMessage_Contents() {}

func (*WSMessage_ScanTriggerAutoQuantResp) isWSMessage_Contents() {}

func (*WSMessage_ScanTriggerReImportReq) isWSMessage_Contents() {}

func (*WSMessage_ScanTriggerReImportResp) isWSMessage_Contents() {}

func (*WSMessage_ScanTriggerReImportUpd) isWSMessage_Contents() {}

func (*WSMessage_ScanUploadReq) isWSMessage_Contents() {}

func (*WSMessage_ScanUploadResp) isWSMessage_Contents() {}

func (*WSMessage_ScanUploadUpd) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationGetReq) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationGetResp) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationListReq) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationListResp) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationWriteReq) isWSMessage_Contents() {}

func (*WSMessage_ScreenConfigurationWriteResp) isWSMessage_Contents() {}

func (*WSMessage_SelectedImagePixelsReq) isWSMessage_Contents() {}

func (*WSMessage_SelectedImagePixelsResp) isWSMessage_Contents() {}

func (*WSMessage_SelectedImagePixelsWriteReq) isWSMessage_Contents() {}

func (*WSMessage_SelectedImagePixelsWriteResp) isWSMessage_Contents() {}

func (*WSMessage_SelectedScanEntriesReq) isWSMessage_Contents() {}

func (*WSMessage_SelectedScanEntriesResp) isWSMessage_Contents() {}

func (*WSMessage_SelectedScanEntriesWriteReq) isWSMessage_Contents() {}

func (*WSMessage_SelectedScanEntriesWriteResp) isWSMessage_Contents() {}

func (*WSMessage_SendUserNotificationReq) isWSMessage_Contents() {}

func (*WSMessage_SendUserNotificationResp) isWSMessage_Contents() {}

func (*WSMessage_SpectrumReq) isWSMessage_Contents() {}

func (*WSMessage_SpectrumResp) isWSMessage_Contents() {}

func (*WSMessage_TagCreateReq) isWSMessage_Contents() {}

func (*WSMessage_TagCreateResp) isWSMessage_Contents() {}

func (*WSMessage_TagDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_TagDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_TagListReq) isWSMessage_Contents() {}

func (*WSMessage_TagListResp) isWSMessage_Contents() {}

func (*WSMessage_UserAddRoleReq) isWSMessage_Contents() {}

func (*WSMessage_UserAddRoleResp) isWSMessage_Contents() {}

func (*WSMessage_UserDeleteRoleReq) isWSMessage_Contents() {}

func (*WSMessage_UserDeleteRoleResp) isWSMessage_Contents() {}

func (*WSMessage_UserDetailsReq) isWSMessage_Contents() {}

func (*WSMessage_UserDetailsResp) isWSMessage_Contents() {}

func (*WSMessage_UserDetailsWriteReq) isWSMessage_Contents() {}

func (*WSMessage_UserDetailsWriteResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupAddAdminReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupAddAdminResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupAddMemberReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupAddMemberResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupAddViewerReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupAddViewerResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupCreateReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupCreateResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteAdminReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteAdminResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteMemberReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteMemberResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteViewerReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupDeleteViewerResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupEditDetailsReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupEditDetailsResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupIgnoreJoinReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupIgnoreJoinResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupJoinListReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupJoinListResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupJoinReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupJoinResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupListJoinableReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupListJoinableResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupListReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupListResp) isWSMessage_Contents() {}

func (*WSMessage_UserGroupReq) isWSMessage_Contents() {}

func (*WSMessage_UserGroupResp) isWSMessage_Contents() {}

func (*WSMessage_UserListReq) isWSMessage_Contents() {}

func (*WSMessage_UserListResp) isWSMessage_Contents() {}

func (*WSMessage_UserNotificationSettingsReq) isWSMessage_Contents() {}

func (*WSMessage_UserNotificationSettingsResp) isWSMessage_Contents() {}

func (*WSMessage_UserNotificationSettingsUpd) isWSMessage_Contents() {}

func (*WSMessage_UserNotificationSettingsWriteReq) isWSMessage_Contents() {}

func (*WSMessage_UserNotificationSettingsWriteResp) isWSMessage_Contents() {}

func (*WSMessage_UserRoleListReq) isWSMessage_Contents() {}

func (*WSMessage_UserRoleListResp) isWSMessage_Contents() {}

func (*WSMessage_UserRolesListReq) isWSMessage_Contents() {}

func (*WSMessage_UserRolesListResp) isWSMessage_Contents() {}

func (*WSMessage_UserSearchReq) isWSMessage_Contents() {}

func (*WSMessage_UserSearchResp) isWSMessage_Contents() {}

func (*WSMessage_WidgetDataGetReq) isWSMessage_Contents() {}

func (*WSMessage_WidgetDataGetResp) isWSMessage_Contents() {}

func (*WSMessage_WidgetDataWriteReq) isWSMessage_Contents() {}

func (*WSMessage_WidgetDataWriteResp) isWSMessage_Contents() {}

func (*WSMessage_ZenodoDOIGetReq) isWSMessage_Contents() {}

func (*WSMessage_ZenodoDOIGetResp) isWSMessage_Contents() {}

var File_websocket_proto protoreflect.FileDescriptor

var file_websocket_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64,
	0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x2d, 0x70, 0x65, 0x61, 0x6b, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x74, 0x2d, 0x6d,
	0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x6d,
	0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x62, 0x65, 0x61, 0x6d, 0x2d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x67, 0x2d,
	0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6a, 0x6f, 0x62, 0x2d,
	0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6c, 0x6f, 0x67, 0x2d,
	0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x65, 0x6d, 0x6f,
	0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x2d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x12, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x2d, 0x6d, 0x73, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x2d, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x6d, 0x73,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d, 0x6d,
	0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x61, 0x6c, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x72, 0x6f, 0x69, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1d, 0x73, 0x63, 0x61, 0x6e, 0x2d, 0x62, 0x65, 0x61, 0x6d, 0x2d, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x73, 0x63, 0x61, 0x6e, 0x2d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2d, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x73, 0x63, 0x61, 0x6e, 0x2d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2d, 0x6d, 0x73, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x2d, 0x6d, 0x73, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74,
	0x61, 0x67, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x74,
	0x65, 0x73, 0x74, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x73, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x75, 0x73, 0x65, 0x72, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x6a, 0x6f, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x75,
	0x73, 0x65, 0x72, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x75,
	0x73, 0x65, 0x72, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x64, 0x6f, 0x69, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x2d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x74,
	0x61, 0x2d, 0x6d, 0x73, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0xaa, 0x01,
	0x0a, 0x09, 0x57, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x55, 0x0a, 0x17, 0x64, 0x61, 0x74, 0x61,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0xc6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x58, 0x0a, 0x18, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0xc7, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41,
	0x64, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x18, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x11, 0x64, 0x61,
	0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x11, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x45, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x64, 0x61,
	0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x48, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x1b, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x18, 0xe0, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x1b, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x64, 0x0a,
	0x1c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xe1, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44,
	0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44,
	0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x82, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x83,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x16, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x12,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x12, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1e, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1e,
	0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x6c,
	0x0a, 0x1f, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61,
	0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1f, 0x64, 0x69, 0x66,
	0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x69, 0x0a, 0x1e,
	0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1e, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x6c, 0x0a, 0x1f, 0x64, 0x69, 0x66, 0x66, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x1f, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1c, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x44, 0x69,
	0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1c, 0x64, 0x69,
	0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x66, 0x0a, 0x1d, 0x64, 0x69,
	0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x1d, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x61, 0x6b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x69, 0x0a, 0x1e, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x44, 0x69, 0x66,
	0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1e, 0x64,
	0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x6c, 0x0a,
	0x1f, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1f, 0x64, 0x69, 0x66, 0x66,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1c, 0x64,
	0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x1c, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x66, 0x0a, 0x1d, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1d, 0x64, 0x69, 0x66, 0x66, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x1d, 0x64, 0x69, 0x66, 0x66,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x1d, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x69, 0x0a, 0x1e, 0x64, 0x69, 0x66, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1e, 0x64, 0x69, 0x66,
	0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x13, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x13, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x14, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x14, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3f, 0x0a, 0x10, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x10, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x11, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x12, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x13, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3c,
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x13,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x13, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x14, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6d, 0x0a, 0x1f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xa0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x1f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x70, 0x0a, 0x20, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x20, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x73, 0x0a, 0x21, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xa2, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x21, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x76, 0x0a, 0x22, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0xa3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x22, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x10, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x42, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x11, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x18, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x5a, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x2b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x19, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x18, 0xb0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x17, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x17, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x17, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x57, 0x0a, 0x18, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x2f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x30, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x45, 0x0a, 0x12,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x12, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x1a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x60, 0x0a, 0x1b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x13, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x13, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x18, 0xac, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x18, 0xad, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42,
	0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x18, 0xab, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1c,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x67, 0x0a, 0x1d,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xac, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61,
	0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65,
	0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x18, 0xbe,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61,
	0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x15, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42,
	0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x18, 0xbf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42,
	0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x16, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x18, 0x86, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x13, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x87, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x88, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x89, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x33, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x18, 0x96, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x13, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x19, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x18, 0x8a, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x5e, 0x0a, 0x1a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x18, 0x8b,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x1a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x58, 0x0a, 0x18, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x18, 0x91, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73,
	0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x18, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x5b, 0x0a, 0x19, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x92, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x19, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x18, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x64, 0x18, 0x93, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x48, 0x00, 0x52, 0x18, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4d,
	0x61, 0x72, 0x73, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70,
	0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18,
	0xa8, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x31, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x18, 0xa9, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x18, 0xaa, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4a, 0x6f, 0x62, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4c,
	0x6f, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x0e, 0x6c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x3c, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x67, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f,
	0x67, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x18, 0x45, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x0b,
	0x6c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39,
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x53, 0x65,
	0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0f, 0x6c, 0x6f, 0x67,
	0x53, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x18, 0x48, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x69,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x9b, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x69, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x69, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x3a, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x69, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x9c, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x6d, 0x6f,
	0x69, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65,
	0x6d, 0x6f, 0x69, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0f,
	0x6d, 0x65, 0x6d, 0x6f, 0x69, 0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x69, 0x73, 0x65, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x6f, 0x69,
	0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x10, 0x6d, 0x65,
	0x6d, 0x6f, 0x69, 0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x39,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x69, 0x73, 0x65, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x69,
	0x73, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x14, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4f, 0x0a, 0x15, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x16, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x18, 0x9e, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x55,
	0x0a, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0x9f, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x8c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x18, 0x93, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45,
	0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x18, 0xae, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x4c, 0x0a, 0x14, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xaf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x14, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x14, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50,
	0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x4e, 0x0a, 0x15, 0x70,
	0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x69, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x15, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x17, 0x70,
	0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50,
	0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x57, 0x0a, 0x18, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x4c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x18, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1c, 0x70, 0x69,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x50, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x1c, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x66, 0x0a, 0x1d, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1d, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x18, 0x70, 0x69, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x69, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x5a, 0x0a, 0x19, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x50, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x19, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x15,
	0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x69,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x51, 0x0a, 0x16,
	0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50,
	0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x66, 0x0a, 0x1d, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1d, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x69, 0x0a, 0x1e, 0x70, 0x69, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x50, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x1e, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x18, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x50, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x13, 0x70, 0x73, 0x65,
	0x75, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13,
	0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f,
	0x52, 0x65, 0x71, 0x18, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1c, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x67, 0x0a, 0x1d, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x18, 0xf3, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x1d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x42, 0x6c, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0e, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xcb, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x42, 0x6c, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x42, 0x6c,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x16, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x16, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x55, 0x0a, 0x17, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x58, 0x0a, 0x18, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xce,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x18, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x5b, 0x0a, 0x19,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x19,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x18, 0xd0, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xd1, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x8e, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x8f, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x18, 0x90, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x48,
	0x00, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x12, 0x3a, 0x0a, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a,
	0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0xd3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0b,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xd4, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0b, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x34, 0x0a, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18,
	0xd5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xd6,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x61, 0x73,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x15, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x18, 0xd7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x16, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0xd8, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x37, 0x0a, 0x0d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x18, 0xd9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xad, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x18, 0xda, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x18, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x52,
	0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xb1, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x49,
	0x0a, 0x13, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x13, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x61, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x18, 0xdc, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x18, 0xdd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x70, 0x0a, 0x20, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xee, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x20, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x73, 0x0a, 0x21, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xef, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x21, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1c, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42,
	0x75, 0x6c, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xec, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x1c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x67, 0x0a, 0x1d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0xed, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c, 0x6b,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1d, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x75, 0x6c,
	0x6b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a, 0x19, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x5d, 0x0a, 0x1a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7f, 0x0a, 0x25, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f,
	0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xf6,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x25, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x82, 0x01, 0x0a, 0x26, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x18, 0xf7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x26, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x85, 0x01, 0x0a, 0x27,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xf4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x27, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x88, 0x01, 0x0a, 0x28, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0xf5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x28, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x54, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x5c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a,
	0x18, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x18, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x5a, 0x0a, 0x19, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x5e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x19, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x0a, 0x72,
	0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x0b, 0x72, 0x75,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x60, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x0b, 0x72, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x10,
	0x73, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x18, 0x97, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73, 0x63,
	0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x43,
	0x0a, 0x11, 0x73, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x98, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x11, 0x73, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x99, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x73,
	0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x9a,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x61, 0x72, 0x65, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x14, 0x73, 0x63, 0x61, 0x6e,
	0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x18, 0xc0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x65,
	0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x14, 0x73, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4f, 0x0a, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x42, 0x65,
	0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18,
	0xc1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x61,
	0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x94, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x95, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x63, 0x61, 0x6e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x63,
	0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x14,
	0x73, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x18, 0xc2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x73, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x4f, 0x0a, 0x15, 0x73, 0x63,
	0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x18, 0xc3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x15, 0x73, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x73,
	0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x18, 0xc4, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x18, 0xc5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x63, 0x61, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x63, 0x61,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x63,
	0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xa4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x63,
	0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa5, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x33, 0x0a, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x63, 0x61, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x12, 0x5a, 0x0a, 0x19, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x63, 0x61, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x19, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x5d, 0x0a, 0x1a, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1a, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x41, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x10, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x11, 0x73, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x17, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x18, 0xa6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x58, 0x0a,
	0x18, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa7, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x6f, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x73,
	0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x17, 0x73, 0x63,
	0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x52, 0x0a, 0x16, 0x73, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x18, 0x8d, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x48, 0x00, 0x52, 0x16, 0x73, 0x63,
	0x61, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x55, 0x70, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x73,
	0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0e,
	0x73, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x18, 0x6f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x18, 0x8c, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x70, 0x64,
	0x12, 0x64, 0x0a, 0x1c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x67, 0x0a, 0x1d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x85, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x1d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5b, 0x0a, 0x19, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xf8, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x19, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x5e, 0x0a, 0x1a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xf9, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x1a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x1a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0xfa, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x1a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x61, 0x0a, 0x1b,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xfb, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x1b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x61, 0x0a, 0x1b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xfc,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x64, 0x0a, 0x1c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0xfd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x16, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x18, 0xe2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x55, 0x0a, 0x17,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69,
	0x78, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x1b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x18, 0xe4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x64, 0x0a, 0x1c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xe5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78,
	0x65, 0x6c, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1c,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x69, 0x78,
	0x65, 0x6c, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x16,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x55, 0x0a, 0x17, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xe7, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x1b, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xe8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x1b, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x64, 0x0a, 0x1c, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xe9, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x1c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x54, 0x0a, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x70, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x73,
	0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x30, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x18, 0x72,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x33, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x74, 0x72,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x61, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54,
	0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x74,
	0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0d, 0x74,
	0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x75, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x54, 0x61, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0d, 0x74, 0x61, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x0d, 0x74, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x78,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x30, 0x0a, 0x0b, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x79,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x39, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18,
	0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x45,
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x3c, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49,
	0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4c, 0x0a, 0x14, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x18,
	0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x14, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x4f, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x9d,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x15, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x18,
	0x9e, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x9f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x15, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x16,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x46, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18,
	0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x18, 0xa2,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x17, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x58, 0x0a, 0x18, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x18, 0xa4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x5b,
	0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa5, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x19, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x18, 0xa6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x12, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa7, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58,
	0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x18, 0xb2, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x18,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x5b, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x19, 0x75, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x17, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x58, 0x0a, 0x18,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x18, 0xab, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x18, 0xb6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x16, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x55, 0x0a, 0x17, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x17, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4c, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f,
	0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0xb8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x4f, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xb9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x40, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x18, 0xba, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x43, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0xbb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x18, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x18, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x5b, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0xeb,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x19, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40,
	0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x18, 0xa8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x43, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xa9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x18, 0xbc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x18, 0xbd, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x18, 0x8a, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x8b, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a,
	0x1b, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x18, 0x8e, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x64, 0x0a, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x8f, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61, 0x0a, 0x1b, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x55, 0x70, 0x64, 0x18, 0x90, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x55, 0x70, 0x64, 0x48, 0x00, 0x52, 0x1b, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x55, 0x70, 0x64, 0x12, 0x70, 0x0a, 0x20, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x91, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x20, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x73, 0x0a, 0x21, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x92, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x21, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3d, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x18, 0x94, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x40, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x95, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x96, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x18, 0xde, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x3a, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x18, 0xdf, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,
	0x10, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x18, 0xfe, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x43, 0x0a, 0x11, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x11, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x80, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x12, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x49, 0x0a, 0x13,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x81, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x13, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x7a, 0x65, 0x6e, 0x6f, 0x64,
	0x6f, 0x44, 0x4f, 0x49, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x4f, 0x49, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x7a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x4f, 0x49,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x10, 0x7a, 0x65, 0x6e, 0x6f, 0x64, 0x6f,
	0x44, 0x4f, 0x49, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x18, 0xf1, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x5a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x4f, 0x49, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x7a, 0x65, 0x6e, 0x6f, 0x64, 0x6f, 0x44, 0x4f,
	0x49, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x2a, 0x8e, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x53, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x53, 0x5f,
	0x4f, 0x4b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x53, 0x5f, 0x42, 0x41, 0x44,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x53,
	0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x04,
	0x12, 0x13, 0x0a, 0x0f, 0x57, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x4f, 0x55, 0x54, 0x10, 0x06, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_websocket_proto_rawDescOnce sync.Once
	file_websocket_proto_rawDescData = file_websocket_proto_rawDesc
)

func file_websocket_proto_rawDescGZIP() []byte {
	file_websocket_proto_rawDescOnce.Do(func() {
		file_websocket_proto_rawDescData = protoimpl.X.CompressGZIP(file_websocket_proto_rawDescData)
	})
	return file_websocket_proto_rawDescData
}

var file_websocket_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_websocket_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_websocket_proto_goTypes = []interface{}{
	(ResponseStatus)(0),                              // 0: ResponseStatus
	(*WSMessage)(nil),                                // 1: WSMessage
	(*DataModuleAddVersionReq)(nil),                  // 2: DataModuleAddVersionReq
	(*DataModuleAddVersionResp)(nil),                 // 3: DataModuleAddVersionResp
	(*DataModuleGetReq)(nil),                         // 4: DataModuleGetReq
	(*DataModuleGetResp)(nil),                        // 5: DataModuleGetResp
	(*DataModuleListReq)(nil),                        // 6: DataModuleListReq
	(*DataModuleListResp)(nil),                       // 7: DataModuleListResp
	(*DataModuleWriteReq)(nil),                       // 8: DataModuleWriteReq
	(*DataModuleWriteResp)(nil),                      // 9: DataModuleWriteResp
	(*DetectedDiffractionPeaksReq)(nil),              // 10: DetectedDiffractionPeaksReq
	(*DetectedDiffractionPeaksResp)(nil),             // 11: DetectedDiffractionPeaksResp
	(*DetectorConfigListReq)(nil),                    // 12: DetectorConfigListReq
	(*DetectorConfigListResp)(nil),                   // 13: DetectorConfigListResp
	(*DetectorConfigReq)(nil),                        // 14: DetectorConfigReq
	(*DetectorConfigResp)(nil),                       // 15: DetectorConfigResp
	(*DiffractionPeakManualDeleteReq)(nil),           // 16: DiffractionPeakManualDeleteReq
	(*DiffractionPeakManualDeleteResp)(nil),          // 17: DiffractionPeakManualDeleteResp
	(*DiffractionPeakManualInsertReq)(nil),           // 18: DiffractionPeakManualInsertReq
	(*DiffractionPeakManualInsertResp)(nil),          // 19: DiffractionPeakManualInsertResp
	(*DiffractionPeakManualListReq)(nil),             // 20: DiffractionPeakManualListReq
	(*DiffractionPeakManualListResp)(nil),            // 21: DiffractionPeakManualListResp
	(*DiffractionPeakStatusDeleteReq)(nil),           // 22: DiffractionPeakStatusDeleteReq
	(*DiffractionPeakStatusDeleteResp)(nil),          // 23: DiffractionPeakStatusDeleteResp
	(*DiffractionPeakStatusListReq)(nil),             // 24: DiffractionPeakStatusListReq
	(*DiffractionPeakStatusListResp)(nil),            // 25: DiffractionPeakStatusListResp
	(*DiffractionPeakStatusWriteReq)(nil),            // 26: DiffractionPeakStatusWriteReq
	(*DiffractionPeakStatusWriteResp)(nil),           // 27: DiffractionPeakStatusWriteResp
	(*ElementSetDeleteReq)(nil),                      // 28: ElementSetDeleteReq
	(*ElementSetDeleteResp)(nil),                     // 29: ElementSetDeleteResp
	(*ElementSetGetReq)(nil),                         // 30: ElementSetGetReq
	(*ElementSetGetResp)(nil),                        // 31: ElementSetGetResp
	(*ElementSetListReq)(nil),                        // 32: ElementSetListReq
	(*ElementSetListResp)(nil),                       // 33: ElementSetListResp
	(*ElementSetWriteReq)(nil),                       // 34: ElementSetWriteReq
	(*ElementSetWriteResp)(nil),                      // 35: ElementSetWriteResp
	(*ExportFilesReq)(nil),                           // 36: ExportFilesReq
	(*ExportFilesResp)(nil),                          // 37: ExportFilesResp
	(*ExpressionDeleteReq)(nil),                      // 38: ExpressionDeleteReq
	(*ExpressionDeleteResp)(nil),                     // 39: ExpressionDeleteResp
	(*ExpressionDisplaySettingsGetReq)(nil),          // 40: ExpressionDisplaySettingsGetReq
	(*ExpressionDisplaySettingsGetResp)(nil),         // 41: ExpressionDisplaySettingsGetResp
	(*ExpressionDisplaySettingsWriteReq)(nil),        // 42: ExpressionDisplaySettingsWriteReq
	(*ExpressionDisplaySettingsWriteResp)(nil),       // 43: ExpressionDisplaySettingsWriteResp
	(*ExpressionGetReq)(nil),                         // 44: ExpressionGetReq
	(*ExpressionGetResp)(nil),                        // 45: ExpressionGetResp
	(*ExpressionGroupDeleteReq)(nil),                 // 46: ExpressionGroupDeleteReq
	(*ExpressionGroupDeleteResp)(nil),                // 47: ExpressionGroupDeleteResp
	(*ExpressionGroupGetReq)(nil),                    // 48: ExpressionGroupGetReq
	(*ExpressionGroupGetResp)(nil),                   // 49: ExpressionGroupGetResp
	(*ExpressionGroupListReq)(nil),                   // 50: ExpressionGroupListReq
	(*ExpressionGroupListResp)(nil),                  // 51: ExpressionGroupListResp
	(*ExpressionGroupWriteReq)(nil),                  // 52: ExpressionGroupWriteReq
	(*ExpressionGroupWriteResp)(nil),                 // 53: ExpressionGroupWriteResp
	(*ExpressionListReq)(nil),                        // 54: ExpressionListReq
	(*ExpressionListResp)(nil),                       // 55: ExpressionListResp
	(*ExpressionWriteExecStatReq)(nil),               // 56: ExpressionWriteExecStatReq
	(*ExpressionWriteExecStatResp)(nil),              // 57: ExpressionWriteExecStatResp
	(*ExpressionWriteReq)(nil),                       // 58: ExpressionWriteReq
	(*ExpressionWriteResp)(nil),                      // 59: ExpressionWriteResp
	(*GetOwnershipReq)(nil),                          // 60: GetOwnershipReq
	(*GetOwnershipResp)(nil),                         // 61: GetOwnershipResp
	(*ImageBeamLocationVersionsReq)(nil),             // 62: ImageBeamLocationVersionsReq
	(*ImageBeamLocationVersionsResp)(nil),            // 63: ImageBeamLocationVersionsResp
	(*ImageBeamLocationsReq)(nil),                    // 64: ImageBeamLocationsReq
	(*ImageBeamLocationsResp)(nil),                   // 65: ImageBeamLocationsResp
	(*ImageDeleteReq)(nil),                           // 66: ImageDeleteReq
	(*ImageDeleteResp)(nil),                          // 67: ImageDeleteResp
	(*ImageGetDefaultReq)(nil),                       // 68: ImageGetDefaultReq
	(*ImageGetDefaultResp)(nil),                      // 69: ImageGetDefaultResp
	(*ImageGetReq)(nil),                              // 70: ImageGetReq
	(*ImageGetResp)(nil),                             // 71: ImageGetResp
	(*ImageListReq)(nil),                             // 72: ImageListReq
	(*ImageListResp)(nil),                            // 73: ImageListResp
	(*ImageListUpd)(nil),                             // 74: ImageListUpd
	(*ImageSetDefaultReq)(nil),                       // 75: ImageSetDefaultReq
	(*ImageSetDefaultResp)(nil),                      // 76: ImageSetDefaultResp
	(*ImageSetMatchTransformReq)(nil),                // 77: ImageSetMatchTransformReq
	(*ImageSetMatchTransformResp)(nil),               // 78: ImageSetMatchTransformResp
	(*ImportMarsViewerImageReq)(nil),                 // 79: ImportMarsViewerImageReq
	(*ImportMarsViewerImageResp)(nil),                // 80: ImportMarsViewerImageResp
	(*ImportMarsViewerImageUpd)(nil),                 // 81: ImportMarsViewerImageUpd
	(*JobListReq)(nil),                               // 82: JobListReq
	(*JobListResp)(nil),                              // 83: JobListResp
	(*JobListUpd)(nil),                               // 84: JobListUpd
	(*LogGetLevelReq)(nil),                           // 85: LogGetLevelReq
	(*LogGetLevelResp)(nil),                          // 86: LogGetLevelResp
	(*LogReadReq)(nil),                               // 87: LogReadReq
	(*LogReadResp)(nil),                              // 88: LogReadResp
	(*LogSetLevelReq)(nil),                           // 89: LogSetLevelReq
	(*LogSetLevelResp)(nil),                          // 90: LogSetLevelResp
	(*MemoiseGetReq)(nil),                            // 91: MemoiseGetReq
	(*MemoiseGetResp)(nil),                           // 92: MemoiseGetResp
	(*MemoiseWriteReq)(nil),                          // 93: MemoiseWriteReq
	(*MemoiseWriteResp)(nil),                         // 94: MemoiseWriteResp
	(*MultiQuantCompareReq)(nil),                     // 95: MultiQuantCompareReq
	(*MultiQuantCompareResp)(nil),                    // 96: MultiQuantCompareResp
	(*NotificationDismissReq)(nil),                   // 97: NotificationDismissReq
	(*NotificationDismissResp)(nil),                  // 98: NotificationDismissResp
	(*NotificationReq)(nil),                          // 99: NotificationReq
	(*NotificationResp)(nil),                         // 100: NotificationResp
	(*NotificationUpd)(nil),                          // 101: NotificationUpd
	(*ObjectEditAccessReq)(nil),                      // 102: ObjectEditAccessReq
	(*ObjectEditAccessResp)(nil),                     // 103: ObjectEditAccessResp
	(*PiquantConfigListReq)(nil),                     // 104: PiquantConfigListReq
	(*PiquantConfigListResp)(nil),                    // 105: PiquantConfigListResp
	(*PiquantConfigVersionReq)(nil),                  // 106: PiquantConfigVersionReq
	(*PiquantConfigVersionResp)(nil),                 // 107: PiquantConfigVersionResp
	(*PiquantConfigVersionsListReq)(nil),             // 108: PiquantConfigVersionsListReq
	(*PiquantConfigVersionsListResp)(nil),            // 109: PiquantConfigVersionsListResp
	(*PiquantCurrentVersionReq)(nil),                 // 110: PiquantCurrentVersionReq
	(*PiquantCurrentVersionResp)(nil),                // 111: PiquantCurrentVersionResp
	(*PiquantVersionListReq)(nil),                    // 112: PiquantVersionListReq
	(*PiquantVersionListResp)(nil),                   // 113: PiquantVersionListResp
	(*PiquantWriteCurrentVersionReq)(nil),            // 114: PiquantWriteCurrentVersionReq
	(*PiquantWriteCurrentVersionResp)(nil),           // 115: PiquantWriteCurrentVersionResp
	(*PseudoIntensityReq)(nil),                       // 116: PseudoIntensityReq
	(*PseudoIntensityResp)(nil),                      // 117: PseudoIntensityResp
	(*PublishExpressionToZenodoReq)(nil),             // 118: PublishExpressionToZenodoReq
	(*PublishExpressionToZenodoResp)(nil),            // 119: PublishExpressionToZenodoResp
	(*QuantBlessReq)(nil),                            // 120: QuantBlessReq
	(*QuantBlessResp)(nil),                           // 121: QuantBlessResp
	(*QuantCombineListGetReq)(nil),                   // 122: QuantCombineListGetReq
	(*QuantCombineListGetResp)(nil),                  // 123: QuantCombineListGetResp
	(*QuantCombineListWriteReq)(nil),                 // 124: QuantCombineListWriteReq
	(*QuantCombineListWriteResp)(nil),                // 125: QuantCombineListWriteResp
	(*QuantCombineReq)(nil),                          // 126: QuantCombineReq
	(*QuantCombineResp)(nil),                         // 127: QuantCombineResp
	(*QuantCreateReq)(nil),                           // 128: QuantCreateReq
	(*QuantCreateResp)(nil),                          // 129: QuantCreateResp
	(*QuantCreateUpd)(nil),                           // 130: QuantCreateUpd
	(*QuantDeleteReq)(nil),                           // 131: QuantDeleteReq
	(*QuantDeleteResp)(nil),                          // 132: QuantDeleteResp
	(*QuantGetReq)(nil),                              // 133: QuantGetReq
	(*QuantGetResp)(nil),                             // 134: QuantGetResp
	(*QuantLastOutputGetReq)(nil),                    // 135: QuantLastOutputGetReq
	(*QuantLastOutputGetResp)(nil),                   // 136: QuantLastOutputGetResp
	(*QuantListReq)(nil),                             // 137: QuantListReq
	(*QuantListResp)(nil),                            // 138: QuantListResp
	(*QuantLogGetReq)(nil),                           // 139: QuantLogGetReq
	(*QuantLogGetResp)(nil),                          // 140: QuantLogGetResp
	(*QuantLogListReq)(nil),                          // 141: QuantLogListReq
	(*QuantLogListResp)(nil),                         // 142: QuantLogListResp
	(*QuantPublishReq)(nil),                          // 143: QuantPublishReq
	(*QuantPublishResp)(nil),                         // 144: QuantPublishResp
	(*QuantRawDataGetReq)(nil),                       // 145: QuantRawDataGetReq
	(*QuantRawDataGetResp)(nil),                      // 146: QuantRawDataGetResp
	(*QuantUploadReq)(nil),                           // 147: QuantUploadReq
	(*QuantUploadResp)(nil),                          // 148: QuantUploadResp
	(*RegionOfInterestBulkDuplicateReq)(nil),         // 149: RegionOfInterestBulkDuplicateReq
	(*RegionOfInterestBulkDuplicateResp)(nil),        // 150: RegionOfInterestBulkDuplicateResp
	(*RegionOfInterestBulkWriteReq)(nil),             // 151: RegionOfInterestBulkWriteReq
	(*RegionOfInterestBulkWriteResp)(nil),            // 152: RegionOfInterestBulkWriteResp
	(*RegionOfInterestDeleteReq)(nil),                // 153: RegionOfInterestDeleteReq
	(*RegionOfInterestDeleteResp)(nil),               // 154: RegionOfInterestDeleteResp
	(*RegionOfInterestDisplaySettingsGetReq)(nil),    // 155: RegionOfInterestDisplaySettingsGetReq
	(*RegionOfInterestDisplaySettingsGetResp)(nil),   // 156: RegionOfInterestDisplaySettingsGetResp
	(*RegionOfInterestDisplaySettingsWriteReq)(nil),  // 157: RegionOfInterestDisplaySettingsWriteReq
	(*RegionOfInterestDisplaySettingsWriteResp)(nil), // 158: RegionOfInterestDisplaySettingsWriteResp
	(*RegionOfInterestGetReq)(nil),                   // 159: RegionOfInterestGetReq
	(*RegionOfInterestGetResp)(nil),                  // 160: RegionOfInterestGetResp
	(*RegionOfInterestListReq)(nil),                  // 161: RegionOfInterestListReq
	(*RegionOfInterestListResp)(nil),                 // 162: RegionOfInterestListResp
	(*RegionOfInterestWriteReq)(nil),                 // 163: RegionOfInterestWriteReq
	(*RegionOfInterestWriteResp)(nil),                // 164: RegionOfInterestWriteResp
	(*RunTestReq)(nil),                               // 165: RunTestReq
	(*RunTestResp)(nil),                              // 166: RunTestResp
	(*ScanAutoShareReq)(nil),                         // 167: ScanAutoShareReq
	(*ScanAutoShareResp)(nil),                        // 168: ScanAutoShareResp
	(*ScanAutoShareWriteReq)(nil),                    // 169: ScanAutoShareWriteReq
	(*ScanAutoShareWriteResp)(nil),                   // 170: ScanAutoShareWriteResp
	(*ScanBeamLocationsReq)(nil),                     // 171: ScanBeamLocationsReq
	(*ScanBeamLocationsResp)(nil),                    // 172: ScanBeamLocationsResp
	(*ScanDeleteReq)(nil),                            // 173: ScanDeleteReq
	(*ScanDeleteResp)(nil),                           // 174: ScanDeleteResp
	(*ScanEntryMetadataReq)(nil),                     // 175: ScanEntryMetadataReq
	(*ScanEntryMetadataResp)(nil),                    // 176: ScanEntryMetadataResp
	(*ScanEntryReq)(nil),                             // 177: ScanEntryReq
	(*ScanEntryResp)(nil),                            // 178: ScanEntryResp
	(*ScanGetReq)(nil),                               // 179: ScanGetReq
	(*ScanGetResp)(nil),                              // 180: ScanGetResp
	(*ScanListReq)(nil),                              // 181: ScanListReq
	(*ScanListResp)(nil),                             // 182: ScanListResp
	(*ScanListUpd)(nil),                              // 183: ScanListUpd
	(*ScanMetaLabelsAndTypesReq)(nil),                // 184: ScanMetaLabelsAndTypesReq
	(*ScanMetaLabelsAndTypesResp)(nil),               // 185: ScanMetaLabelsAndTypesResp
	(*ScanMetaWriteReq)(nil),                         // 186: ScanMetaWriteReq
	(*ScanMetaWriteResp)(nil),                        // 187: ScanMetaWriteResp
	(*ScanTriggerAutoQuantReq)(nil),                  // 188: ScanTriggerAutoQuantReq
	(*ScanTriggerAutoQuantResp)(nil),                 // 189: ScanTriggerAutoQuantResp
	(*ScanTriggerReImportReq)(nil),                   // 190: ScanTriggerReImportReq
	(*ScanTriggerReImportResp)(nil),                  // 191: ScanTriggerReImportResp
	(*ScanTriggerReImportUpd)(nil),                   // 192: ScanTriggerReImportUpd
	(*ScanUploadReq)(nil),                            // 193: ScanUploadReq
	(*ScanUploadResp)(nil),                           // 194: ScanUploadResp
	(*ScanUploadUpd)(nil),                            // 195: ScanUploadUpd
	(*ScreenConfigurationDeleteReq)(nil),             // 196: ScreenConfigurationDeleteReq
	(*ScreenConfigurationDeleteResp)(nil),            // 197: ScreenConfigurationDeleteResp
	(*ScreenConfigurationGetReq)(nil),                // 198: ScreenConfigurationGetReq
	(*ScreenConfigurationGetResp)(nil),               // 199: ScreenConfigurationGetResp
	(*ScreenConfigurationListReq)(nil),               // 200: ScreenConfigurationListReq
	(*ScreenConfigurationListResp)(nil),              // 201: ScreenConfigurationListResp
	(*ScreenConfigurationWriteReq)(nil),              // 202: ScreenConfigurationWriteReq
	(*ScreenConfigurationWriteResp)(nil),             // 203: ScreenConfigurationWriteResp
	(*SelectedImagePixelsReq)(nil),                   // 204: SelectedImagePixelsReq
	(*SelectedImagePixelsResp)(nil),                  // 205: SelectedImagePixelsResp
	(*SelectedImagePixelsWriteReq)(nil),              // 206: SelectedImagePixelsWriteReq
	(*SelectedImagePixelsWriteResp)(nil),             // 207: SelectedImagePixelsWriteResp
	(*SelectedScanEntriesReq)(nil),                   // 208: SelectedScanEntriesReq
	(*SelectedScanEntriesResp)(nil),                  // 209: SelectedScanEntriesResp
	(*SelectedScanEntriesWriteReq)(nil),              // 210: SelectedScanEntriesWriteReq
	(*SelectedScanEntriesWriteResp)(nil),             // 211: SelectedScanEntriesWriteResp
	(*SendUserNotificationReq)(nil),                  // 212: SendUserNotificationReq
	(*SendUserNotificationResp)(nil),                 // 213: SendUserNotificationResp
	(*SpectrumReq)(nil),                              // 214: SpectrumReq
	(*SpectrumResp)(nil),                             // 215: SpectrumResp
	(*TagCreateReq)(nil),                             // 216: TagCreateReq
	(*TagCreateResp)(nil),                            // 217: TagCreateResp
	(*TagDeleteReq)(nil),                             // 218: TagDeleteReq
	(*TagDeleteResp)(nil),                            // 219: TagDeleteResp
	(*TagListReq)(nil),                               // 220: TagListReq
	(*TagListResp)(nil),                              // 221: TagListResp
	(*UserAddRoleReq)(nil),                           // 222: UserAddRoleReq
	(*UserAddRoleResp)(nil),                          // 223: UserAddRoleResp
	(*UserDeleteRoleReq)(nil),                        // 224: UserDeleteRoleReq
	(*UserDeleteRoleResp)(nil),                       // 225: UserDeleteRoleResp
	(*UserDetailsReq)(nil),                           // 226: UserDetailsReq
	(*UserDetailsResp)(nil),                          // 227: UserDetailsResp
	(*UserDetailsWriteReq)(nil),                      // 228: UserDetailsWriteReq
	(*UserDetailsWriteResp)(nil),                     // 229: UserDetailsWriteResp
	(*UserGroupAddAdminReq)(nil),                     // 230: UserGroupAddAdminReq
	(*UserGroupAddAdminResp)(nil),                    // 231: UserGroupAddAdminResp
	(*UserGroupAddMemberReq)(nil),                    // 232: UserGroupAddMemberReq
	(*UserGroupAddMemberResp)(nil),                   // 233: UserGroupAddMemberResp
	(*UserGroupAddViewerReq)(nil),                    // 234: UserGroupAddViewerReq
	(*UserGroupAddViewerResp)(nil),                   // 235: UserGroupAddViewerResp
	(*UserGroupCreateReq)(nil),                       // 236: UserGroupCreateReq
	(*UserGroupCreateResp)(nil),                      // 237: UserGroupCreateResp
	(*UserGroupDeleteAdminReq)(nil),                  // 238: UserGroupDeleteAdminReq
	(*UserGroupDeleteAdminResp)(nil),                 // 239: UserGroupDeleteAdminResp
	(*UserGroupDeleteMemberReq)(nil),                 // 240: UserGroupDeleteMemberReq
	(*UserGroupDeleteMemberResp)(nil),                // 241: UserGroupDeleteMemberResp
	(*UserGroupDeleteReq)(nil),                       // 242: UserGroupDeleteReq
	(*UserGroupDeleteResp)(nil),                      // 243: UserGroupDeleteResp
	(*UserGroupDeleteViewerReq)(nil),                 // 244: UserGroupDeleteViewerReq
	(*UserGroupDeleteViewerResp)(nil),                // 245: UserGroupDeleteViewerResp
	(*UserGroupEditDetailsReq)(nil),                  // 246: UserGroupEditDetailsReq
	(*UserGroupEditDetailsResp)(nil),                 // 247: UserGroupEditDetailsResp
	(*UserGroupIgnoreJoinReq)(nil),                   // 248: UserGroupIgnoreJoinReq
	(*UserGroupIgnoreJoinResp)(nil),                  // 249: UserGroupIgnoreJoinResp
	(*UserGroupJoinListReq)(nil),                     // 250: UserGroupJoinListReq
	(*UserGroupJoinListResp)(nil),                    // 251: UserGroupJoinListResp
	(*UserGroupJoinReq)(nil),                         // 252: UserGroupJoinReq
	(*UserGroupJoinResp)(nil),                        // 253: UserGroupJoinResp
	(*UserGroupListJoinableReq)(nil),                 // 254: UserGroupListJoinableReq
	(*UserGroupListJoinableResp)(nil),                // 255: UserGroupListJoinableResp
	(*UserGroupListReq)(nil),                         // 256: UserGroupListReq
	(*UserGroupListResp)(nil),                        // 257: UserGroupListResp
	(*UserGroupReq)(nil),                             // 258: UserGroupReq
	(*UserGroupResp)(nil),                            // 259: UserGroupResp
	(*UserListReq)(nil),                              // 260: UserListReq
	(*UserListResp)(nil),                             // 261: UserListResp
	(*UserNotificationSettingsReq)(nil),              // 262: UserNotificationSettingsReq
	(*UserNotificationSettingsResp)(nil),             // 263: UserNotificationSettingsResp
	(*UserNotificationSettingsUpd)(nil),              // 264: UserNotificationSettingsUpd
	(*UserNotificationSettingsWriteReq)(nil),         // 265: UserNotificationSettingsWriteReq
	(*UserNotificationSettingsWriteResp)(nil),        // 266: UserNotificationSettingsWriteResp
	(*UserRoleListReq)(nil),                          // 267: UserRoleListReq
	(*UserRoleListResp)(nil),                         // 268: UserRoleListResp
	(*UserRolesListReq)(nil),                         // 269: UserRolesListReq
	(*UserRolesListResp)(nil),                        // 270: UserRolesListResp
	(*UserSearchReq)(nil),                            // 271: UserSearchReq
	(*UserSearchResp)(nil),                           // 272: UserSearchResp
	(*WidgetDataGetReq)(nil),                         // 273: WidgetDataGetReq
	(*WidgetDataGetResp)(nil),                        // 274: WidgetDataGetResp
	(*WidgetDataWriteReq)(nil),                       // 275: WidgetDataWriteReq
	(*WidgetDataWriteResp)(nil),                      // 276: WidgetDataWriteResp
	(*ZenodoDOIGetReq)(nil),                          // 277: ZenodoDOIGetReq
	(*ZenodoDOIGetResp)(nil),                         // 278: ZenodoDOIGetResp
}
var file_websocket_proto_depIdxs = []int32{
	0,   // 0: WSMessage.status:type_name -> ResponseStatus
	2,   // 1: WSMessage.dataModuleAddVersionReq:type_name -> DataModuleAddVersionReq
	3,   // 2: WSMessage.dataModuleAddVersionResp:type_name -> DataModuleAddVersionResp
	4,   // 3: WSMessage.dataModuleGetReq:type_name -> DataModuleGetReq
	5,   // 4: WSMessage.dataModuleGetResp:type_name -> DataModuleGetResp
	6,   // 5: WSMessage.dataModuleListReq:type_name -> DataModuleListReq
	7,   // 6: WSMessage.dataModuleListResp:type_name -> DataModuleListResp
	8,   // 7: WSMessage.dataModuleWriteReq:type_name -> DataModuleWriteReq
	9,   // 8: WSMessage.dataModuleWriteResp:type_name -> DataModuleWriteResp
	10,  // 9: WSMessage.detectedDiffractionPeaksReq:type_name -> DetectedDiffractionPeaksReq
	11,  // 10: WSMessage.detectedDiffractionPeaksResp:type_name -> DetectedDiffractionPeaksResp
	12,  // 11: WSMessage.detectorConfigListReq:type_name -> DetectorConfigListReq
	13,  // 12: WSMessage.detectorConfigListResp:type_name -> DetectorConfigListResp
	14,  // 13: WSMessage.detectorConfigReq:type_name -> DetectorConfigReq
	15,  // 14: WSMessage.detectorConfigResp:type_name -> DetectorConfigResp
	16,  // 15: WSMessage.diffractionPeakManualDeleteReq:type_name -> DiffractionPeakManualDeleteReq
	17,  // 16: WSMessage.diffractionPeakManualDeleteResp:type_name -> DiffractionPeakManualDeleteResp
	18,  // 17: WSMessage.diffractionPeakManualInsertReq:type_name -> DiffractionPeakManualInsertReq
	19,  // 18: WSMessage.diffractionPeakManualInsertResp:type_name -> DiffractionPeakManualInsertResp
	20,  // 19: WSMessage.diffractionPeakManualListReq:type_name -> DiffractionPeakManualListReq
	21,  // 20: WSMessage.diffractionPeakManualListResp:type_name -> DiffractionPeakManualListResp
	22,  // 21: WSMessage.diffractionPeakStatusDeleteReq:type_name -> DiffractionPeakStatusDeleteReq
	23,  // 22: WSMessage.diffractionPeakStatusDeleteResp:type_name -> DiffractionPeakStatusDeleteResp
	24,  // 23: WSMessage.diffractionPeakStatusListReq:type_name -> DiffractionPeakStatusListReq
	25,  // 24: WSMessage.diffractionPeakStatusListResp:type_name -> DiffractionPeakStatusListResp
	26,  // 25: WSMessage.diffractionPeakStatusWriteReq:type_name -> DiffractionPeakStatusWriteReq
	27,  // 26: WSMessage.diffractionPeakStatusWriteResp:type_name -> DiffractionPeakStatusWriteResp
	28,  // 27: WSMessage.elementSetDeleteReq:type_name -> ElementSetDeleteReq
	29,  // 28: WSMessage.elementSetDeleteResp:type_name -> ElementSetDeleteResp
	30,  // 29: WSMessage.elementSetGetReq:type_name -> ElementSetGetReq
	31,  // 30: WSMessage.elementSetGetResp:type_name -> ElementSetGetResp
	32,  // 31: WSMessage.elementSetListReq:type_name -> ElementSetListReq
	33,  // 32: WSMessage.elementSetListResp:type_name -> ElementSetListResp
	34,  // 33: WSMessage.elementSetWriteReq:type_name -> ElementSetWriteReq
	35,  // 34: WSMessage.elementSetWriteResp:type_name -> ElementSetWriteResp
	36,  // 35: WSMessage.exportFilesReq:type_name -> ExportFilesReq
	37,  // 36: WSMessage.exportFilesResp:type_name -> ExportFilesResp
	38,  // 37: WSMessage.expressionDeleteReq:type_name -> ExpressionDeleteReq
	39,  // 38: WSMessage.expressionDeleteResp:type_name -> ExpressionDeleteResp
	40,  // 39: WSMessage.expressionDisplaySettingsGetReq:type_name -> ExpressionDisplaySettingsGetReq
	41,  // 40: WSMessage.expressionDisplaySettingsGetResp:type_name -> ExpressionDisplaySettingsGetResp
	42,  // 41: WSMessage.expressionDisplaySettingsWriteReq:type_name -> ExpressionDisplaySettingsWriteReq
	43,  // 42: WSMessage.expressionDisplaySettingsWriteResp:type_name -> ExpressionDisplaySettingsWriteResp
	44,  // 43: WSMessage.expressionGetReq:type_name -> ExpressionGetReq
	45,  // 44: WSMessage.expressionGetResp:type_name -> ExpressionGetResp
	46,  // 45: WSMessage.expressionGroupDeleteReq:type_name -> ExpressionGroupDeleteReq
	47,  // 46: WSMessage.expressionGroupDeleteResp:type_name -> ExpressionGroupDeleteResp
	48,  // 47: WSMessage.expressionGroupGetReq:type_name -> ExpressionGroupGetReq
	49,  // 48: WSMessage.expressionGroupGetResp:type_name -> ExpressionGroupGetResp
	50,  // 49: WSMessage.expressionGroupListReq:type_name -> ExpressionGroupListReq
	51,  // 50: WSMessage.expressionGroupListResp:type_name -> ExpressionGroupListResp
	52,  // 51: WSMessage.expressionGroupWriteReq:type_name -> ExpressionGroupWriteReq
	53,  // 52: WSMessage.expressionGroupWriteResp:type_name -> ExpressionGroupWriteResp
	54,  // 53: WSMessage.expressionListReq:type_name -> ExpressionListReq
	55,  // 54: WSMessage.expressionListResp:type_name -> ExpressionListResp
	56,  // 55: WSMessage.expressionWriteExecStatReq:type_name -> ExpressionWriteExecStatReq
	57,  // 56: WSMessage.expressionWriteExecStatResp:type_name -> ExpressionWriteExecStatResp
	58,  // 57: WSMessage.expressionWriteReq:type_name -> ExpressionWriteReq
	59,  // 58: WSMessage.expressionWriteResp:type_name -> ExpressionWriteResp
	60,  // 59: WSMessage.getOwnershipReq:type_name -> GetOwnershipReq
	61,  // 60: WSMessage.getOwnershipResp:type_name -> GetOwnershipResp
	62,  // 61: WSMessage.imageBeamLocationVersionsReq:type_name -> ImageBeamLocationVersionsReq
	63,  // 62: WSMessage.imageBeamLocationVersionsResp:type_name -> ImageBeamLocationVersionsResp
	64,  // 63: WSMessage.imageBeamLocationsReq:type_name -> ImageBeamLocationsReq
	65,  // 64: WSMessage.imageBeamLocationsResp:type_name -> ImageBeamLocationsResp
	66,  // 65: WSMessage.imageDeleteReq:type_name -> ImageDeleteReq
	67,  // 66: WSMessage.imageDeleteResp:type_name -> ImageDeleteResp
	68,  // 67: WSMessage.imageGetDefaultReq:type_name -> ImageGetDefaultReq
	69,  // 68: WSMessage.imageGetDefaultResp:type_name -> ImageGetDefaultResp
	70,  // 69: WSMessage.imageGetReq:type_name -> ImageGetReq
	71,  // 70: WSMessage.imageGetResp:type_name -> ImageGetResp
	72,  // 71: WSMessage.imageListReq:type_name -> ImageListReq
	73,  // 72: WSMessage.imageListResp:type_name -> ImageListResp
	74,  // 73: WSMessage.imageListUpd:type_name -> ImageListUpd
	75,  // 74: WSMessage.imageSetDefaultReq:type_name -> ImageSetDefaultReq
	76,  // 75: WSMessage.imageSetDefaultResp:type_name -> ImageSetDefaultResp
	77,  // 76: WSMessage.imageSetMatchTransformReq:type_name -> ImageSetMatchTransformReq
	78,  // 77: WSMessage.imageSetMatchTransformResp:type_name -> ImageSetMatchTransformResp
	79,  // 78: WSMessage.importMarsViewerImageReq:type_name -> ImportMarsViewerImageReq
	80,  // 79: WSMessage.importMarsViewerImageResp:type_name -> ImportMarsViewerImageResp
	81,  // 80: WSMessage.importMarsViewerImageUpd:type_name -> ImportMarsViewerImageUpd
	82,  // 81: WSMessage.jobListReq:type_name -> JobListReq
	83,  // 82: WSMessage.jobListResp:type_name -> JobListResp
	84,  // 83: WSMessage.jobListUpd:type_name -> JobListUpd
	85,  // 84: WSMessage.logGetLevelReq:type_name -> LogGetLevelReq
	86,  // 85: WSMessage.logGetLevelResp:type_name -> LogGetLevelResp
	87,  // 86: WSMessage.logReadReq:type_name -> LogReadReq
	88,  // 87: WSMessage.logReadResp:type_name -> LogReadResp
	89,  // 88: WSMessage.logSetLevelReq:type_name -> LogSetLevelReq
	90,  // 89: WSMessage.logSetLevelResp:type_name -> LogSetLevelResp
	91,  // 90: WSMessage.memoiseGetReq:type_name -> MemoiseGetReq
	92,  // 91: WSMessage.memoiseGetResp:type_name -> MemoiseGetResp
	93,  // 92: WSMessage.memoiseWriteReq:type_name -> MemoiseWriteReq
	94,  // 93: WSMessage.memoiseWriteResp:type_name -> MemoiseWriteResp
	95,  // 94: WSMessage.multiQuantCompareReq:type_name -> MultiQuantCompareReq
	96,  // 95: WSMessage.multiQuantCompareResp:type_name -> MultiQuantCompareResp
	97,  // 96: WSMessage.notificationDismissReq:type_name -> NotificationDismissReq
	98,  // 97: WSMessage.notificationDismissResp:type_name -> NotificationDismissResp
	99,  // 98: WSMessage.notificationReq:type_name -> NotificationReq
	100, // 99: WSMessage.notificationResp:type_name -> NotificationResp
	101, // 100: WSMessage.notificationUpd:type_name -> NotificationUpd
	102, // 101: WSMessage.objectEditAccessReq:type_name -> ObjectEditAccessReq
	103, // 102: WSMessage.objectEditAccessResp:type_name -> ObjectEditAccessResp
	104, // 103: WSMessage.piquantConfigListReq:type_name -> PiquantConfigListReq
	105, // 104: WSMessage.piquantConfigListResp:type_name -> PiquantConfigListResp
	106, // 105: WSMessage.piquantConfigVersionReq:type_name -> PiquantConfigVersionReq
	107, // 106: WSMessage.piquantConfigVersionResp:type_name -> PiquantConfigVersionResp
	108, // 107: WSMessage.piquantConfigVersionsListReq:type_name -> PiquantConfigVersionsListReq
	109, // 108: WSMessage.piquantConfigVersionsListResp:type_name -> PiquantConfigVersionsListResp
	110, // 109: WSMessage.piquantCurrentVersionReq:type_name -> PiquantCurrentVersionReq
	111, // 110: WSMessage.piquantCurrentVersionResp:type_name -> PiquantCurrentVersionResp
	112, // 111: WSMessage.piquantVersionListReq:type_name -> PiquantVersionListReq
	113, // 112: WSMessage.piquantVersionListResp:type_name -> PiquantVersionListResp
	114, // 113: WSMessage.piquantWriteCurrentVersionReq:type_name -> PiquantWriteCurrentVersionReq
	115, // 114: WSMessage.piquantWriteCurrentVersionResp:type_name -> PiquantWriteCurrentVersionResp
	116, // 115: WSMessage.pseudoIntensityReq:type_name -> PseudoIntensityReq
	117, // 116: WSMessage.pseudoIntensityResp:type_name -> PseudoIntensityResp
	118, // 117: WSMessage.publishExpressionToZenodoReq:type_name -> PublishExpressionToZenodoReq
	119, // 118: WSMessage.publishExpressionToZenodoResp:type_name -> PublishExpressionToZenodoResp
	120, // 119: WSMessage.quantBlessReq:type_name -> QuantBlessReq
	121, // 120: WSMessage.quantBlessResp:type_name -> QuantBlessResp
	122, // 121: WSMessage.quantCombineListGetReq:type_name -> QuantCombineListGetReq
	123, // 122: WSMessage.quantCombineListGetResp:type_name -> QuantCombineListGetResp
	124, // 123: WSMessage.quantCombineListWriteReq:type_name -> QuantCombineListWriteReq
	125, // 124: WSMessage.quantCombineListWriteResp:type_name -> QuantCombineListWriteResp
	126, // 125: WSMessage.quantCombineReq:type_name -> QuantCombineReq
	127, // 126: WSMessage.quantCombineResp:type_name -> QuantCombineResp
	128, // 127: WSMessage.quantCreateReq:type_name -> QuantCreateReq
	129, // 128: WSMessage.quantCreateResp:type_name -> QuantCreateResp
	130, // 129: WSMessage.quantCreateUpd:type_name -> QuantCreateUpd
	131, // 130: WSMessage.quantDeleteReq:type_name -> QuantDeleteReq
	132, // 131: WSMessage.quantDeleteResp:type_name -> QuantDeleteResp
	133, // 132: WSMessage.quantGetReq:type_name -> QuantGetReq
	134, // 133: WSMessage.quantGetResp:type_name -> QuantGetResp
	135, // 134: WSMessage.quantLastOutputGetReq:type_name -> QuantLastOutputGetReq
	136, // 135: WSMessage.quantLastOutputGetResp:type_name -> QuantLastOutputGetResp
	137, // 136: WSMessage.quantListReq:type_name -> QuantListReq
	138, // 137: WSMessage.quantListResp:type_name -> QuantListResp
	139, // 138: WSMessage.quantLogGetReq:type_name -> QuantLogGetReq
	140, // 139: WSMessage.quantLogGetResp:type_name -> QuantLogGetResp
	141, // 140: WSMessage.quantLogListReq:type_name -> QuantLogListReq
	142, // 141: WSMessage.quantLogListResp:type_name -> QuantLogListResp
	143, // 142: WSMessage.quantPublishReq:type_name -> QuantPublishReq
	144, // 143: WSMessage.quantPublishResp:type_name -> QuantPublishResp
	145, // 144: WSMessage.quantRawDataGetReq:type_name -> QuantRawDataGetReq
	146, // 145: WSMessage.quantRawDataGetResp:type_name -> QuantRawDataGetResp
	147, // 146: WSMessage.quantUploadReq:type_name -> QuantUploadReq
	148, // 147: WSMessage.quantUploadResp:type_name -> QuantUploadResp
	149, // 148: WSMessage.regionOfInterestBulkDuplicateReq:type_name -> RegionOfInterestBulkDuplicateReq
	150, // 149: WSMessage.regionOfInterestBulkDuplicateResp:type_name -> RegionOfInterestBulkDuplicateResp
	151, // 150: WSMessage.regionOfInterestBulkWriteReq:type_name -> RegionOfInterestBulkWriteReq
	152, // 151: WSMessage.regionOfInterestBulkWriteResp:type_name -> RegionOfInterestBulkWriteResp
	153, // 152: WSMessage.regionOfInterestDeleteReq:type_name -> RegionOfInterestDeleteReq
	154, // 153: WSMessage.regionOfInterestDeleteResp:type_name -> RegionOfInterestDeleteResp
	155, // 154: WSMessage.regionOfInterestDisplaySettingsGetReq:type_name -> RegionOfInterestDisplaySettingsGetReq
	156, // 155: WSMessage.regionOfInterestDisplaySettingsGetResp:type_name -> RegionOfInterestDisplaySettingsGetResp
	157, // 156: WSMessage.regionOfInterestDisplaySettingsWriteReq:type_name -> RegionOfInterestDisplaySettingsWriteReq
	158, // 157: WSMessage.regionOfInterestDisplaySettingsWriteResp:type_name -> RegionOfInterestDisplaySettingsWriteResp
	159, // 158: WSMessage.regionOfInterestGetReq:type_name -> RegionOfInterestGetReq
	160, // 159: WSMessage.regionOfInterestGetResp:type_name -> RegionOfInterestGetResp
	161, // 160: WSMessage.regionOfInterestListReq:type_name -> RegionOfInterestListReq
	162, // 161: WSMessage.regionOfInterestListResp:type_name -> RegionOfInterestListResp
	163, // 162: WSMessage.regionOfInterestWriteReq:type_name -> RegionOfInterestWriteReq
	164, // 163: WSMessage.regionOfInterestWriteResp:type_name -> RegionOfInterestWriteResp
	165, // 164: WSMessage.runTestReq:type_name -> RunTestReq
	166, // 165: WSMessage.runTestResp:type_name -> RunTestResp
	167, // 166: WSMessage.scanAutoShareReq:type_name -> ScanAutoShareReq
	168, // 167: WSMessage.scanAutoShareResp:type_name -> ScanAutoShareResp
	169, // 168: WSMessage.scanAutoShareWriteReq:type_name -> ScanAutoShareWriteReq
	170, // 169: WSMessage.scanAutoShareWriteResp:type_name -> ScanAutoShareWriteResp
	171, // 170: WSMessage.scanBeamLocationsReq:type_name -> ScanBeamLocationsReq
	172, // 171: WSMessage.scanBeamLocationsResp:type_name -> ScanBeamLocationsResp
	173, // 172: WSMessage.scanDeleteReq:type_name -> ScanDeleteReq
	174, // 173: WSMessage.scanDeleteResp:type_name -> ScanDeleteResp
	175, // 174: WSMessage.scanEntryMetadataReq:type_name -> ScanEntryMetadataReq
	176, // 175: WSMessage.scanEntryMetadataResp:type_name -> ScanEntryMetadataResp
	177, // 176: WSMessage.scanEntryReq:type_name -> ScanEntryReq
	178, // 177: WSMessage.scanEntryResp:type_name -> ScanEntryResp
	179, // 178: WSMessage.scanGetReq:type_name -> ScanGetReq
	180, // 179: WSMessage.scanGetResp:type_name -> ScanGetResp
	181, // 180: WSMessage.scanListReq:type_name -> ScanListReq
	182, // 181: WSMessage.scanListResp:type_name -> ScanListResp
	183, // 182: WSMessage.scanListUpd:type_name -> ScanListUpd
	184, // 183: WSMessage.scanMetaLabelsAndTypesReq:type_name -> ScanMetaLabelsAndTypesReq
	185, // 184: WSMessage.scanMetaLabelsAndTypesResp:type_name -> ScanMetaLabelsAndTypesResp
	186, // 185: WSMessage.scanMetaWriteReq:type_name -> ScanMetaWriteReq
	187, // 186: WSMessage.scanMetaWriteResp:type_name -> ScanMetaWriteResp
	188, // 187: WSMessage.scanTriggerAutoQuantReq:type_name -> ScanTriggerAutoQuantReq
	189, // 188: WSMessage.scanTriggerAutoQuantResp:type_name -> ScanTriggerAutoQuantResp
	190, // 189: WSMessage.scanTriggerReImportReq:type_name -> ScanTriggerReImportReq
	191, // 190: WSMessage.scanTriggerReImportResp:type_name -> ScanTriggerReImportResp
	192, // 191: WSMessage.scanTriggerReImportUpd:type_name -> ScanTriggerReImportUpd
	193, // 192: WSMessage.scanUploadReq:type_name -> ScanUploadReq
	194, // 193: WSMessage.scanUploadResp:type_name -> ScanUploadResp
	195, // 194: WSMessage.scanUploadUpd:type_name -> ScanUploadUpd
	196, // 195: WSMessage.screenConfigurationDeleteReq:type_name -> ScreenConfigurationDeleteReq
	197, // 196: WSMessage.screenConfigurationDeleteResp:type_name -> ScreenConfigurationDeleteResp
	198, // 197: WSMessage.screenConfigurationGetReq:type_name -> ScreenConfigurationGetReq
	199, // 198: WSMessage.screenConfigurationGetResp:type_name -> ScreenConfigurationGetResp
	200, // 199: WSMessage.screenConfigurationListReq:type_name -> ScreenConfigurationListReq
	201, // 200: WSMessage.screenConfigurationListResp:type_name -> ScreenConfigurationListResp
	202, // 201: WSMessage.screenConfigurationWriteReq:type_name -> ScreenConfigurationWriteReq
	203, // 202: WSMessage.screenConfigurationWriteResp:type_name -> ScreenConfigurationWriteResp
	204, // 203: WSMessage.selectedImagePixelsReq:type_name -> SelectedImagePixelsReq
	205, // 204: WSMessage.selectedImagePixelsResp:type_name -> SelectedImagePixelsResp
	206, // 205: WSMessage.selectedImagePixelsWriteReq:type_name -> SelectedImagePixelsWriteReq
	207, // 206: WSMessage.selectedImagePixelsWriteResp:type_name -> SelectedImagePixelsWriteResp
	208, // 207: WSMessage.selectedScanEntriesReq:type_name -> SelectedScanEntriesReq
	209, // 208: WSMessage.selectedScanEntriesResp:type_name -> SelectedScanEntriesResp
	210, // 209: WSMessage.selectedScanEntriesWriteReq:type_name -> SelectedScanEntriesWriteReq
	211, // 210: WSMessage.selectedScanEntriesWriteResp:type_name -> SelectedScanEntriesWriteResp
	212, // 211: WSMessage.sendUserNotificationReq:type_name -> SendUserNotificationReq
	213, // 212: WSMessage.sendUserNotificationResp:type_name -> SendUserNotificationResp
	214, // 213: WSMessage.spectrumReq:type_name -> SpectrumReq
	215, // 214: WSMessage.spectrumResp:type_name -> SpectrumResp
	216, // 215: WSMessage.tagCreateReq:type_name -> TagCreateReq
	217, // 216: WSMessage.tagCreateResp:type_name -> TagCreateResp
	218, // 217: WSMessage.tagDeleteReq:type_name -> TagDeleteReq
	219, // 218: WSMessage.tagDeleteResp:type_name -> TagDeleteResp
	220, // 219: WSMessage.tagListReq:type_name -> TagListReq
	221, // 220: WSMessage.tagListResp:type_name -> TagListResp
	222, // 221: WSMessage.userAddRoleReq:type_name -> UserAddRoleReq
	223, // 222: WSMessage.userAddRoleResp:type_name -> UserAddRoleResp
	224, // 223: WSMessage.userDeleteRoleReq:type_name -> UserDeleteRoleReq
	225, // 224: WSMessage.userDeleteRoleResp:type_name -> UserDeleteRoleResp
	226, // 225: WSMessage.userDetailsReq:type_name -> UserDetailsReq
	227, // 226: WSMessage.userDetailsResp:type_name -> UserDetailsResp
	228, // 227: WSMessage.userDetailsWriteReq:type_name -> UserDetailsWriteReq
	229, // 228: WSMessage.userDetailsWriteResp:type_name -> UserDetailsWriteResp
	230, // 229: WSMessage.userGroupAddAdminReq:type_name -> UserGroupAddAdminReq
	231, // 230: WSMessage.userGroupAddAdminResp:type_name -> UserGroupAddAdminResp
	232, // 231: WSMessage.userGroupAddMemberReq:type_name -> UserGroupAddMemberReq
	233, // 232: WSMessage.userGroupAddMemberResp:type_name -> UserGroupAddMemberResp
	234, // 233: WSMessage.userGroupAddViewerReq:type_name -> UserGroupAddViewerReq
	235, // 234: WSMessage.userGroupAddViewerResp:type_name -> UserGroupAddViewerResp
	236, // 235: WSMessage.userGroupCreateReq:type_name -> UserGroupCreateReq
	237, // 236: WSMessage.userGroupCreateResp:type_name -> UserGroupCreateResp
	238, // 237: WSMessage.userGroupDeleteAdminReq:type_name -> UserGroupDeleteAdminReq
	239, // 238: WSMessage.userGroupDeleteAdminResp:type_name -> UserGroupDeleteAdminResp
	240, // 239: WSMessage.userGroupDeleteMemberReq:type_name -> UserGroupDeleteMemberReq
	241, // 240: WSMessage.userGroupDeleteMemberResp:type_name -> UserGroupDeleteMemberResp
	242, // 241: WSMessage.userGroupDeleteReq:type_name -> UserGroupDeleteReq
	243, // 242: WSMessage.userGroupDeleteResp:type_name -> UserGroupDeleteResp
	244, // 243: WSMessage.userGroupDeleteViewerReq:type_name -> UserGroupDeleteViewerReq
	245, // 244: WSMessage.userGroupDeleteViewerResp:type_name -> UserGroupDeleteViewerResp
	246, // 245: WSMessage.userGroupEditDetailsReq:type_name -> UserGroupEditDetailsReq
	247, // 246: WSMessage.userGroupEditDetailsResp:type_name -> UserGroupEditDetailsResp
	248, // 247: WSMessage.userGroupIgnoreJoinReq:type_name -> UserGroupIgnoreJoinReq
	249, // 248: WSMessage.userGroupIgnoreJoinResp:type_name -> UserGroupIgnoreJoinResp
	250, // 249: WSMessage.userGroupJoinListReq:type_name -> UserGroupJoinListReq
	251, // 250: WSMessage.userGroupJoinListResp:type_name -> UserGroupJoinListResp
	252, // 251: WSMessage.userGroupJoinReq:type_name -> UserGroupJoinReq
	253, // 252: WSMessage.userGroupJoinResp:type_name -> UserGroupJoinResp
	254, // 253: WSMessage.userGroupListJoinableReq:type_name -> UserGroupListJoinableReq
	255, // 254: WSMessage.userGroupListJoinableResp:type_name -> UserGroupListJoinableResp
	256, // 255: WSMessage.userGroupListReq:type_name -> UserGroupListReq
	257, // 256: WSMessage.userGroupListResp:type_name -> UserGroupListResp
	258, // 257: WSMessage.userGroupReq:type_name -> UserGroupReq
	259, // 258: WSMessage.userGroupResp:type_name -> UserGroupResp
	260, // 259: WSMessage.userListReq:type_name -> UserListReq
	261, // 260: WSMessage.userListResp:type_name -> UserListResp
	262, // 261: WSMessage.userNotificationSettingsReq:type_name -> UserNotificationSettingsReq
	263, // 262: WSMessage.userNotificationSettingsResp:type_name -> UserNotificationSettingsResp
	264, // 263: WSMessage.userNotificationSettingsUpd:type_name -> UserNotificationSettingsUpd
	265, // 264: WSMessage.userNotificationSettingsWriteReq:type_name -> UserNotificationSettingsWriteReq
	266, // 265: WSMessage.userNotificationSettingsWriteResp:type_name -> UserNotificationSettingsWriteResp
	267, // 266: WSMessage.userRoleListReq:type_name -> UserRoleListReq
	268, // 267: WSMessage.userRoleListResp:type_name -> UserRoleListResp
	269, // 268: WSMessage.userRolesListReq:type_name -> UserRolesListReq
	270, // 269: WSMessage.userRolesListResp:type_name -> UserRolesListResp
	271, // 270: WSMessage.userSearchReq:type_name -> UserSearchReq
	272, // 271: WSMessage.userSearchResp:type_name -> UserSearchResp
	273, // 272: WSMessage.widgetDataGetReq:type_name -> WidgetDataGetReq
	274, // 273: WSMessage.widgetDataGetResp:type_name -> WidgetDataGetResp
	275, // 274: WSMessage.widgetDataWriteReq:type_name -> WidgetDataWriteReq
	276, // 275: WSMessage.widgetDataWriteResp:type_name -> WidgetDataWriteResp
	277, // 276: WSMessage.zenodoDOIGetReq:type_name -> ZenodoDOIGetReq
	278, // 277: WSMessage.zenodoDOIGetResp:type_name -> ZenodoDOIGetResp
	278, // [278:278] is the sub-list for method output_type
	278, // [278:278] is the sub-list for method input_type
	278, // [278:278] is the sub-list for extension type_name
	278, // [278:278] is the sub-list for extension extendee
	0,   // [0:278] is the sub-list for field type_name
}

func init() { file_websocket_proto_init() }
func file_websocket_proto_init() {
	if File_websocket_proto != nil {
		return
	}
	file_detector_config_msgs_proto_init()
	file_diffraction_detected_peak_msgs_proto_init()
	file_diffraction_manual_msgs_proto_init()
	file_diffraction_status_msgs_proto_init()
	file_element_set_msgs_proto_init()
	file_export_msgs_proto_init()
	file_expression_group_msgs_proto_init()
	file_expression_msgs_proto_init()
	file_image_beam_location_msgs_proto_init()
	file_image_msgs_proto_init()
	file_image_coreg_msgs_proto_init()
	file_job_msgs_proto_init()
	file_log_msgs_proto_init()
	file_memoisation_msgs_proto_init()
	file_module_msgs_proto_init()
	file_ownership_access_msgs_proto_init()
	file_piquant_msgs_proto_init()
	file_pseudo_intensities_msgs_proto_init()
	file_quantification_create_proto_init()
	file_quantification_management_msgs_proto_init()
	file_quantification_multi_msgs_proto_init()
	file_quantification_retrieval_msgs_proto_init()
	file_quantification_upload_msgs_proto_init()
	file_roi_msgs_proto_init()
	file_scan_beam_location_msgs_proto_init()
	file_scan_entry_metadata_msgs_proto_init()
	file_scan_entry_msgs_proto_init()
	file_scan_msgs_proto_init()
	file_selection_pixel_msgs_proto_init()
	file_selection_entry_msgs_proto_init()
	file_spectrum_msgs_proto_init()
	file_notification_msgs_proto_init()
	file_tag_msgs_proto_init()
	file_test_msgs_proto_init()
	file_user_group_management_msgs_proto_init()
	file_user_group_admins_msgs_proto_init()
	file_user_group_joining_msgs_proto_init()
	file_user_group_membership_msgs_proto_init()
	file_user_group_retrieval_msgs_proto_init()
	file_user_management_msgs_proto_init()
	file_user_msgs_proto_init()
	file_user_notification_setting_msgs_proto_init()
	file_doi_msgs_proto_init()
	file_screen_configuration_msgs_proto_init()
	file_widget_data_msgs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_websocket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_websocket_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WSMessage_DataModuleAddVersionReq)(nil),
		(*WSMessage_DataModuleAddVersionResp)(nil),
		(*WSMessage_DataModuleGetReq)(nil),
		(*WSMessage_DataModuleGetResp)(nil),
		(*WSMessage_DataModuleListReq)(nil),
		(*WSMessage_DataModuleListResp)(nil),
		(*WSMessage_DataModuleWriteReq)(nil),
		(*WSMessage_DataModuleWriteResp)(nil),
		(*WSMessage_DetectedDiffractionPeaksReq)(nil),
		(*WSMessage_DetectedDiffractionPeaksResp)(nil),
		(*WSMessage_DetectorConfigListReq)(nil),
		(*WSMessage_DetectorConfigListResp)(nil),
		(*WSMessage_DetectorConfigReq)(nil),
		(*WSMessage_DetectorConfigResp)(nil),
		(*WSMessage_DiffractionPeakManualDeleteReq)(nil),
		(*WSMessage_DiffractionPeakManualDeleteResp)(nil),
		(*WSMessage_DiffractionPeakManualInsertReq)(nil),
		(*WSMessage_DiffractionPeakManualInsertResp)(nil),
		(*WSMessage_DiffractionPeakManualListReq)(nil),
		(*WSMessage_DiffractionPeakManualListResp)(nil),
		(*WSMessage_DiffractionPeakStatusDeleteReq)(nil),
		(*WSMessage_DiffractionPeakStatusDeleteResp)(nil),
		(*WSMessage_DiffractionPeakStatusListReq)(nil),
		(*WSMessage_DiffractionPeakStatusListResp)(nil),
		(*WSMessage_DiffractionPeakStatusWriteReq)(nil),
		(*WSMessage_DiffractionPeakStatusWriteResp)(nil),
		(*WSMessage_ElementSetDeleteReq)(nil),
		(*WSMessage_ElementSetDeleteResp)(nil),
		(*WSMessage_ElementSetGetReq)(nil),
		(*WSMessage_ElementSetGetResp)(nil),
		(*WSMessage_ElementSetListReq)(nil),
		(*WSMessage_ElementSetListResp)(nil),
		(*WSMessage_ElementSetWriteReq)(nil),
		(*WSMessage_ElementSetWriteResp)(nil),
		(*WSMessage_ExportFilesReq)(nil),
		(*WSMessage_ExportFilesResp)(nil),
		(*WSMessage_ExpressionDeleteReq)(nil),
		(*WSMessage_ExpressionDeleteResp)(nil),
		(*WSMessage_ExpressionDisplaySettingsGetReq)(nil),
		(*WSMessage_ExpressionDisplaySettingsGetResp)(nil),
		(*WSMessage_ExpressionDisplaySettingsWriteReq)(nil),
		(*WSMessage_ExpressionDisplaySettingsWriteResp)(nil),
		(*WSMessage_ExpressionGetReq)(nil),
		(*WSMessage_ExpressionGetResp)(nil),
		(*WSMessage_ExpressionGroupDeleteReq)(nil),
		(*WSMessage_ExpressionGroupDeleteResp)(nil),
		(*WSMessage_ExpressionGroupGetReq)(nil),
		(*WSMessage_ExpressionGroupGetResp)(nil),
		(*WSMessage_ExpressionGroupListReq)(nil),
		(*WSMessage_ExpressionGroupListResp)(nil),
		(*WSMessage_ExpressionGroupWriteReq)(nil),
		(*WSMessage_ExpressionGroupWriteResp)(nil),
		(*WSMessage_ExpressionListReq)(nil),
		(*WSMessage_ExpressionListResp)(nil),
		(*WSMessage_ExpressionWriteExecStatReq)(nil),
		(*WSMessage_ExpressionWriteExecStatResp)(nil),
		(*WSMessage_ExpressionWriteReq)(nil),
		(*WSMessage_ExpressionWriteResp)(nil),
		(*WSMessage_GetOwnershipReq)(nil),
		(*WSMessage_GetOwnershipResp)(nil),
		(*WSMessage_ImageBeamLocationVersionsReq)(nil),
		(*WSMessage_ImageBeamLocationVersionsResp)(nil),
		(*WSMessage_ImageBeamLocationsReq)(nil),
		(*WSMessage_ImageBeamLocationsResp)(nil),
		(*WSMessage_ImageDeleteReq)(nil),
		(*WSMessage_ImageDeleteResp)(nil),
		(*WSMessage_ImageGetDefaultReq)(nil),
		(*WSMessage_ImageGetDefaultResp)(nil),
		(*WSMessage_ImageGetReq)(nil),
		(*WSMessage_ImageGetResp)(nil),
		(*WSMessage_ImageListReq)(nil),
		(*WSMessage_ImageListResp)(nil),
		(*WSMessage_ImageListUpd)(nil),
		(*WSMessage_ImageSetDefaultReq)(nil),
		(*WSMessage_ImageSetDefaultResp)(nil),
		(*WSMessage_ImageSetMatchTransformReq)(nil),
		(*WSMessage_ImageSetMatchTransformResp)(nil),
		(*WSMessage_ImportMarsViewerImageReq)(nil),
		(*WSMessage_ImportMarsViewerImageResp)(nil),
		(*WSMessage_ImportMarsViewerImageUpd)(nil),
		(*WSMessage_JobListReq)(nil),
		(*WSMessage_JobListResp)(nil),
		(*WSMessage_JobListUpd)(nil),
		(*WSMessage_LogGetLevelReq)(nil),
		(*WSMessage_LogGetLevelResp)(nil),
		(*WSMessage_LogReadReq)(nil),
		(*WSMessage_LogReadResp)(nil),
		(*WSMessage_LogSetLevelReq)(nil),
		(*WSMessage_LogSetLevelResp)(nil),
		(*WSMessage_MemoiseGetReq)(nil),
		(*WSMessage_MemoiseGetResp)(nil),
		(*WSMessage_MemoiseWriteReq)(nil),
		(*WSMessage_MemoiseWriteResp)(nil),
		(*WSMessage_MultiQuantCompareReq)(nil),
		(*WSMessage_MultiQuantCompareResp)(nil),
		(*WSMessage_NotificationDismissReq)(nil),
		(*WSMessage_NotificationDismissResp)(nil),
		(*WSMessage_NotificationReq)(nil),
		(*WSMessage_NotificationResp)(nil),
		(*WSMessage_NotificationUpd)(nil),
		(*WSMessage_ObjectEditAccessReq)(nil),
		(*WSMessage_ObjectEditAccessResp)(nil),
		(*WSMessage_PiquantConfigListReq)(nil),
		(*WSMessage_PiquantConfigListResp)(nil),
		(*WSMessage_PiquantConfigVersionReq)(nil),
		(*WSMessage_PiquantConfigVersionResp)(nil),
		(*WSMessage_PiquantConfigVersionsListReq)(nil),
		(*WSMessage_PiquantConfigVersionsListResp)(nil),
		(*WSMessage_PiquantCurrentVersionReq)(nil),
		(*WSMessage_PiquantCurrentVersionResp)(nil),
		(*WSMessage_PiquantVersionListReq)(nil),
		(*WSMessage_PiquantVersionListResp)(nil),
		(*WSMessage_PiquantWriteCurrentVersionReq)(nil),
		(*WSMessage_PiquantWriteCurrentVersionResp)(nil),
		(*WSMessage_PseudoIntensityReq)(nil),
		(*WSMessage_PseudoIntensityResp)(nil),
		(*WSMessage_PublishExpressionToZenodoReq)(nil),
		(*WSMessage_PublishExpressionToZenodoResp)(nil),
		(*WSMessage_QuantBlessReq)(nil),
		(*WSMessage_QuantBlessResp)(nil),
		(*WSMessage_QuantCombineListGetReq)(nil),
		(*WSMessage_QuantCombineListGetResp)(nil),
		(*WSMessage_QuantCombineListWriteReq)(nil),
		(*WSMessage_QuantCombineListWriteResp)(nil),
		(*WSMessage_QuantCombineReq)(nil),
		(*WSMessage_QuantCombineResp)(nil),
		(*WSMessage_QuantCreateReq)(nil),
		(*WSMessage_QuantCreateResp)(nil),
		(*WSMessage_QuantCreateUpd)(nil),
		(*WSMessage_QuantDeleteReq)(nil),
		(*WSMessage_QuantDeleteResp)(nil),
		(*WSMessage_QuantGetReq)(nil),
		(*WSMessage_QuantGetResp)(nil),
		(*WSMessage_QuantLastOutputGetReq)(nil),
		(*WSMessage_QuantLastOutputGetResp)(nil),
		(*WSMessage_QuantListReq)(nil),
		(*WSMessage_QuantListResp)(nil),
		(*WSMessage_QuantLogGetReq)(nil),
		(*WSMessage_QuantLogGetResp)(nil),
		(*WSMessage_QuantLogListReq)(nil),
		(*WSMessage_QuantLogListResp)(nil),
		(*WSMessage_QuantPublishReq)(nil),
		(*WSMessage_QuantPublishResp)(nil),
		(*WSMessage_QuantRawDataGetReq)(nil),
		(*WSMessage_QuantRawDataGetResp)(nil),
		(*WSMessage_QuantUploadReq)(nil),
		(*WSMessage_QuantUploadResp)(nil),
		(*WSMessage_RegionOfInterestBulkDuplicateReq)(nil),
		(*WSMessage_RegionOfInterestBulkDuplicateResp)(nil),
		(*WSMessage_RegionOfInterestBulkWriteReq)(nil),
		(*WSMessage_RegionOfInterestBulkWriteResp)(nil),
		(*WSMessage_RegionOfInterestDeleteReq)(nil),
		(*WSMessage_RegionOfInterestDeleteResp)(nil),
		(*WSMessage_RegionOfInterestDisplaySettingsGetReq)(nil),
		(*WSMessage_RegionOfInterestDisplaySettingsGetResp)(nil),
		(*WSMessage_RegionOfInterestDisplaySettingsWriteReq)(nil),
		(*WSMessage_RegionOfInterestDisplaySettingsWriteResp)(nil),
		(*WSMessage_RegionOfInterestGetReq)(nil),
		(*WSMessage_RegionOfInterestGetResp)(nil),
		(*WSMessage_RegionOfInterestListReq)(nil),
		(*WSMessage_RegionOfInterestListResp)(nil),
		(*WSMessage_RegionOfInterestWriteReq)(nil),
		(*WSMessage_RegionOfInterestWriteResp)(nil),
		(*WSMessage_RunTestReq)(nil),
		(*WSMessage_RunTestResp)(nil),
		(*WSMessage_ScanAutoShareReq)(nil),
		(*WSMessage_ScanAutoShareResp)(nil),
		(*WSMessage_ScanAutoShareWriteReq)(nil),
		(*WSMessage_ScanAutoShareWriteResp)(nil),
		(*WSMessage_ScanBeamLocationsReq)(nil),
		(*WSMessage_ScanBeamLocationsResp)(nil),
		(*WSMessage_ScanDeleteReq)(nil),
		(*WSMessage_ScanDeleteResp)(nil),
		(*WSMessage_ScanEntryMetadataReq)(nil),
		(*WSMessage_ScanEntryMetadataResp)(nil),
		(*WSMessage_ScanEntryReq)(nil),
		(*WSMessage_ScanEntryResp)(nil),
		(*WSMessage_ScanGetReq)(nil),
		(*WSMessage_ScanGetResp)(nil),
		(*WSMessage_ScanListReq)(nil),
		(*WSMessage_ScanListResp)(nil),
		(*WSMessage_ScanListUpd)(nil),
		(*WSMessage_ScanMetaLabelsAndTypesReq)(nil),
		(*WSMessage_ScanMetaLabelsAndTypesResp)(nil),
		(*WSMessage_ScanMetaWriteReq)(nil),
		(*WSMessage_ScanMetaWriteResp)(nil),
		(*WSMessage_ScanTriggerAutoQuantReq)(nil),
		(*WSMessage_ScanTriggerAutoQuantResp)(nil),
		(*WSMessage_ScanTriggerReImportReq)(nil),
		(*WSMessage_ScanTriggerReImportResp)(nil),
		(*WSMessage_ScanTriggerReImportUpd)(nil),
		(*WSMessage_ScanUploadReq)(nil),
		(*WSMessage_ScanUploadResp)(nil),
		(*WSMessage_ScanUploadUpd)(nil),
		(*WSMessage_ScreenConfigurationDeleteReq)(nil),
		(*WSMessage_ScreenConfigurationDeleteResp)(nil),
		(*WSMessage_ScreenConfigurationGetReq)(nil),
		(*WSMessage_ScreenConfigurationGetResp)(nil),
		(*WSMessage_ScreenConfigurationListReq)(nil),
		(*WSMessage_ScreenConfigurationListResp)(nil),
		(*WSMessage_ScreenConfigurationWriteReq)(nil),
		(*WSMessage_ScreenConfigurationWriteResp)(nil),
		(*WSMessage_SelectedImagePixelsReq)(nil),
		(*WSMessage_SelectedImagePixelsResp)(nil),
		(*WSMessage_SelectedImagePixelsWriteReq)(nil),
		(*WSMessage_SelectedImagePixelsWriteResp)(nil),
		(*WSMessage_SelectedScanEntriesReq)(nil),
		(*WSMessage_SelectedScanEntriesResp)(nil),
		(*WSMessage_SelectedScanEntriesWriteReq)(nil),
		(*WSMessage_SelectedScanEntriesWriteResp)(nil),
		(*WSMessage_SendUserNotificationReq)(nil),
		(*WSMessage_SendUserNotificationResp)(nil),
		(*WSMessage_SpectrumReq)(nil),
		(*WSMessage_SpectrumResp)(nil),
		(*WSMessage_TagCreateReq)(nil),
		(*WSMessage_TagCreateResp)(nil),
		(*WSMessage_TagDeleteReq)(nil),
		(*WSMessage_TagDeleteResp)(nil),
		(*WSMessage_TagListReq)(nil),
		(*WSMessage_TagListResp)(nil),
		(*WSMessage_UserAddRoleReq)(nil),
		(*WSMessage_UserAddRoleResp)(nil),
		(*WSMessage_UserDeleteRoleReq)(nil),
		(*WSMessage_UserDeleteRoleResp)(nil),
		(*WSMessage_UserDetailsReq)(nil),
		(*WSMessage_UserDetailsResp)(nil),
		(*WSMessage_UserDetailsWriteReq)(nil),
		(*WSMessage_UserDetailsWriteResp)(nil),
		(*WSMessage_UserGroupAddAdminReq)(nil),
		(*WSMessage_UserGroupAddAdminResp)(nil),
		(*WSMessage_UserGroupAddMemberReq)(nil),
		(*WSMessage_UserGroupAddMemberResp)(nil),
		(*WSMessage_UserGroupAddViewerReq)(nil),
		(*WSMessage_UserGroupAddViewerResp)(nil),
		(*WSMessage_UserGroupCreateReq)(nil),
		(*WSMessage_UserGroupCreateResp)(nil),
		(*WSMessage_UserGroupDeleteAdminReq)(nil),
		(*WSMessage_UserGroupDeleteAdminResp)(nil),
		(*WSMessage_UserGroupDeleteMemberReq)(nil),
		(*WSMessage_UserGroupDeleteMemberResp)(nil),
		(*WSMessage_UserGroupDeleteReq)(nil),
		(*WSMessage_UserGroupDeleteResp)(nil),
		(*WSMessage_UserGroupDeleteViewerReq)(nil),
		(*WSMessage_UserGroupDeleteViewerResp)(nil),
		(*WSMessage_UserGroupEditDetailsReq)(nil),
		(*WSMessage_UserGroupEditDetailsResp)(nil),
		(*WSMessage_UserGroupIgnoreJoinReq)(nil),
		(*WSMessage_UserGroupIgnoreJoinResp)(nil),
		(*WSMessage_UserGroupJoinListReq)(nil),
		(*WSMessage_UserGroupJoinListResp)(nil),
		(*WSMessage_UserGroupJoinReq)(nil),
		(*WSMessage_UserGroupJoinResp)(nil),
		(*WSMessage_UserGroupListJoinableReq)(nil),
		(*WSMessage_UserGroupListJoinableResp)(nil),
		(*WSMessage_UserGroupListReq)(nil),
		(*WSMessage_UserGroupListResp)(nil),
		(*WSMessage_UserGroupReq)(nil),
		(*WSMessage_UserGroupResp)(nil),
		(*WSMessage_UserListReq)(nil),
		(*WSMessage_UserListResp)(nil),
		(*WSMessage_UserNotificationSettingsReq)(nil),
		(*WSMessage_UserNotificationSettingsResp)(nil),
		(*WSMessage_UserNotificationSettingsUpd)(nil),
		(*WSMessage_UserNotificationSettingsWriteReq)(nil),
		(*WSMessage_UserNotificationSettingsWriteResp)(nil),
		(*WSMessage_UserRoleListReq)(nil),
		(*WSMessage_UserRoleListResp)(nil),
		(*WSMessage_UserRolesListReq)(nil),
		(*WSMessage_UserRolesListResp)(nil),
		(*WSMessage_UserSearchReq)(nil),
		(*WSMessage_UserSearchResp)(nil),
		(*WSMessage_WidgetDataGetReq)(nil),
		(*WSMessage_WidgetDataGetResp)(nil),
		(*WSMessage_WidgetDataWriteReq)(nil),
		(*WSMessage_WidgetDataWriteResp)(nil),
		(*WSMessage_ZenodoDOIGetReq)(nil),
		(*WSMessage_ZenodoDOIGetResp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_websocket_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_websocket_proto_goTypes,
		DependencyIndexes: file_websocket_proto_depIdxs,
		EnumInfos:         file_websocket_proto_enumTypes,
		MessageInfos:      file_websocket_proto_msgTypes,
	}.Build()
	File_websocket_proto = out.File
	file_websocket_proto_rawDesc = nil
	file_websocket_proto_goTypes = nil
	file_websocket_proto_depIdxs = nil
}
