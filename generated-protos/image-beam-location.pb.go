// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: image-beam-location.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines beam locations of an individual location
type Coordinate2D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	I float32 `protobuf:"fixed32,1,opt,name=i,proto3" json:"i,omitempty"`
	J float32 `protobuf:"fixed32,2,opt,name=j,proto3" json:"j,omitempty"`
}

func (x *Coordinate2D) Reset() {
	*x = Coordinate2D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_beam_location_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate2D) ProtoMessage() {}

func (x *Coordinate2D) ProtoReflect() protoreflect.Message {
	mi := &file_image_beam_location_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate2D.ProtoReflect.Descriptor instead.
func (*Coordinate2D) Descriptor() ([]byte, []int) {
	return file_image_beam_location_proto_rawDescGZIP(), []int{0}
}

func (x *Coordinate2D) GetI() float32 {
	if x != nil {
		return x.I
	}
	return 0
}

func (x *Coordinate2D) GetJ() float32 {
	if x != nil {
		return x.J
	}
	return 0
}

// Locations relative to the image
type ImageLocationsForScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Which scan these are for
	ScanId      string         `protobuf:"bytes,1,opt,name=scanId,proto3" json:"scanId,omitempty"`
	BeamVersion uint32         `protobuf:"varint,3,opt,name=beamVersion,proto3" json:"beamVersion,omitempty"`
	Instrument  ScanInstrument `protobuf:"varint,4,opt,name=instrument,proto3,enum=ScanInstrument" json:"instrument,omitempty"`
	// The coordinates per entry within the scan (entry Id but entry index)
	// NOTE: This must have the same size as the scan entry array, otherwise
	//
	//	how do we know which coordinate maps to which scan entry?
	Locations []*Coordinate2D `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *ImageLocationsForScan) Reset() {
	*x = ImageLocationsForScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_beam_location_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageLocationsForScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageLocationsForScan) ProtoMessage() {}

func (x *ImageLocationsForScan) ProtoReflect() protoreflect.Message {
	mi := &file_image_beam_location_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageLocationsForScan.ProtoReflect.Descriptor instead.
func (*ImageLocationsForScan) Descriptor() ([]byte, []int) {
	return file_image_beam_location_proto_rawDescGZIP(), []int{1}
}

func (x *ImageLocationsForScan) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

func (x *ImageLocationsForScan) GetBeamVersion() uint32 {
	if x != nil {
		return x.BeamVersion
	}
	return 0
}

func (x *ImageLocationsForScan) GetInstrument() ScanInstrument {
	if x != nil {
		return x.Instrument
	}
	return ScanInstrument_UNKNOWN_INSTRUMENT
}

func (x *ImageLocationsForScan) GetLocations() []*Coordinate2D {
	if x != nil {
		return x.Locations
	}
	return nil
}

// Full structure of an image and all locations returned along with the scan
// they are relative to
type ImageLocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageName       string                   `protobuf:"bytes,1,opt,name=imageName,proto3" json:"imageName,omitempty" bson:"_id,omitempty"`  
	LocationPerScan []*ImageLocationsForScan `protobuf:"bytes,2,rep,name=locationPerScan,proto3" json:"locationPerScan,omitempty"`
}

func (x *ImageLocations) Reset() {
	*x = ImageLocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_image_beam_location_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageLocations) ProtoMessage() {}

func (x *ImageLocations) ProtoReflect() protoreflect.Message {
	mi := &file_image_beam_location_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageLocations.ProtoReflect.Descriptor instead.
func (*ImageLocations) Descriptor() ([]byte, []int) {
	return file_image_beam_location_proto_rawDescGZIP(), []int{2}
}

func (x *ImageLocations) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ImageLocations) GetLocationPerScan() []*ImageLocationsForScan {
	if x != nil {
		return x.LocationPerScan
	}
	return nil
}

var File_image_beam_location_proto protoreflect.FileDescriptor

var file_image_beam_location_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2d, 0x62, 0x65, 0x61, 0x6d, 0x2d, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x73, 0x63, 0x61,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x32, 0x44, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x6a, 0x22, 0xaf, 0x01, 0x0a, 0x15, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x63, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65, 0x61, 0x6d, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x6d,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x32, 0x44, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_image_beam_location_proto_rawDescOnce sync.Once
	file_image_beam_location_proto_rawDescData = file_image_beam_location_proto_rawDesc
)

func file_image_beam_location_proto_rawDescGZIP() []byte {
	file_image_beam_location_proto_rawDescOnce.Do(func() {
		file_image_beam_location_proto_rawDescData = protoimpl.X.CompressGZIP(file_image_beam_location_proto_rawDescData)
	})
	return file_image_beam_location_proto_rawDescData
}

var file_image_beam_location_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_image_beam_location_proto_goTypes = []interface{}{
	(*Coordinate2D)(nil),          // 0: Coordinate2D
	(*ImageLocationsForScan)(nil), // 1: ImageLocationsForScan
	(*ImageLocations)(nil),        // 2: ImageLocations
	(ScanInstrument)(0),           // 3: ScanInstrument
}
var file_image_beam_location_proto_depIdxs = []int32{
	3, // 0: ImageLocationsForScan.instrument:type_name -> ScanInstrument
	0, // 1: ImageLocationsForScan.locations:type_name -> Coordinate2D
	1, // 2: ImageLocations.locationPerScan:type_name -> ImageLocationsForScan
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_image_beam_location_proto_init() }
func file_image_beam_location_proto_init() {
	if File_image_beam_location_proto != nil {
		return
	}
	file_scan_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_image_beam_location_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate2D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_image_beam_location_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageLocationsForScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_image_beam_location_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageLocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_image_beam_location_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_image_beam_location_proto_goTypes,
		DependencyIndexes: file_image_beam_location_proto_depIdxs,
		MessageInfos:      file_image_beam_location_proto_msgTypes,
	}.Build()
	File_image_beam_location_proto = out.File
	file_image_beam_location_proto_rawDesc = nil
	file_image_beam_location_proto_goTypes = nil
	file_image_beam_location_proto_depIdxs = nil
}
