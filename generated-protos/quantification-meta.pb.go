// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: quantification-meta.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO: Quants likely need to change to accommodate quantifying spectra from multiple
// datasets together??
type QuantStartingParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DataBucket        string   `protobuf:"bytes,2,opt,name=dataBucket,proto3" json:"dataBucket,omitempty"`
	DatasetPath       string   `protobuf:"bytes,3,opt,name=datasetPath,proto3" json:"datasetPath,omitempty"`
	DatasetID         string   `protobuf:"bytes,4,opt,name=datasetID,proto3" json:"datasetID,omitempty"`
	PiquantJobsBucket string   `protobuf:"bytes,5,opt,name=piquantJobsBucket,proto3" json:"piquantJobsBucket,omitempty"`
	DetectorConfig    string   `protobuf:"bytes,6,opt,name=detectorConfig,proto3" json:"detectorConfig,omitempty"`
	Elements          []string `protobuf:"bytes,7,rep,name=elements,proto3" json:"elements,omitempty"`
	Parameters        string   `protobuf:"bytes,8,opt,name=parameters,proto3" json:"parameters,omitempty"`
	RunTimeSec        uint32   `protobuf:"varint,9,opt,name=runTimeSec,proto3" json:"runTimeSec,omitempty"`
	CoresPerNode      uint32   `protobuf:"varint,10,opt,name=coresPerNode,proto3" json:"coresPerNode,omitempty"`
	StartUnixTimeSec  uint32   `protobuf:"varint,11,opt,name=startUnixTimeSec,proto3" json:"startUnixTimeSec,omitempty"`
	RequestorUserId   string   `protobuf:"bytes,12,opt,name=requestorUserId,proto3" json:"requestorUserId,omitempty"`
	RoiID             string   `protobuf:"bytes,13,opt,name=roiID,proto3" json:"roiID,omitempty"`
	ElementSetID      string   `protobuf:"bytes,14,opt,name=elementSetID,proto3" json:"elementSetID,omitempty"`
	PIQUANTVersion    string   `protobuf:"bytes,15,opt,name=PIQUANTVersion,proto3" json:"PIQUANTVersion,omitempty"`
	QuantMode         string   `protobuf:"bytes,16,opt,name=quantMode,proto3" json:"quantMode,omitempty"`
	Comments          string   `protobuf:"bytes,17,opt,name=comments,proto3" json:"comments,omitempty"`
	RoiIDs            []string `protobuf:"bytes,18,rep,name=roiIDs,proto3" json:"roiIDs,omitempty"`
	IncludeDwells     bool     `protobuf:"varint,19,opt,name=includeDwells,proto3" json:"includeDwells,omitempty"`
	Command           string   `protobuf:"bytes,20,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *QuantStartingParameters) Reset() {
	*x = QuantStartingParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantification_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantStartingParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantStartingParameters) ProtoMessage() {}

func (x *QuantStartingParameters) ProtoReflect() protoreflect.Message {
	mi := &file_quantification_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantStartingParameters.ProtoReflect.Descriptor instead.
func (*QuantStartingParameters) Descriptor() ([]byte, []int) {
	return file_quantification_meta_proto_rawDescGZIP(), []int{0}
}

func (x *QuantStartingParameters) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuantStartingParameters) GetDataBucket() string {
	if x != nil {
		return x.DataBucket
	}
	return ""
}

func (x *QuantStartingParameters) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *QuantStartingParameters) GetDatasetID() string {
	if x != nil {
		return x.DatasetID
	}
	return ""
}

func (x *QuantStartingParameters) GetPiquantJobsBucket() string {
	if x != nil {
		return x.PiquantJobsBucket
	}
	return ""
}

func (x *QuantStartingParameters) GetDetectorConfig() string {
	if x != nil {
		return x.DetectorConfig
	}
	return ""
}

func (x *QuantStartingParameters) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *QuantStartingParameters) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

func (x *QuantStartingParameters) GetRunTimeSec() uint32 {
	if x != nil {
		return x.RunTimeSec
	}
	return 0
}

func (x *QuantStartingParameters) GetCoresPerNode() uint32 {
	if x != nil {
		return x.CoresPerNode
	}
	return 0
}

func (x *QuantStartingParameters) GetStartUnixTimeSec() uint32 {
	if x != nil {
		return x.StartUnixTimeSec
	}
	return 0
}

func (x *QuantStartingParameters) GetRequestorUserId() string {
	if x != nil {
		return x.RequestorUserId
	}
	return ""
}

func (x *QuantStartingParameters) GetRoiID() string {
	if x != nil {
		return x.RoiID
	}
	return ""
}

func (x *QuantStartingParameters) GetElementSetID() string {
	if x != nil {
		return x.ElementSetID
	}
	return ""
}

func (x *QuantStartingParameters) GetPIQUANTVersion() string {
	if x != nil {
		return x.PIQUANTVersion
	}
	return ""
}

func (x *QuantStartingParameters) GetQuantMode() string {
	if x != nil {
		return x.QuantMode
	}
	return ""
}

func (x *QuantStartingParameters) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *QuantStartingParameters) GetRoiIDs() []string {
	if x != nil {
		return x.RoiIDs
	}
	return nil
}

func (x *QuantStartingParameters) GetIncludeDwells() bool {
	if x != nil {
		return x.IncludeDwells
	}
	return false
}

func (x *QuantStartingParameters) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type QuantStartingParametersWithPMCCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params   *QuantStartingParameters `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	PMCCount uint32                   `protobuf:"varint,2,opt,name=PMCCount,proto3" json:"PMCCount,omitempty"`
}

func (x *QuantStartingParametersWithPMCCount) Reset() {
	*x = QuantStartingParametersWithPMCCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantification_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantStartingParametersWithPMCCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantStartingParametersWithPMCCount) ProtoMessage() {}

func (x *QuantStartingParametersWithPMCCount) ProtoReflect() protoreflect.Message {
	mi := &file_quantification_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantStartingParametersWithPMCCount.ProtoReflect.Descriptor instead.
func (*QuantStartingParametersWithPMCCount) Descriptor() ([]byte, []int) {
	return file_quantification_meta_proto_rawDescGZIP(), []int{1}
}

func (x *QuantStartingParametersWithPMCCount) GetParams() *QuantStartingParameters {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *QuantStartingParametersWithPMCCount) GetPMCCount() uint32 {
	if x != nil {
		return x.PMCCount
	}
	return 0
}

type QuantStartingParametersWithPMCs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *QuantStartingParameters `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	PMCs   []uint32                 `protobuf:"varint,2,rep,packed,name=PMCs,proto3" json:"PMCs,omitempty"`
}

func (x *QuantStartingParametersWithPMCs) Reset() {
	*x = QuantStartingParametersWithPMCs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantification_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantStartingParametersWithPMCs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantStartingParametersWithPMCs) ProtoMessage() {}

func (x *QuantStartingParametersWithPMCs) ProtoReflect() protoreflect.Message {
	mi := &file_quantification_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantStartingParametersWithPMCs.ProtoReflect.Descriptor instead.
func (*QuantStartingParametersWithPMCs) Descriptor() ([]byte, []int) {
	return file_quantification_meta_proto_rawDescGZIP(), []int{2}
}

func (x *QuantStartingParametersWithPMCs) GetParams() *QuantStartingParameters {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *QuantStartingParametersWithPMCs) GetPMCs() []uint32 {
	if x != nil {
		return x.PMCs
	}
	return nil
}

type QuantCreateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DatasetPath     string   `protobuf:"bytes,2,opt,name=datasetPath,proto3" json:"datasetPath,omitempty"`
	Pmcs            []string `protobuf:"bytes,3,rep,name=pmcs,proto3" json:"pmcs,omitempty"`
	Elements        []string `protobuf:"bytes,4,rep,name=elements,proto3" json:"elements,omitempty"`
	Detectorconfig  string   `protobuf:"bytes,5,opt,name=detectorconfig,proto3" json:"detectorconfig,omitempty"`
	Parameters      string   `protobuf:"bytes,6,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Runtimesec      uint32   `protobuf:"varint,7,opt,name=runtimesec,proto3" json:"runtimesec,omitempty"`
	RoiID           string   `protobuf:"bytes,8,opt,name=roiID,proto3" json:"roiID,omitempty"` // There is now a list of ROI IDs that can be provided too. More relevant with the QuantMode *Bulk options
	ElementSetID    string   `protobuf:"bytes,9,opt,name=elementSetID,proto3" json:"elementSetID,omitempty"`
	DatasetId       string   `protobuf:"bytes,10,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	RequestorUserId string   `protobuf:"bytes,11,opt,name=requestorUserId,proto3" json:"requestorUserId,omitempty"` // Probably not correct for existing containers...
	QuantMode       string   `protobuf:"bytes,12,opt,name=quantMode,proto3" json:"quantMode,omitempty"`
	RoiIDs          []string `protobuf:"bytes,13,rep,name=roiIDs,proto3" json:"roiIDs,omitempty"` // If QuantMode = *Bulk, this is used, pmcs is ignored.
	IncludeDwells   bool     `protobuf:"varint,14,opt,name=includeDwells,proto3" json:"includeDwells,omitempty"`
	Command         string   `protobuf:"bytes,15,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *QuantCreateParams) Reset() {
	*x = QuantCreateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantification_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantCreateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantCreateParams) ProtoMessage() {}

func (x *QuantCreateParams) ProtoReflect() protoreflect.Message {
	mi := &file_quantification_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantCreateParams.ProtoReflect.Descriptor instead.
func (*QuantCreateParams) Descriptor() ([]byte, []int) {
	return file_quantification_meta_proto_rawDescGZIP(), []int{3}
}

func (x *QuantCreateParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuantCreateParams) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *QuantCreateParams) GetPmcs() []string {
	if x != nil {
		return x.Pmcs
	}
	return nil
}

func (x *QuantCreateParams) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *QuantCreateParams) GetDetectorconfig() string {
	if x != nil {
		return x.Detectorconfig
	}
	return ""
}

func (x *QuantCreateParams) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

func (x *QuantCreateParams) GetRuntimesec() uint32 {
	if x != nil {
		return x.Runtimesec
	}
	return 0
}

func (x *QuantCreateParams) GetRoiID() string {
	if x != nil {
		return x.RoiID
	}
	return ""
}

func (x *QuantCreateParams) GetElementSetID() string {
	if x != nil {
		return x.ElementSetID
	}
	return ""
}

func (x *QuantCreateParams) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *QuantCreateParams) GetRequestorUserId() string {
	if x != nil {
		return x.RequestorUserId
	}
	return ""
}

func (x *QuantCreateParams) GetQuantMode() string {
	if x != nil {
		return x.QuantMode
	}
	return ""
}

func (x *QuantCreateParams) GetRoiIDs() []string {
	if x != nil {
		return x.RoiIDs
	}
	return nil
}

func (x *QuantCreateParams) GetIncludeDwells() bool {
	if x != nil {
		return x.IncludeDwells
	}
	return false
}

func (x *QuantCreateParams) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type QuantificationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,omitempty"`  
	Params   *QuantStartingParametersWithPMCCount `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Elements []string                             `protobuf:"bytes,3,rep,name=elements,proto3" json:"elements,omitempty"`
	Status   *JobStatus                           `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // TODO: Make this also contain *APIObjectItem and remove its own Shared field...
}

func (x *QuantificationSummary) Reset() {
	*x = QuantificationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantification_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantificationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantificationSummary) ProtoMessage() {}

func (x *QuantificationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_quantification_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantificationSummary.ProtoReflect.Descriptor instead.
func (*QuantificationSummary) Descriptor() ([]byte, []int) {
	return file_quantification_meta_proto_rawDescGZIP(), []int{4}
}

func (x *QuantificationSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuantificationSummary) GetParams() *QuantStartingParametersWithPMCCount {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *QuantificationSummary) GetElements() []string {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *QuantificationSummary) GetStatus() *JobStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_quantification_meta_proto protoreflect.FileDescriptor

var file_quantification_meta_proto_rawDesc = []byte{
	0x0a, 0x19, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x6a, 0x6f, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x05, 0x0a, 0x17, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x69, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x75,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x69,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x69, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x69, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e,
	0x50, 0x49, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x49, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x69, 0x49, 0x44, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x69, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x44, 0x77, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x77, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x73, 0x0a, 0x23, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x4d, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x4d, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x50, 0x4d, 0x43, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x1f, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x4d, 0x43, 0x73, 0x12, 0x30,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x4d, 0x43, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x50, 0x4d, 0x43, 0x73, 0x22, 0xda, 0x03, 0x0a, 0x11, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6d, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6d, 0x63, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x69, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x69, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x49, 0x44, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x69,
	0x49, 0x44, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x69, 0x49, 0x44,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x77, 0x65, 0x6c,
	0x6c, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x44, 0x77, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x4d, 0x43, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quantification_meta_proto_rawDescOnce sync.Once
	file_quantification_meta_proto_rawDescData = file_quantification_meta_proto_rawDesc
)

func file_quantification_meta_proto_rawDescGZIP() []byte {
	file_quantification_meta_proto_rawDescOnce.Do(func() {
		file_quantification_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_quantification_meta_proto_rawDescData)
	})
	return file_quantification_meta_proto_rawDescData
}

var file_quantification_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_quantification_meta_proto_goTypes = []interface{}{
	(*QuantStartingParameters)(nil),             // 0: QuantStartingParameters
	(*QuantStartingParametersWithPMCCount)(nil), // 1: QuantStartingParametersWithPMCCount
	(*QuantStartingParametersWithPMCs)(nil),     // 2: QuantStartingParametersWithPMCs
	(*QuantCreateParams)(nil),                   // 3: QuantCreateParams
	(*QuantificationSummary)(nil),               // 4: QuantificationSummary
	(*JobStatus)(nil),                           // 5: JobStatus
}
var file_quantification_meta_proto_depIdxs = []int32{
	0, // 0: QuantStartingParametersWithPMCCount.params:type_name -> QuantStartingParameters
	0, // 1: QuantStartingParametersWithPMCs.params:type_name -> QuantStartingParameters
	1, // 2: QuantificationSummary.params:type_name -> QuantStartingParametersWithPMCCount
	5, // 3: QuantificationSummary.status:type_name -> JobStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_quantification_meta_proto_init() }
func file_quantification_meta_proto_init() {
	if File_quantification_meta_proto != nil {
		return
	}
	file_job_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_quantification_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantStartingParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantification_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantStartingParametersWithPMCCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantification_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantStartingParametersWithPMCs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantification_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantCreateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantification_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantificationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quantification_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_quantification_meta_proto_goTypes,
		DependencyIndexes: file_quantification_meta_proto_depIdxs,
		MessageInfos:      file_quantification_meta_proto_msgTypes,
	}.Build()
	File_quantification_meta_proto = out.File
	file_quantification_meta_proto_rawDesc = nil
	file_quantification_meta_proto_goTypes = nil
	file_quantification_meta_proto_depIdxs = nil
}
