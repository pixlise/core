diff a/internal/cmdline-tools/api-integration-test/integrationTest.go b/internal/cmdline-tools/api-integration-test/integrationTest.go	(rejected hunks)
@@ -45,19 +33,19 @@ import (
 	"strings"
 	"time"
 
-	apiNotifications "github.com/pixlise/core/core/notifications"
+	apiNotifications "gitlab.com/pixlise/pixlise-go-api/core/notifications"
 
-	"github.com/pixlise/core/api/endpoints"
-	"github.com/pixlise/core/core/auth0login"
-	datasetModel "github.com/pixlise/core/core/dataset"
-	"github.com/pixlise/core/core/utils"
-	protos "github.com/pixlise/core/generated-protos"
+	"gitlab.com/pixlise/pixlise-go-api/api/endpoints"
+	"gitlab.com/pixlise/pixlise-go-api/core/auth0login"
+	datasetModel "gitlab.com/pixlise/pixlise-go-api/core/dataset"
+	"gitlab.com/pixlise/pixlise-go-api/core/utils"
+	protos "gitlab.com/pixlise/pixlise-go-api/generated-protos"
 
 	"google.golang.org/protobuf/proto"
 )
 
 func generateURL(environment string, review bool) string {
-	if !review {
+	if review {
 		return "https://" + environment + "-api.review.pixlise.org"
 	} else {
 		return "https://" + environment + "-api.pixlise.org"
@@ -210,7 +198,7 @@ func quantVerification(JWT string, environment string, review bool, datasetID st
 	}
 	pmcListOfStrings += "]"
 
-	var jsonStr = `{"name":"` + quantName + `","pmcs":` + pmcListOfStrings + `,"elements":` + elementList + `,"parameters":"-q,pPIETXCFsr -b,0,12,60,910,2800,16","detectorConfig":` + detectorConfig + `,"runTimeSec":60,"roiID":null,"elementSetID":"","quantMode":"Combined"}`
+	var jsonStr = `{"name":"` + quantName + `","pmcs":` + pmcListOfStrings + `,"elements":` + elementList + `,"parameters":"-q,pPIETXCFsr -b,0,12,60,910,2800,16","detectorConfig":` + detectorConfig + `,"runTimeSec":60,"roiID":null,"elementSetID":"","command":"map","quantMode":"Combined"}`
 	req, err := http.NewRequest("POST", generateURL(environment, review)+"/quantification/"+datasetID, bytes.NewBuffer([]byte(jsonStr)))
 	req.Header.Set("Authorization", "Bearer "+JWT)
 
