package notifications

import (
	"fmt"
	"gitlab.com/pixlise/pixlise-go-api/awsutil"
	"time"
)

func Example_sendUINotification(){
	var notes []UINotificationObj
	stack := NotificationStack{
		Notifications: notes,
		S3svc:         nil,
	}

	topic := "new-dataset-available"
	template := make(map[string]interface{})
	sub := UserStruct{}

	text, err := generateTxtEmailContent(sub, topic+"-ui", template)
	if err != nil {
		fmt.Printf(err.Error())
	}

	notification := UINotificationObj{
		Topic:     topic,
		Message:   text,
		Timestamp: time.Time{},
		UserID:    "tom@spicule.co.uk",
	}

	err = stack.SendUINotification(notification)

	if err !=nil{
		fmt.Printf(err.Error())
	}

	// Output:
	//


}


func Example_sendUI(){
	var notes []UINotificationObj

	session, err := awsutil.GetSession()
	svcs, err := awsutil.GetS3(session)

	stack := NotificationStack{
		Notifications: notes,
		S3svc:         svcs,
		Bucket: "devstack-persistencepixlisedata4f446ecf-1corom7nbx3uv",
	}

	template := make(map[string]interface{})

	template["datasourcename"] = "test datasource"

	err = stack.SendUI("test-dataset-available", template, nil)
	if err != nil{
		fmt.Printf(err.Error())
	}

	notifications, _ := stack.GetUINotifications("5e3b3bc480ee5c191714d6b7")

	fmt.Printf("%v\n", notifications[0].Topic)
	fmt.Printf("%v\n", notifications[0].UserID)

	//Output:
	//UI Subs found: 1
	//Adding notification to UI stack: 5e3b3bc480ee5c191714d6b7
	//test-dataset-available
	//5e3b3bc480ee5c191714d6b7
}
